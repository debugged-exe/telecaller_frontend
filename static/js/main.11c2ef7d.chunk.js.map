{"version":3,"sources":["Container/Images/FormBg.png","Container/Images/Background.png","Components/Form/Form.jsx","Container/Images/Logo.jpeg","Components/Home/Home.jsx","Components/SignInPage/SignInPage.jsx","Components/Table/Row.js","Components/Table/Table.js","Components/LogTable/LogRow.js","Components/LogTable/LogTable.js","Components/BatchTable/BatchRow.js","Components/BatchTable/BatchTable.js","Components/Admin/Admin.js","Components/Navbar/Navbar.js","Components/JrTable/JrRow.js","Components/JrTable/JrTable.js","Components/JrCaller/JrCaller.jsx","Components/SrTable/SrRow.js","Components/SrTable/SrTable.js","Components/ModalTable/ModalRow.js","Components/ModalTable/ModalTable.js","Components/SrCaller/SrCaller.jsx","App.js","reportWebVitals.js","index.js"],"names":["require","config","Form","useState","name","setName","nameFlag","setNameFlag","nameErr","setNameErr","nameValidate","event","mobile","setMobile","mobileFlag","setMobileFlag","mobileErr","setMobileErr","mobileValidate","length","permCity","setPermCity","permCityFlag","setPermCityFlag","permCityErr","setPermCityErr","permCityValidate","knowledge","setKnowledge","demat","setDemat","broker","setBroker","preferredLang","setPreferredLang","preferredLangFlag","setPreferredLangFlag","preferredLangErr","setPreferredLangErr","preferredLangValidate","submitErr","setSubmitErr","recaptchaRef","React","useRef","captchaFlag","setCaptchaFlag","captchaErr","setCaptchaErr","captchaValidate","current","getValue","console","log","process","style","backgroundImage","Background","className","FormBg","id","htmlFor","autoComplete","type","onChange","target","value","setNameField","onBlur","setMobileField","onInput","replace","numericFilter","setPermCityField","setKnowledgeField","setDematField","placeholder","setBrokerField","setPreferredLangField","ref","sitekey","onClick","fetch","method","headers","body","JSON","stringify","city","then","response","json","resp","alert","catch","err","Home","onRouteChange","width","height","src","Logo","alt","href","SignInPage","loadUser","username","setUserName","usernameFlag","setUserNameFlag","usernameErr","setUserNameErr","usernameValidate","password","setPassword","passwordFlag","setPasswordFlag","passwordErr","setPasswordErr","passwordValidate","popState","setPopState","submit","des","onSubmitHandler","display","setUserNameField","setPasswordField","Row","rowObject","showHandler","lead_id","lead_phone_number","keyArr","Object","keys","elementArray","forEach","key","push","read","setRead","setUsername","lead_name","setLeadName","whatsapp_number","setWhatsapp","accountopening_number","setAccountOpening","call_status_1","setStatus1","call_status_2","setStatus2","updatehandover","setUpdateHandover","lead_city","setLeadCity","prior_knowledge","dmat_acc","setDmat_acc","preferred_lang","setLanguage","microsoftid","setMicrosoftId","coded","setCoded","broker_name","onCheck","checked","onAddToBatch","getAttribute","window","confirm","map","item","index","disabled","padding","readOnly","cursor","Table","headerArray","ContentArray","cellSpacing","LogRow","LogTable","BatchRow","BatchTable","Admin","leadData","setLeadData","filter","setFilter","setUsernameFlag","setUsernameErr","telecaller_id","setTelecaller","telecallerFlag","setTelecallerFlag","telecallerErr","setTelecallerErr","telecallerValidate","setDes","desFlag","setDesFlag","desErr","setDesErr","desValidate","setAssigned","document","getElementById","assigned","assignedFlag","setAssignedFlag","assignedErr","setAssignedErr","setPopStateField","popPayState","setPopPayState","teleId","setTeleId","logContentArray","setLogContentArray","setPopPayStateField","popBatch","setPopBatch","setPopBatches","fetchBatch","batch","setBatchContentArray","batchContentArray","setBatch","changeBatch","srCaller","setSrCaller","useEffect","flexDirection","justifyCenter","itemsCenter","setUsernameField","setTelecallerField","setDesField","setAssignedField","zIndex","setTeleIdField","class","backgroundColor","batchHandler","setFilterField","Navbar","route","navbar","setNavbar","dropdown","setDropdown","line","setLine","hamburger","color","listStyle","JrRow","disable","onRefresh","handoverstatus","status1","status2","JrTable","JrCaller","user","newArr","SrRow","setJrCaller","SrTable","contentArray","ModalRow","fetchLogs","update","setUpdate","ModalTable","SrCaller","props","setPreviewState","s1","setState","setPreview","state","jrCaller","jrName","jrTeleId","jrContent","username1","telecaller_id1","data","this","isOpen","ariaHideApp","Component","initialState","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.11c2ef7d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FormBg.5ab80fbd.png\";","export default __webpack_public_path__ + \"static/media/Background.23e06f01.png\";","import React,{useState} from 'react';\r\nimport FormBg from '../../Container/Images/FormBg.png';\r\nimport Background from '../../Container/Images/Background.png';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nrequire('dotenv').config();\r\n \r\nconst Form = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameFlag, setNameFlag] = useState(false);\r\n    const [nameErr, setNameErr] = useState(\"\");\r\n\r\n    const setNameField = (event) => {\r\n     setName(event.target.value);\r\n    }\r\n\r\n    const nameValidate = (event) => {\r\n    if(name!==\"\")\r\n    {\r\n      setNameFlag(true);\r\n      setNameErr(\"\");\r\n    }\r\n    else\r\n    {\r\n      setNameFlag(false);\r\n      setNameErr(\"*Name Field is compulsary\");\r\n    }\r\n    }\r\n\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [mobileFlag, setMobileFlag] = useState(false);\r\n    const [mobileErr, setMobileErr] = useState(\"\");\r\n\r\n    const setMobileField = (event) => {\r\n    setMobile(event.target.value);\r\n    }\r\n\r\n    const numericFilter = (event) => {\r\n    event.target.value = event.target.value.replace(/[^\\0-9]/ig, \"\");\r\n    }\r\n\r\n    const mobileValidate = (event) => {\r\n    if(mobile===\"\")\r\n    {\r\n      setMobileFlag(false);\r\n      setMobileErr(\"Phone number field is compulsary\");\r\n    }\r\n    else if(mobile.length!==10)\r\n    {\r\n      setMobileFlag(false);\r\n      setMobileErr(\"Enter valid phone no(eg: 9123456780)\")\r\n    }\r\n    else\r\n    {\r\n      setMobileFlag(true);\r\n      setMobileErr(\"\");\r\n    }\r\n    }\r\n\r\n    const [permCity, setPermCity] = useState(\"none\");\r\n    const [permCityFlag, setPermCityFlag] = useState(false);\r\n    const [permCityErr, setPermCityErr] = useState(\"\");\r\n\r\n    const setPermCityField = (event) => {\r\n    setPermCity(event.target.value);\r\n    }\r\n\r\n    const permCityValidate = () => {\r\n    if(permCity===\"none\")\r\n    {\r\n      setPermCityFlag(false);\r\n      setPermCityErr(\"*City field is compulsary\");\r\n    }\r\n    else\r\n    {\r\n      setPermCityFlag(true);\r\n      setPermCityErr(\"\");\r\n    }\r\n    }\r\n\r\n    const [knowledge, setKnowledge] = useState(\"No\");\r\n\r\n    const setKnowledgeField = (event) => {\r\n    setKnowledge(event.target.value);\r\n    }\r\n\r\n    const [demat, setDemat] = useState('No')\r\n\r\n    const setDematField = (event) => {\r\n        setDemat(event.target.value);\r\n    }\r\n\r\n    const [broker, setBroker] = useState('')\r\n\r\n    const setBrokerField = (event) => {\r\n        setBroker(event.target.value);\r\n    }\r\n\r\n    const [preferredLang, setPreferredLang] = useState('None')\r\n    const [preferredLangFlag, setPreferredLangFlag] = useState(false)\r\n    const [preferredLangErr, setPreferredLangErr] = useState('')\r\n\r\n    const setPreferredLangField = (event) => {\r\n        setPreferredLang(event.target.value);\r\n    }\r\n\r\n    const preferredLangValidate = () => {\r\n        if(preferredLang==='None')\r\n        {\r\n            setPreferredLangFlag(false)\r\n            setPreferredLangErr('Preferred Language is compulsary.')\r\n        }\r\n        else\r\n        {\r\n            setPreferredLangFlag(true)\r\n            setPreferredLangErr('')\r\n        }\r\n    }\r\n\r\n    const [submitErr, setSubmitErr] = useState('')\r\n\r\n    const onSubmitHandler = () => {\r\n        if(\r\n            nameFlag===true &&\r\n            mobileFlag===true &&\r\n            permCityFlag===true &&\r\n            preferredLangFlag===true &&\r\n            captchaFlag === true\r\n        )\r\n        {\r\n            fetch('https://frozen-river-89705.herokuapp.com/form', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                name: name,\r\n                mobile: mobile,\r\n                city: permCity,\r\n                knowledge: knowledge,\r\n                demat: demat,\r\n                broker: broker,\r\n                preferredLang: preferredLang\r\n                })\r\n             })\r\n            .then(response => response.json())\r\n            .then(resp => {\r\n                if(resp==='Registered')\r\n                {\r\n                    alert('Registered successfully.A CyberKing representative will call you shortly.')\r\n                }\r\n                else if(resp==='Not Unique.')\r\n                {\r\n                    alert('Looks like you have already registered with the given mobile no.Please enter other contact no.');\r\n                }\r\n                else\r\n                {\r\n                    alert('OOPs....something went wrong.Please try again.')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n            setSubmitErr('')\r\n        }\r\n        else{\r\n            nameValidate();\r\n            captchaValidate();\r\n            mobileValidate();\r\n            permCityValidate();\r\n            preferredLangValidate();\r\n            setSubmitErr('Check if all fields are set correclty.')\r\n        }\r\n    }\r\n    const recaptchaRef = React.useRef();\r\n    const [captchaFlag, setCaptchaFlag] = useState(false);\r\n    const [captchaErr, setCaptchaErr] = useState(\"\");\r\n    function onCapChange(value) {\r\n        if(value!==\"\"){\r\n          setCaptchaFlag(true)\r\n          setCaptchaErr(\"\")\r\n        }\r\n      }\r\n\r\n      const captchaValidate = (event) => {\r\n        const val = recaptchaRef.current.getValue()\r\n        if(val===\"\")\r\n        {\r\n          setCaptchaFlag(false);\r\n          setCaptchaErr(\"*Please solve the captcha.\");\r\n  \r\n        }\r\n        else\r\n        {\r\n          setCaptchaFlag(true);\r\n          setCaptchaErr(\"\");\r\n        }\r\n    }\r\n\r\n    console.log(process.env.REACT_APP_CAPTCHA_API_KEY);\r\n\r\n    return (\r\n        <div style={{backgroundImage: `url(${Background})`}}className='flex items-center pv4 justify-center'>\r\n            <div className='w-100'>\r\n            <form style={{backgroundImage:`url(${FormBg})`}} className=\"measure center br3 shadow-2\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent mh0\">\r\n\r\n                <legend className=\"f2 fw6 ph0 mh0 pv2 tc\">Session Joining Form</legend>\r\n                <hr/>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Name</label>\r\n\t\t                <input \r\n                        autoComplete=\"blej\" \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"text\" \r\n                        onChange={(event) => setNameField(event)}\r\n                        onBlur={() => nameValidate()}/>\r\n                        <div className=\"f4 red\">{`${nameErr}`}</div>\r\n                    </div>\r\n\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Phone</label>\r\n\t\t                <input \r\n                        autoComplete=\"blej\"\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"text\" \r\n                        onChange={(event) => setMobileField(event)}\r\n                        onBlur={() => mobileValidate()}\r\n                        onInput={(event) => numericFilter(event)}/>\r\n                        <div className=\"f4 red\">{`${mobileErr}`}</div>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">City</label>\r\n\t\t                <input  \r\n                        autoComplete=\"blej\"\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"text\" \r\n                        onChange={(event) => setPermCityField(event)}\r\n                        onBlur={() => permCityValidate()}\r\n                        />\r\n                        <div className=\"f4 red\">{`${permCityErr}`}</div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\">Do you have any prior Trading Knowledge?</label>\r\n\t\t                <select \r\n                        autoComplete=\"blej\"\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                        onChange={(event) => setKnowledgeField(event)}\r\n                        >\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4 greyed' value='None'>---Select---</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value='Yes'>Yes</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value='No'>No</option>\r\n\t\t                </select>\r\n                    </div>\r\n\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\">Do you have a Demat Account?</label>\r\n\t\t                <select \r\n                        autoComplete=\"blej\"\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                        onChange={(event) => setDematField(event)}>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4 greyed' value='No'>---Select---</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value='Yes'>Yes</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value='No'>No</option>\r\n\t\t                </select>\r\n                    </div>\r\n\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Broker Name</label>\r\n\t\t                <input  \r\n                        autoComplete=\"blej\"\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"text\" \r\n                        placeholder='eg: Zerodha, Upstox' \r\n                        onChange={(event) => setBrokerField(event)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\">Preferred Language</label>\r\n\t\t                <select \r\n                        autoComplete=\"blej\"\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                        onChange={(event) => setPreferredLangField(event)}\r\n                        onBlur={() => preferredLangValidate()}\r\n                        >\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4 greyed' value='None'>---Select---</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value=\"English\">English</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value=\"Marathi\">Marathi</option>\r\n\t\t        \t        <option className = 'db fw6 lh-copy f4' value=\"Marathi\">Hindi</option>\r\n\t\t                </select>\r\n                        <div className=\"f4 red\">{`${preferredLangErr}`}</div>\r\n                    </div>\r\n                    <ReCAPTCHA\r\n                    ref={recaptchaRef}\r\n                    sitekey={process.env.REACT_APP_CAPTCHA_API_KEY}\r\n                    onChange={onCapChange}\r\n                    />\r\n                    <div className=\"f4 red\">{`${captchaErr}`}</div>\r\n                </fieldset>\r\n                <div className=\"flex justify-center items-center\">\r\n                        <input \r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f4 dib mb3\" \r\n                        type=\"button\" \r\n                        value=\"Submit\" \r\n                        onClick = {() => onSubmitHandler()}/>\r\n                        <div className=\"f4 red\">{`${submitErr}`}</div>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/Logo.7cc317cf.jpeg\";","import React from 'react';\r\nimport 'tachyons';\r\nimport Logo from '../../Container/Images/Logo.jpeg';\r\nimport './Home.css';\r\n\r\nconst Home = ({onRouteChange}) => {\r\n    return (\r\n        <div>\r\n                <div className='flex justify-center flex-wrap items-center pa2'>\r\n                <div className='w-40'>\r\n                    <div >\r\n                        <img style={{width:'100%',height:'100%'}} src={Logo} alt='Logo'/>\r\n                    </div>\r\n                </div>\r\n                <div className='w-60 pa2 ph2'>\r\n                    <p className='f1 b'>Cyberking Capitals</p>\r\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum</p>\r\n                    <a \r\n                    className=\"f4 link dim ph3 pv2 mb2 dib white br2 grow bg-dark-blue\" \r\n                    href=\"#0\"\r\n                    onClick = {() => onRouteChange('form')}\r\n                    >\r\n                        Session Joining Form\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport 'tachyons';\r\nimport './SignInPage.css';\r\nimport {BeatLoader} from 'react-spinners';\r\n\r\nconst SignInPage = ({loadUser, onRouteChange}) => {\r\n\r\n  const [username, setUserName] = useState(\"\");\r\n  const [usernameFlag, setUserNameFlag] = useState(false);\r\n  const [usernameErr, setUserNameErr] = useState(\"\");\r\n\r\n  const setUserNameField = (event) => {\r\n    setUserName(event.target.value);\r\n  }\r\n\r\n  const usernameValidate = (event) => {\r\n    if (username !== \"\") {\r\n      setUserNameFlag(true);\r\n      setUserNameErr(\"\");\r\n    }\r\n    else {\r\n      setUserNameFlag(false);\r\n      setUserNameErr(\"*username Field is compulsary\");\r\n    }\r\n  }\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordFlag, setPasswordFlag] = useState(false);\r\n  const [passwordErr, setPasswordErr] = useState(\"\");\r\n\r\n  const setPasswordField = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const passwordValidate = (event) => {\r\n    if (password !== \"\") {\r\n      setPasswordFlag(true);\r\n      setPasswordErr(\"\");\r\n    }\r\n    else {\r\n      setPasswordFlag(false);\r\n      setPasswordErr(\"*password Field is compulsary\");\r\n    }\r\n  }\r\n\r\n  const onSubmitHandler = (username, password) => {\r\n    fetch('https://frozen-river-89705.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n      username: username,\r\n      password: password\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(resp => {\r\n    if(resp.des)\r\n    {\r\n        loadUser(resp);\r\n        onRouteChange(resp.des);\r\n    }\r\n    else if(resp==='Wrong Credentails')\r\n    {\r\n      setPopState('none');\r\n      setPasswordErr('Wrong Credentails')\r\n    }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const [popState, setPopState] = useState('none');\r\n\r\n  const submit = () => {\r\n    if (\r\n      usernameFlag === true &&\r\n      passwordFlag === true\r\n    ) {\r\n      onSubmitHandler(username, password);\r\n      setPopState('block');\r\n    }\r\n    else {\r\n      usernameValidate();\r\n      passwordValidate();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100vh' }} className='flex justify-center items-center'>\r\n      <div id='pop-up' className='bg-white shadow-4 pop-up f2' style={{ display: `${popState}` }}>\r\n         <div className='flex items-center justify-center h-100'>\r\n          <p className=''>Signing You In Hold Tight</p>\r\n          <BeatLoader/>\r\n          </div>\r\n      </div>\r\n        <main className=\"shadow-3 bg pa6 black-0\">\r\n          <form className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">UserName</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  autoComplete=\"blej\"\r\n                  onChange={(event) => setUserNameField(event)}\r\n                  onBlur={() => usernameValidate()}\r\n                  placeholder=\"Enter your username\" />\r\n                <div className=\"f4 red\">{`${usernameErr}`}</div>\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={(event) => setPasswordField(event)}\r\n                  onBlur={() => passwordValidate()}\r\n                  placeholder=\"Enter your password\" />\r\n                <div className=\"f4 red\">{`${passwordErr}`}</div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input className=\"b ph3 pv2 input-reset ba white bg-dark-blue grow pointer f6 dib\"\r\n                type=\"button\"\r\n                value=\"Sign in\"\r\n                onClick={() => submit()}\r\n              />\r\n            </div>\r\n\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","import React,{useState} from 'react';\r\nimport 'tachyons';\r\nimport './Row.css';\r\n\r\nconst Row = ({rowObject, showHandler}) => {\r\n\tconst {lead_id,lead_phone_number} = rowObject;\r\n\tconst keyArr = Object.keys(rowObject);\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\tconst [username, setUsername] = useState(rowObject.username)\r\n\tconst [lead_name, setLeadName] = useState(rowObject.lead_name)\r\n\tconst [whatsapp_number, setWhatsapp] = useState(rowObject.whatsapp_number)\r\n\tconst [accountopening_number, setAccountOpening] = useState(rowObject.accountopening_number)\r\n\tconst [call_status_1, setStatus1] = useState(rowObject.call_status_1)\r\n\tconst [call_status_2, setStatus2] = useState(rowObject.call_status_2)\r\n\tconst [updatehandover, setUpdateHandover] = useState(rowObject.updatehandover)\r\n\tconst [lead_city, setLeadCity] = useState(rowObject.lead_city)\r\n\tconst [knowledge, setKnowledge] = useState(rowObject.prior_knowledge)\r\n\tconst [dmat_acc, setDmat_acc] = useState(rowObject.dmat_acc)\r\n\tconst [broker, setBroker] = useState(rowObject.broker)\r\n\tconst [preferred_lang, setLanguage] = useState(rowObject.preferred_lang)\r\n\tconst [microsoftid, setMicrosoftId] = useState(rowObject.microsoftid)\r\n\tconst [coded, setCoded] = useState(rowObject.coded)\r\n\r\n\tconsole.log(lead_id,coded)\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='username')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setUsername(rowObject.username)\r\n\t\t\t}\r\n\t\t\tsetUsername(value)\r\n\t\t}\r\n\t\telse if(name==='lead_name')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setLeadName(rowObject.lead_name)\r\n\t\t\t}\r\n\t\t\tsetLeadName(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_1')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setStatus1(rowObject.call_status_1)\r\n\t\t\t}\r\n\t\t\tsetStatus1(value)\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setStatus2(rowObject.call_status_2)\r\n\t\t\t}\r\n\t\t\tsetStatus2(value)\r\n\t\t}\r\n\t\telse if(name==='updatehandover')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setUpdateHandover(rowObject.updatehandover)\r\n\t\t\t}\r\n\t\t\tsetUpdateHandover(value)\r\n\t\t}\r\n\t\telse if(name==='lead_city')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setLeadCity(rowObject.lead_city)\r\n\t\t\t}\r\n\t\t\tsetLeadCity(value)\r\n\t\t}\r\n\t\telse if(name==='prior_knowledge')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setKnowledge(rowObject.prior_knowledge)\r\n\t\t\t}\r\n\t\t\tsetKnowledge(value)\r\n\t\t}\r\n\t\telse if(name==='dmat_acc')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setDmat_acc(rowObject.dmat_acc)\r\n\t\t\t}\r\n\t\t\tsetDmat_acc(value)\r\n\t\t}\r\n\t\telse if(name==='broker_name')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setBroker(rowObject.broker_name)\r\n\t\t\t}\r\n\t\t\tsetBroker(value)\r\n\t\t}\r\n\t\telse if(name==='preferred_lang')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setLanguage(rowObject.preferred_lang)\r\n\t\t\t}\r\n\t\t\tsetLanguage(value)\r\n\t\t}\r\n\t\telse if(name==='coded')\r\n\t\t{\r\n\t\t\tif(value==='')\r\n\t\t\t{\r\n\t\t\t\treturn setCoded(rowObject.coded)\r\n\t\t\t}\r\n\t\t\tsetCoded(value)\r\n\t\t\tconsole.log(coded)\r\n\t\t}\r\n\t\telse if(name==='whatsapp_number')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setWhatsapp(rowObject.whatsapp_number)\r\n\t\t\t}\r\n\t\t\tsetWhatsapp(value);\r\n\t\t}\r\n\t\telse if(name==='accountopening_number')\r\n\t\t{\r\n\t\t\tif (!value) {\r\n\t\t\t\treturn setAccountOpening(rowObject.accountopening_number)\r\n\t\t\t}\r\n\t\t\tsetAccountOpening(value);\r\n\t\t}\r\n\t\telse if(name==='microsoftid')\r\n\t\t{\r\n\t\t\tif (!value) {\r\n\t\t\t\treturn setMicrosoftId(rowObject.microsoftid)\r\n\t\t\t}\r\n\t\t\tsetMicrosoftId(value)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onCheck = (event) => {\r\n\t\tconst {name, checked} = event.target;\r\n\t\tif (name==='whatsapp') \r\n\t\t{\r\n\t\t\tif(checked)\r\n\t\t\t{\r\n\t\t\t\tsetWhatsapp(rowObject.lead_phone_number)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetWhatsapp(rowObject.whatsapp_number)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (name==='accountopening')\r\n\t\t{\r\n\t\t\tif (checked) \r\n\t\t\t{\r\n\t\t\t\tsetAccountOpening(rowObject.lead_phone_number)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetAccountOpening(rowObject.accountopening_number)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSave = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/update', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                lead_name: lead_name,\r\n                lead_phone_number: rowObject.lead_phone_number,\r\n                whatsapp_number: whatsapp_number,\r\n                accountopening_number: accountopening_number,\r\n                call_status_1: call_status_1,\r\n                call_status_2: call_status_2,\r\n                updatehandover: updatehandover,\r\n                lead_city: lead_city,\r\n                prior_knowledge: knowledge,\r\n                dmat_acc: dmat_acc,\r\n                broker_name: broker,\r\n                preferred_lang: preferred_lang,\r\n                microsoftid: microsoftid,\r\n                coded: coded\r\n                })\r\n             })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t       \t\tif (resp==='Success') {\r\n\t       \t\t\talert('Success')\r\n\t       \t\t\tshowHandler()\r\n\t       \t\t}\r\n\t       \t\telse if(resp==='Not Unique')\r\n\t       \t\t{\r\n\t       \t\t\talert('The given whatsapp/accountopening number is already registered.Please enter other contact and try again.')\r\n\t       \t\t}\r\n\t        })\r\n\t        .catch(err => {\r\n\t        \tconsole.log(err)\r\n\t        \talert('OOPSS...something went wrong please try again.')\r\n\t        })\r\n\t}\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onAddToBatch = (event) => {\r\n\t\tconst name = event.target.getAttribute('name');\r\n\t\tif(name==='current')\r\n\t\t{\r\n\t\t\tvar c1 = window.confirm('Are you  sure you want to add lead to current batch.This will change the status of lead to processed and it will be stored seperately.');\r\n\t\t\tif(c1===true)\r\n\t\t\t{\r\n\t\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number,\r\n\t\t\t\t\tname: name\r\n\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(resp => {\r\n\t\t\t\t\tif(resp==='Success')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Success')\r\n\t\t\t\t\t\tsetWhatsapp(rowObject.whatsapp_number)\r\n\t\t\t\t\t\tsetAccountOpening(rowObject.accountopening_number)\r\n\t\t\t\t\t\tconsole.log(whatsapp_number,accountopening_number)\r\n\t\t\t\t\t\tshowHandler()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(resp==='exists')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Sorry...But the lead already added to next batch.')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar c2 = window.confirm('Are you  sure you want to add lead to next batch.This will change the status of lead to processed and it will be stored seperately.');\r\n\t\t\tif (c2===true) {\r\n\t\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number,\r\n\t\t\t\t\tname: name\r\n\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(resp => {\r\n\t\t\t\t\tif(resp==='Success')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Success')\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(resp==='exists')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Sorry...But the lead already added to current batch.')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst addtoProcessedList = () => {\r\n\t\tif(window.confirm('Are you sure you want to add lead to processed list?'))\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/processed', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(resp => {\r\n\t\t\t\tif(resp==='Success')\r\n\t\t\t\t{\r\n\t\t\t\t\talert(resp)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\talert('OOPSS...something went wrong.Please try again.')\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index===0 || index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':null)}`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tname='whatsapp' \r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tautoComplete='blej'  \r\n\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\tonClick={(event) => onCheck(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span style={{padding: '2px'}} className={`${coded!=='null'?'fw6 white':null}`}>Same as Lead Contact</span>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tname={keyArr[index]} \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${whatsapp_number}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===5)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tname='accountopening' \r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tautoComplete='blej'  \r\n\t\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\t\tonClick={(event) => onCheck(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span style={{padding: '2px'}} className={`${coded!=='null'?'fw6 white':null}`}>Same as Lead Contact</span>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tname={keyArr[index]} \r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\t\tplaceholder={`${accountopening_number}`} \r\n\t\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t);\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(index!==elementArray.length-1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tname={keyArr[index]} \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname={keyArr[index]}  \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tvalue={coded}\r\n\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=''>--select--</option>\r\n\t\t\t\t\t\t\t\t<option value='null'>Null</option>\r\n\t\t\t\t\t\t\t\t<option value='coded'>Coded</option>\r\n\t\t\t\t\t\t\t\t<option value='notCoded'>Not Coded</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className=\"flex\">\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc ph3 pv2 mb2 dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-white')}`}\r\n\t\t\t>\r\n\t\t\t{`Leadno:${lead_id}`}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => onSave()}>\r\n\t\t\t\tSaveChanges\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tname='current'\r\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='coded'?'block':'none'}`}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={(event) => onAddToBatch(event)}\r\n\t\t\t>\r\n\t\t\t\tAddtoCurrentBatch\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tname='next'\r\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='coded'?'block':'none'}`}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={(event) => onAddToBatch(event)}\r\n\t\t\t>\r\n\t\t\t\tAddtoNextBatch\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tname='next'\r\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='notCoded'?'block':'none'}`}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => addtoProcessedList()}\r\n\t\t\t>\r\n\t\t\t\tAddtoProcessedList\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from './Row.js';\r\nimport './Table.css';\r\n\r\nconst Table = ({headerArray, ContentArray, showHandler}) =>{\r\n\r\n\treturn(\r\n\t\t<div className={`ma2 pa4 table ${ContentArray.length?'pad':null}`}>\r\n            <div>\r\n            \t<table className=\"f6 mw8 center\" cellSpacing=\"0\">\r\n            \t\t<thead>\r\n\t            \t\t<tr>\r\n\t            \t\t\t{\r\n\t            \t\t\t\theaderArray.map((item,index) => {\r\n\t            \t\t\t\t\treturn(\r\n\t            \t\t\t\t\t\t<th key = {index} className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\">{item}</th>\r\n\t            \t\t\t\t\t);\r\n\t            \t\t\t\t})\r\n\t            \t\t\t}\r\n\t            \t\t</tr>\r\n            \t\t</thead>\r\n            \t\t<tbody className=\"lh-copy\">\r\n            \t\t\t{\r\n            \t\t\t\tContentArray.map((item,index) => {\r\n            \t\t\t\t\treturn(\r\n            \t\t\t\t\t\t<tr key={index} className={item.coded==='Yes'?\"bg-green\":(item.coded==='No'?\"bg-red\":\"\")}>\r\n            \t\t\t\t\t\t\t<Row showHandler={showHandler} rowObject={item} />\r\n            \t\t\t\t\t\t</tr>\r\n            \t\t\t\t\t);\r\n            \t\t\t\t})\r\n            \t\t\t}\r\n            \t\t</tbody>\r\n            \t</table>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './LogRow.css'\r\n\r\nconst LogRow = ({rowObject}) => {\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\telementArray.map((item, index) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className=\"pv3 pr4 bb b--black-20\">{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n\r\n}\r\n\r\nexport default LogRow;","import React from 'react';\r\nimport LogRow from './LogRow.js';\r\nimport './LogTable.css';\r\n\r\nconst LogTable = ({headerArray, ContentArray}) => {\r\n\treturn(\r\n\t\t<div className='ma2 pa4 table' >\r\n\t\t\t<div>\r\n\t\t\t\t<table className=\"f6 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t\t\t<thead>\r\n\t            \t\t<tr>\r\n\t            \t\t\t{\r\n\t            \t\t\t\theaderArray.map((item,index) => {\r\n\t            \t\t\t\t\treturn(\r\n\t            \t\t\t\t\t\t<th key = {index} className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\">{item}</th>\r\n\t            \t\t\t\t\t);\r\n\t            \t\t\t\t})\r\n\t            \t\t\t}\r\n\t            \t\t</tr>\r\n            \t\t</thead>\r\n            \t\t<tbody className=\"lh-copy\">\r\n            \t\t\t{\r\n            \t\t\t\tContentArray.map((item,index) => {\r\n            \t\t\t\t\treturn(\r\n            \t\t\t\t\t\t<tr key={index} className={item.coded==='Yes'?\"bg-green\":(item.coded==='No'?\"bg-red\":\"\")}>\r\n            \t\t\t\t\t\t\t<LogRow rowObject={item} />\r\n            \t\t\t\t\t\t</tr>\r\n            \t\t\t\t\t);\r\n            \t\t\t\t})\r\n            \t\t\t}\r\n            \t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LogTable;","import React from 'react';\r\nimport './BatchRow.css';\r\n\r\nconst BatchRow = ({rowObject}) => {\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\telementArray.map((item, index) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className=\"pv3 pr4 bb b--black-20\">{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default BatchRow;","import React from 'react';\r\nimport BatchRow from './BatchRow.js';\r\nimport './BatchTable.css';\r\n\r\nconst BatchTable = ({headerArray, ContentArray}) => {\r\n\treturn(\r\n\t\t<div className='ma2 pa4 table' >\r\n\t\t\t<div>\r\n\t\t\t\t<table className=\"f6 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t\t\t<thead>\r\n\t            \t\t<tr>\r\n\t            \t\t\t{\r\n\t            \t\t\t\theaderArray.map((item,index) => {\r\n\t            \t\t\t\t\treturn(\r\n\t            \t\t\t\t\t\t<th key = {index} className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\">{item}</th>\r\n\t            \t\t\t\t\t);\r\n\t            \t\t\t\t})\r\n\t            \t\t\t}\r\n\t            \t\t</tr>\r\n            \t\t</thead>\r\n            \t\t<tbody className=\"lh-copy\">\r\n            \t\t\t{\r\n            \t\t\t\tContentArray.map((item,index) => {\r\n            \t\t\t\t\treturn(\r\n            \t\t\t\t\t\t<tr key={index} className={item.coded==='Yes'?\"bg-green\":(item.coded==='No'?\"bg-red\":\"\")}>\r\n            \t\t\t\t\t\t\t<BatchRow rowObject={item} />\r\n            \t\t\t\t\t\t</tr>\r\n            \t\t\t\t\t);\r\n            \t\t\t\t})\r\n            \t\t\t}\r\n            \t\t</tbody>\r\n            \t</table>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default BatchTable;","import React,{useState, useEffect} from 'react';\r\nimport Table from '../Table/Table.js';\r\nimport LogTable from '../LogTable/LogTable.js';\r\nimport BatchTable from '../BatchTable/BatchTable.js';\r\nimport './Admin.css';\r\nconst Admin = () => {\r\n\r\n\tconst leadDataHeader = [\r\n\t\t'LeadId',\r\n\t\t'Assigned To',\r\n\t\t'LeadName',\r\n\t\t'LeadContact',\r\n\t\t'WhatsApp Number',\r\n\t\t'Account Opening Number',\r\n\t\t'First Status',\r\n\t\t'Second Status',\r\n\t\t'Update After Hand-Over',\r\n        'City',\r\n        'Knowledge', \r\n        'Demat',\r\n        'Broker' ,\r\n        'Preffered Language',\r\n        'Microsoft Id',\r\n        'Coded'\r\n\t]\r\n\r\n\tconst logDataHeader = [\r\n\t\t'Username',\r\n\t\t'Telecaller Id',\r\n\t\t'Handover Count'\r\n\t]\r\n\r\n\tconst [leadData, setLeadData] = useState([])\r\n\r\n\tconst [filter, setFilter] = useState('*')\r\n\r\n\tconst setFilterField = (event) => {\r\n\t\tsetFilter(event.target.value);\r\n\t}\r\n\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [usernameFlag, setUsernameFlag] = useState(false)\r\n\tconst [usernameErr, setUsernameErr] = useState('')\r\n\r\n\tconst setUsernameField = (event) => {\r\n\t\tsetUsername(event.target.value)\r\n\t}\r\n\r\n\tconst usernameValidate = () => {\r\n\t\tif(username==='')\r\n\t\t{\r\n\t\t\tsetUsernameFlag(false)\r\n\t\t\tsetUsernameErr('Set username field')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetUsernameFlag(true)\r\n\t\t\tsetUsernameErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [passwordFlag, setPasswordFlag] = useState(false)\r\n\tconst [passwordErr, setPasswordErr] = useState('')\r\n\r\n\tconst setPasswordField = (event) => {\r\n\t\tsetPassword(event.target.value)\r\n\t}\r\n\r\n\tconst passwordValidate = () => {\r\n\t\tif(password==='')\r\n\t\t{\r\n\t\t\tsetPasswordFlag(false)\r\n\t\t\tsetPasswordErr('Set password field')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetPasswordFlag(true)\r\n\t\t\tsetPasswordErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [telecaller_id, setTelecaller] = useState('')\r\n\tconst [telecallerFlag, setTelecallerFlag] = useState(false)\r\n\tconst [telecallerErr, setTelecallerErr] = useState('')\r\n\r\n\tconst setTelecallerField = (event) => {\r\n\t\tsetTelecaller(event.target.value);\r\n\t}\r\n\r\n\tconst telecallerValidate = () => {\r\n\t\tif(telecaller_id==='')\r\n\t\t{\r\n\t\t\tsetTelecallerFlag(false)\r\n\t\t\tsetTelecallerErr('Set Telecaller Id')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetTelecallerFlag(true)\r\n\t\t\tsetTelecallerErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [des, setDes] = useState('none')\r\n\tconst [desFlag, setDesFlag] = useState(false)\r\n\tconst [desErr, setDesErr] = useState('')\r\n\r\n\tconst setDesField = (event) => {\r\n\t\tsetDes(event.target.value)\r\n\t}\r\n\r\n\tconst desValidate = () => {\r\n\t\tif (des==='none') {\r\n\t\t\tsetDesFlag(false)\r\n\t\t\tsetDesErr('Set Designation of caller')\r\n\t\t}\r\n\t\telse if(des!=='JrCaller')\r\n\t\t{\r\n\t\t\tsetAssigned('')\r\n\t\t\tdocument.getElementById('assigned_to').value = ''\r\n\t\t\tconsole.log(document.getElementById('assigned_to').value)\r\n\t\t}\r\n\t\t{\r\n\t\t\tsetDesFlag(true)\r\n\t\t\tsetDesErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [assigned, setAssigned] = useState('')\r\n\tconst [assignedFlag, setAssignedFlag] = useState(false)\r\n\tconst [assignedErr, setAssignedErr] = useState('')\r\n\r\n\tconst setAssignedField = (event) => {\r\n\t\tsetAssigned(event.target.value);\r\n\t}\r\n\r\n\tconst assignedValidate = () => {\r\n\t\tif(des==='JrCaller')\r\n\t\t{\r\n\t\t\tconsole.log(des)\r\n\t\t\tif(assigned==='')\r\n\t\t\t{\r\n\t\t\t\tconsole.log(assigned)\r\n\t\t\t\tsetAssignedFlag(false)\r\n\t\t\t\tsetAssignedErr('Assigned to field compulsary.')\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tsetAssignedFlag(true)\r\n\t\t\t\tsetAssignedErr('')\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetAssignedFlag(true)\r\n\t\t\tsetAssignedErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst addTelecaller = () => {\r\n\t\tif(assigned==='' && des!=='JrCaller')\r\n\t\t{\r\n\t\t\tsetAssignedFlag(true)\r\n\t\t\tsetAssignedErr('')\r\n\t\t}\r\n\t\tif(\r\n\t\t\tusernameFlag &&\r\n\t\t\tpasswordFlag &&\r\n\t\t\ttelecallerFlag &&\r\n\t\t\tdesFlag &&\r\n\t\t\tassignedFlag\r\n\t\t)\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/register', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n                telecaller_id: telecaller_id,\r\n                des: des,\r\n                assigned: assigned\r\n                })\r\n             })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t       \t\tif (resp==='Registered') {\r\n\t       \t\t\talert('Telecaller registered successfully')\r\n\t       \t\t}\r\n\t       \t\telse if(resp==='Not Unique.')\r\n\t       \t\t{\r\n\t       \t\t\talert('Looks like telecaller with same Telecaller Id is already registered.')\r\n\t       \t\t}\r\n\t       \t\telse{\r\n\t       \t\t\talert('OOPs....something went wrong.Please try again.')\r\n\t       \t\t}\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tusernameValidate()\r\n\t\t\tpasswordValidate()\r\n\t\t\ttelecallerValidate()\r\n\t\t\tdesValidate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst showHandler = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/show', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                filter: filter\r\n                })\r\n             })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t       \t\tif(resp!=='Unable to fetch')\r\n\t       \t\t{\r\n\t       \t\t\tsetLeadData(resp)\r\n\t       \t\t}\r\n\t       \t\telse\r\n\t       \t\t{\r\n\t       \t\t\talert('Unable to fetch.Please try again.')\r\n\t       \t\t}\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst [popState, setPopState] = useState('none');\r\n\r\n\tconst setPopStateField = () => {\r\n        if(popState==='none')\r\n        {\r\n            setPopState('block');\r\n        }\r\n        else\r\n        {\r\n        \tsetPopState('none')\r\n        }\r\n    }\r\n\r\n    const [popPayState, setPopPayState] = useState('none');\r\n    const [teleId, setTeleId] = useState('');\r\n    const [logContentArray, setLogContentArray] = useState([]);\r\n\r\n    const setTeleIdField = (event) => {\r\n    \tsetTeleId(event.target.value);\r\n    }\r\n\r\n\tconst setPopPayStateField = () => {\r\n        if(popPayState==='none')\r\n        {\r\n            setPopPayState('block');\r\n        }\r\n        else\r\n        {\r\n        \tsetPopPayState('none')\r\n        \tsetTeleId('')\r\n        \tsetLogContentArray([])\r\n        }\r\n    }\r\n\r\n    const [popBatch, setPopBatch] = useState('none')\r\n    const setPopBatches = () => {\r\n    \tif(popBatch==='none')\r\n    \t{\r\n    \t\tsetPopBatch('block')\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\tsetPopBatch('none')\r\n    \t}\r\n    }\r\n\r\n    const fetchBatch = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/batch/fetch', {\r\n    \t\t\tmethod: 'post',\r\n    \t\t\theaders: {'Content-Type': 'application/json'},\r\n    \t\t\tbody: JSON.stringify({\r\n    \t\t\t\tbatch: batch\r\n    \t\t\t})\r\n    \t\t})\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(resp => {\r\n    \t\t\tif(resp!=='fail')\r\n    \t\t\t{\r\n    \t\t\t\tsetBatchContentArray(resp)\r\n    \t\t\t}\r\n    \t\t\telse\r\n    \t\t\t{\r\n    \t\t\t\tconsole.log('Fetch call to batches failed')\r\n    \t\t\t}\r\n    \t\t})\r\n    \t\t.catch(err => console.log(err))\r\n    }\r\n\r\n    const batchDataHeader = [\r\n    \t'LeadId',\r\n    \t'LeadName',\r\n    \t'LeadContact',\r\n    \t'WhatsApp Number',\r\n\t\t'Account Opening Number',\r\n\t\t'City',\r\n\t\t'Knowledge',\r\n\t\t'Demat',\r\n\t\t'Broker',\r\n\t\t'Preffered Language'\r\n    ]\r\n\r\n    const [batchContentArray, setBatchContentArray] = useState([]);\r\n\r\n    const [batch, setBatch] = useState('current')\r\n    const changeBatch = () => {\r\n    \tif(batch==='current')\r\n    \t{\r\n    \t\tsetBatch('next')\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\tsetBatch('current')\r\n    \t}\r\n    }\r\n\r\n    const onShowDetails = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/log', {\r\n    \t\tmethod: 'post',\r\n    \t\theaders: {'Content-Type': 'application/json'},\r\n    \t\tbody: JSON.stringify({\r\n    \t\t\tteleId: teleId\r\n    \t\t})\r\n    \t})\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif (resp[0].username) {\r\n    \t\t\tsetLogContentArray(resp)\r\n    \t\t}\r\n    \t\telse if(resp==='Incorrect Submission')\r\n    \t\t{\r\n    \t\t\talert('Incorrect submission')\r\n    \t\t}\r\n    \t})\r\n    \t.catch(err => console.log(err))\r\n    }\r\n\r\n    const batchHandler = (event) => {\r\n    \tconst name = event.target.getAttribute('name');\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/batch/modify', {\r\n    \t\tmethod: 'post',\r\n    \t\theaders: {'Content-Type': 'application/json'},\r\n    \t\tbody: JSON.stringify({\r\n    \t\t\tname: name\r\n    \t\t})\r\n    \t})\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif(resp==='Success')\r\n    \t\t{\r\n    \t\t\talert('Success')\r\n    \t\t\tfetchBatch()\r\n    \t\t}\r\n    \t})\r\n    \t.catch(err => {\r\n    \t\tconsole.log(err)\r\n    \t\talert('OOPs...something went wrong.Please try again.')\r\n    \t})\r\n    }\r\n\r\n    const [srCaller, setSrCaller] = useState([])\r\n\r\n    const fetchSrCallers = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/srcaller')\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif(resp[0].username)\r\n    \t\t{\r\n    \t\t\tsetSrCaller(resp)\r\n    \t\t}\r\n    \t})\r\n    \t.catch(err => {\r\n    \t\tconsole.log(err)\r\n    \t})\r\n    }\r\n\r\n    useEffect(() => {\r\n    \tfetchBatch()\r\n    \tfetchSrCallers()\r\n    }, [batch])\r\n\r\n\treturn(\r\n\t\t<div style={{display: 'flex', flexDirection: 'column', justifyCenter: 'center', itemsCenter: 'flex-end'}}>\t\r\n\t\t\t <div id='pop-up' className='bg-white shadow-4 pop-up' style={{display: `${popState}`}}>\r\n                <a \r\n                onClick={() => setPopStateField()} \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\" \r\n                href=\"#0\">\r\n                    X\r\n                </a>\r\n                <div style={{height:'100%'}} className='flex justify-center items-center flex-column'>\r\n                    <h2>Add New Telecaller</h2>\r\n                    <div>\r\n                        <p>New Username</p>\r\n                        <input\r\n                        id=\"number\" \r\n                        type=\"text\" \r\n                        autoComplete=\"blej\"\r\n                        onChange={(event) => setUsernameField(event)}\r\n                        onBlur={() => usernameValidate()}\r\n                        />\r\n                    </div>\r\n                    <div className=\"f4 red\">{usernameErr}</div>\r\n                    <div>\r\n                        <p>Password</p>\r\n                        <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"blej\"\r\n                        onChange={(event) => setPasswordField(event)}\r\n                        onBlur={() => passwordValidate()}\r\n                        />\r\n                    </div>\r\n                    <div className=\"f4 red\">{passwordErr}</div>\r\n\t                <div>\r\n\t\t\t\t\t\t<p>Telecaller Id</p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"telecaller_id\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tautoComplete=\"blej\"\r\n\t\t\t\t\t\tonChange={(event) => setTelecallerField(event)}\r\n\t\t\t\t\t\tonBlur={() => telecallerValidate()}\r\n\t\t\t\t\t\t/>\r\n                    </div>\r\n                    <div className=\"f4 red\">{telecallerErr}</div>\r\n                    <div>\r\n\t\t\t\t\t\t<p>Designation</p>\r\n\t\t\t\t\t\t<select \r\n\t\t\t\t\t\tstyle={{width: '185px'}}\r\n\t\t\t\t\t\tonChange={(event) => setDesField(event)}\r\n\t\t\t\t\t\tonBlur={() => desValidate()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='none'>None</option>\r\n\t\t\t\t\t\t\t<option value='SrCaller'>Senior Caller</option>\r\n\t\t\t\t\t\t\t<option value='JrCaller'>Junior Caller</option>\r\n\t\t\t\t\t\t</select>\r\n                    </div>\r\n                    <div className=\"flex flex-column justify-center items-center ma2 pa3\" style = {{display: `${des==='JrCaller'?'flex':'none'}`}}>\r\n\t\t\t\t\t\t<p>Assigned to:</p>\r\n\t\t\t\t\t\t<div className=\"flex justify-center items-center pa2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"assigned_to\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"blej\"\r\n\t\t\t\t\t\t\tplaceholder='Enter SrCaller Id'\r\n\t\t\t\t\t\t\tclassName='ma1'\r\n\t\t\t\t\t\t\tonChange={(event) => setAssignedField(event)}\r\n\t\t\t\t\t\t\tonBlur={() => assignedValidate()}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t<option value=''>Select SrCaller</option>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsrCaller.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={item.telecaller_id}>{`${item.username}(${item.telecaller_id})`}</option>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<div className=\"f4 red\">{assignedErr}</div>\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                    <div className=\"f4 red\">{telecallerErr}</div>\r\n                    <div className=\"f4 red\">{desErr}</div>\r\n                    <div\r\n                    style={{cursor: \"pointer\"}}\r\n                    className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\" \r\n                    href=\"#0\"\r\n                    onClick={() => addTelecaller()}\r\n                    >\r\n                    Add Telecaller\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n{/*-------------- PopUp fpr Payment CheckOut ----------------------------*/}\r\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up-payment-checkout' style={{display: `${popPayState}`, zIndex: '1'}}>\r\n                <a \r\n                onClick={() => setPopPayStateField()} \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\" \r\n                href=\"#0\">\r\n                    X\r\n                </a>\r\n                <div style={{height:'100%'}} className='flex justify-center items-center flex-column'>\r\n                    <h2>TELECALLER LOGS</h2>\r\n                    <div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"pv1 ma2\"\r\n\t\t\t\t\t\tautoComplete=\"blej\"\r\n\t\t\t\t\t\tonChange={(event) => setTeleIdField(event)} \r\n\t\t\t\t\t\tplaceholder='Enter Telecaller name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span \r\n\t\t\t\t\t\tclass=\"f6 link dim ph3 pv2 mb2 dib white br2 bg-dark-blue\"\r\n\t\t\t\t\t\tonClick = {() => onShowDetails()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\tShowDetails\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<LogTable headerArray={logDataHeader} ContentArray={logContentArray} />\r\n                </div>\r\n            </div>\r\n\r\n{/* ---------------------------------------------------- */}\r\n\r\n\r\n{/*-------------- PopUp fpr Batches ----------------------------*/}\r\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up-batches' style={{display: `${popBatch}`, zIndex: '1'}}>\r\n                <a \r\n                onClick={() => setPopBatches()} \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\">\r\n                    X\r\n                </a>\r\n                <div style={{height:'100%'}} className='flex justify-center items-center flex-column'>\r\n                \t<hr style={{width:'99%', padding: '1px', backgroundColor: 'black'}}/>\r\n                    <h2>BATCHES</h2>\r\n                    <hr style={{width:'99%', padding: '1px', backgroundColor: 'black'}}/>\r\n                    <div className=\"flex justify-center items-center\">\r\n\t                    <h3 \r\n\t                    className={`ma2 pa2 f4 b tc pointer ${batch==='current'?'active1':'effect1 effect1-left'}`}\r\n\t                    onClick={() => changeBatch()}>\r\n\t                    Current\r\n\t                    </h3>\r\n\t                    <h3 \r\n\t                    className={`ma2 pa2 f4 b tc pointer ${batch==='next'?'active1':'effect1 effect1-left'}`}\r\n\t                    onClick={() => changeBatch()}>\r\n\t                    Next\r\n\t                    </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<BatchTable headerArray={batchDataHeader} ContentArray={batchContentArray} />\r\n\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\tname={batch} \r\n\t\t\t\t\t\tclassName=\"pointer f6 link dim ph3 pv2 mb2 dib white br2 bg-dark-blue mh2\"\r\n\t\t\t\t\t\tonClick={(event) => batchHandler(event)}>\r\n\t\t\t\t\t\t{batch==='current'?'Clear Batch':'Transfer to Current'}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n                </div>\r\n            </div>\r\n\r\n{/* ---------------------------------------------------- */}\r\n\r\n\t\t\t<div className=\"admin-container overflow-auto\">\r\n\t\t\t\t\t<div className='flex justify-center items-center flex-column'>\r\n\t\t\t\t\t\t<div>\r\n\t\t                    <select\r\n\t\t                    onChange = {(event) => setFilterField(event)}\r\n\t\t                    >\r\n\t\t                        <option value=\"*\">--Select--</option>\r\n\t\t                        <option value='*'>All</option>\r\n\t\t                        <option value='no'>Unassigned</option>\r\n\t\t                        <option value='Jryes'>Assigned to Jr Caller</option>\r\n\t\t                        <option value=\"Handed Over\">IsHandedOver(Y)</option>\r\n\t\t                        <option value=\"Not Handed Over\">IsHandedOver(N)</option>\r\n\t\t                        <option value=\"processed\">Processed</option>\r\n\t\t                    </select>\r\n\t\t                    <div \r\n\t\t                    className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t                    href=\"#0\"\r\n\t\t                    onClick = {() => showHandler()} \r\n\t\t                    >\r\n\t\t                    Show Data\r\n\t\t                    </div>\r\n\t\t                    <div \r\n\t\t                    className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t                    href=\"#0\"\r\n\t\t                    onClick = {() => showHandler()} \r\n\t\t                    >\r\n\t\t                    Refresh\r\n\t\t                    </div>\r\n\t\t                </div>\r\n\t\t                <Table showHandler={showHandler} headerArray={leadDataHeader} ContentArray={leadData} />\r\n\t\t                <div className=\"flex\">\r\n\t\t\t                <div\r\n\t\t\t                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t\t                href=\"#0\"\r\n\t\t\t                onClick={() => setPopStateField()}>\r\n\t\t\t                Register New Telecallers            \r\n\t\t\t            \t</div>\r\n\t\t\t                <div\r\n\t\t\t                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t\t                href=\"#0\"\r\n\t\t\t                onClick={() => setPopPayStateField()}>\r\n\t\t\t                Check Telecaller Logs            \r\n\t\t\t            \t</div>\r\n\t\t\t            \t<div\r\n\t\t\t                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t\t                onClick={() => setPopBatches()}>\r\n\t\t\t                Check Batches    \r\n\t\t\t            \t</div>\r\n\t\t            \t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t);\r\n}\r\n\r\nexport default Admin;","import React,{useState} from 'react';\r\nimport Logo from '../../Container/Images/Logo.jpeg';\r\nimport 'tachyons';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = ({onRouteChange, route}) => {\r\n\r\n\tconst [navbar,setNavbar] = useState('navbar')\r\n    const [dropdown, setDropdown]  = useState('hidden');\r\n    const [line, setLine]  = useState('show');\r\n    const hamburger = () => {\r\n        if (dropdown==='hidden'){\r\n            setDropdown('visible')\r\n            setNavbar('navbar-resp')\r\n            setLine('hide')\r\n        }\r\n        else{\r\n            setDropdown('hidden');\r\n            setNavbar('navbar')\r\n            setLine('show')\r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div>\r\n            <nav style={{backgroundColor: '#232B2B', color: 'white'}}className={`flex items-center justify-between pv0 mv0 flex-wrap w-100 shadow-2 ${navbar}`}>\r\n                <span>\r\n                    <div style={{height:'60px', width:'60px'}} className='mh2'>\r\n                        <img style={{height:'100%', width:'100%'}} src={Logo} alt='Logo'/>\r\n                    </div>\r\n                </span>\r\n                <span className={`hamburger ${line} pr2 pointer`}\r\n                onClick={()=>hamburger()}\r\n                >\r\n                        <div className='line'></div>\r\n                        <div className='line'></div>\r\n                        <div className='line'></div>\r\n            </span>\r\n                <span className={`${dropdown}`}>\r\n                    <ul style={{listStyle:'none'}} className={`flex ph4 ${navbar} justify-center items-center ${dropdown}`}>\r\n                        <li \r\n                        style={{backgroundColor: '#DC3D24'}}\r\n                        className='f4 pointer grow ph3 mv0 br2 white b pa2'\r\n                        onClick={() => onRouteChange('form')}\r\n                        >\r\n                            Session Joining Form\r\n                        </li>\r\n                        <li \r\n                        className={`none ph3 f4 mv0 b tc pt2 pointer ${route==='home'? 'active': 'effect effect-left'}`}\r\n                        href='#0'\r\n                        onClick={() => onRouteChange('home')}>\r\n                        \tHome\r\n                    \t</li>\r\n                        <li className='none ph3 f4 mv0 b tc pt2 pointer effect effect-left' href='#0'>About Us</li>\r\n                        <li className='none ph3 f4 mv0 b tc pt2 pointer effect effect-left' href='#0'>Contact Us</li>\r\n                        <li \r\n                        className={`none ph3 f4 mv0 b tc pt2 pointer ${route==='signin'? 'active': 'effect effect-left'}`}\r\n                        href='#0'\r\n                        onClick={() => onRouteChange('signin')}>\r\n                        \tSignIn\r\n                        </li>\r\n                        <li className='tc'><p className={`f6 link dim ph3 pv2 mb2 dib white bg-dark-blue cross pointer`} href='#0'\r\n                        onClick={()=>hamburger()}\r\n                        >\r\n                        X\r\n                        </p>\r\n                        </li>\r\n                    </ul>\r\n                </span>\r\n            </nav>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Navbar;","import React,{useState} from 'react';\r\nimport './JrRow.css';\r\n\r\nconst JrRow = ({rowObject, onRefresh}) => {\r\n\tconst {lead_id, lead_phone_number, handoverstatus, call_status_1, call_status_2, coded} = rowObject;\r\n\tvar disable;\r\n\r\n\tif (handoverstatus==='Handed') {\r\n\t\tdisable=true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tdisable=false;\r\n\t}\r\n\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\tconst [status1, setStatus1] = useState(call_status_1)\r\n\tconst [status2, setStatus2] = useState(call_status_2)\r\n\r\n\tconst status1Handler = (event) => {\r\n\t\tsetStatus1(event.target.value);\r\n\t}\r\n\r\n\tconst status2Handler = (event) => {\r\n\t\tsetStatus2(event.target.value);\r\n\t}\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='call_status_1')\r\n\t\t{\r\n\t\t\tsetStatus1(value);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetStatus2(value);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif(handoverstatus!=='Handed')\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/update', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_phone_number: lead_phone_number,\r\n                call_status_1: status1,\r\n                call_status_2: status2\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.')\r\n\t            \tonRefresh();\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(handoverstatus!=='Handed')\r\n\t\t{\r\n\t\t\tif(read===true)\r\n\t\t\t{\r\n\t\t\t\tsetRead(false)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tsetRead(true)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\tconst onHandover = () => {\r\n\t\tif(handoverstatus!=='Handed')\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/handover', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_id: lead_id,\r\n            \tlead_phone_number: lead_phone_number\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.Refresh to view changes.')\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index===0 || index===1 || index===2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_1\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\tdisabled={disable}/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_2\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\tdisabled={disable}/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\"\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`}\r\n\t\t\thref=\"#0\"\r\n\t\t\tonClick = {() => onSubmit()} \r\n\t\t\t>\r\n\t\t\t\tUpdateStatus\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\" \r\n\t\t\tonClick = {() => onHandover()} \r\n\t\t\t>\r\n\t\t\t\tHandover\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default JrRow;","import React from 'react';\r\nimport JrRow from './JrRow.js';\r\nimport './JrTable.css';\r\n\r\nconst JrTable = ({headerArray, ContentArray, onRefresh}) =>{\r\n\r\n\treturn(\r\n\t\t<div className=\"ma2 pa4\">\r\n            <div>\r\n            \t<table className=\"f6 mw8 center\" cellSpacing=\"0\">\r\n            \t\t<thead>\r\n\t            \t\t<tr>\r\n\t            \t\t\t{\r\n\t            \t\t\t\theaderArray.map((item,index) => {\r\n\t            \t\t\t\t\treturn(\r\n\t            \t\t\t\t\t\t<th key = {index} className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\">{item}</th>\r\n\t            \t\t\t\t\t);\r\n\t            \t\t\t\t})\r\n\t            \t\t\t}\r\n\t            \t\t</tr>\r\n            \t\t</thead>\r\n            \t\t<tbody className=\"lh-copy\">\r\n            \t\t\t{\r\n            \t\t\t\tContentArray.map((item,index) => {\r\n            \t\t\t\t\treturn(\r\n            \t\t\t\t\t\t<tr key={index} className={item.coded==='Yes'?\"bg-green\":(item.coded==='No'?\"bg-red\":\"\")}>\r\n            \t\t\t\t\t\t\t<JrRow rowObject={item} onRefresh={onRefresh}/>\r\n            \t\t\t\t\t\t</tr>\r\n            \t\t\t\t\t);\r\n            \t\t\t\t})\r\n            \t\t\t}\r\n            \t\t</tbody>\r\n            \t</table>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default JrTable;","import React,{useState, useEffect} from 'react';\r\nimport JrTable from '../JrTable/JrTable.js';\r\n\r\nconst JrCaller = ({user}) => {\r\n\r\n    const {username, telecaller_id} = user;\r\n\r\n    const leadDataHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'Status 1',\r\n        'Status 2',\r\n        'Handedover Status',\r\n        'Coded Status',\r\n        ''\r\n    ]\r\n\r\n    const [leadData, setLeadData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const onRefresh = () => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const onFetch = () => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/new', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if((resp!=='Unable to fetch' || resp!=='Unable to insert') && resp[0].lead_id)\r\n            {\r\n                var newArr = leadData;\r\n                newArr.push(...resp)\r\n                setLeadData(newArr);\r\n            }\r\n            else if(resp==='Not enough leads')\r\n            {\r\n                alert('Not enough leads')\r\n            }\r\n            else if(resp==='30min')\r\n            {\r\n                alert('30 minutes not yet elapsed from last fetch')\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong.Please try again.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"pa4\">\r\n            <div className=\"overflow-auto flex flex-column justify-center items-center\">\r\n            <div className=\"flex justify-center\">\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onFetch()}\r\n                >\r\n                    Fetch New Leads            \r\n                </div>\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onRefresh()}\r\n                >\r\n                    Refresh          \r\n                </div>\r\n            </div>\r\n               <JrTable headerArray={leadDataHeader} ContentArray={leadData} onRefresh={onRefresh}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default JrCaller;","import React from 'react';\r\n\r\nconst SrRow = ({rowObject, setJrCaller}) => {\r\n\tconst {username, telecaller_id} = rowObject;\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item, index) =>{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<td key={index} className=\"pv3 pr4 bb b--black-20\">{item}</td>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t<td\r\n\t\tstyle={{cursor: 'pointer'}}\r\n\t\tclassName=\"f6 tc link dim ph2 pv2 mb2 white dib br2 ma2 bg-blue\"\r\n\t\tonClick = {() => {\r\n\t\t\tsetJrCaller(username, telecaller_id)\r\n\t\t}}\r\n\t\t>\r\n\t\tView Caller Logs\r\n\t\t</td>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default SrRow;","import React from 'react';\r\nimport SrRow from './SrRow.js';\r\nimport './SrTable.css';\r\n\r\nconst SrTable = ({headerArray, contentArray, setJrCaller}) =>{\r\n\r\n\treturn(\r\n\t\t<div className=\"ma2 pa4\">\r\n            <div>\r\n            \t<table className=\"f6 mw8 center\" cellSpacing=\"0\">\r\n            \t\t<thead>\r\n\t            \t\t<tr>\r\n\t            \t\t\t{\r\n\t            \t\t\t\theaderArray.map((item,index) => {\r\n\t            \t\t\t\t\treturn(\r\n\t            \t\t\t\t\t\t<th key = {index} className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\">{item}</th>\r\n\t            \t\t\t\t\t);\r\n\t            \t\t\t\t})\r\n\t            \t\t\t}\r\n\t            \t\t</tr>\r\n            \t\t</thead>\r\n            \t\t<tbody className=\"lh-copy\">\r\n            \t\t{\r\n            \t\t\tcontentArray.map((item,index) => {\r\n            \t\t\t\treturn(\r\n                                          <tr key={index}>\r\n                  \t\t\t\t\t<SrRow \r\n                                                key={index} \r\n                                                rowObject={item}\r\n                                                setJrCaller={setJrCaller}\r\n                                                />\r\n                                          </tr>\r\n            \t\t\t\t);\r\n            \t\t\t})\r\n            \t\t}\r\n            \t\t</tbody>\r\n            \t</table>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default SrTable;\r\n","import React,{useState} from 'react';\r\n\r\nconst ModalRow = ({rowObject,fetchLogs}) => {\r\n\tconst {lead_id, lead_phone_number, handoverstatus, call_status_1, call_status_2, updatehandover, coded} = rowObject;\r\n\r\n\tconst [status1, setStatus1] = useState(call_status_1)\r\n\tconst [status2, setStatus2] = useState(call_status_2)\r\n\tconst [update, setUpdate] = useState(updatehandover)\r\n\r\n\tconst status1Handler = (event) => {\r\n\t\tsetStatus1(event.target.value);\r\n\t}\r\n\r\n\tconst status2Handler = (event) => {\r\n\t\tsetStatus2(event.target.value);\r\n\t}\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='call_status_1')\r\n\t\t{\r\n\t\t\tsetStatus1(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tsetStatus2(value);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetUpdate(value);\r\n\t\t}\r\n\t}\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\r\n\tconst onSubmit = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/sr/update', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_phone_number: lead_phone_number,\r\n                call_status_1: status1,\r\n                call_status_2: status2,\r\n                updatehandover: update\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.')\r\n\t            \tfetchLogs()\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index===0 || index===1 || index===2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_1\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_2\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===5)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"updatehandover\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName='bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2'\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\r\n\t\t\tonClick = {() => onSubmit()} \r\n\t\t\t>\r\n\t\t\t\tUpdateStatus\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ModalRow;","import React from 'react';\r\nimport ModalRow from './ModalRow.js'\r\n\r\nconst ModalTable = ({headerArray, contentArray, fetchLogs}) => {\r\n\treturn(\r\n\t\t<div className=\"ma2 pa4\">\r\n\t\t\t<div>\r\n\t\t\t\t<table className=\"f6 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theaderArray.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<th key={index} className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\">{item}</th>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{\r\n\t\t\t\t\tcontentArray.map((item,index) => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<tr key={index} className={item.coded==='Yes'?\"bg-green\":(item.coded==='No'?\"bg-red\":\"\")}>\r\n\t\t\t\t\t\t\t\t<ModalRow rowObject={item} fetchLogs={fetchLogs} />\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ModalTable;","import React,{Component} from 'react';\r\nimport SrTable from '../SrTable/SrTable.js';\r\nimport ModalTable from '../ModalTable/ModalTable.js';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport Modal from 'react-modal';\r\n\r\n  class SrCaller extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        setPreview: false,\r\n        user: this.props.user,\r\n        jrCaller: {\r\n          jrName:'',\r\n          jrTeleId: ''\r\n        },\r\n        data: [],\r\n        jrContent: [],\r\n      }\r\n    }\r\n\r\n    setPreviewState = (s1) => {\r\n      this.setState({\r\n        setPreview: s1\r\n      },() =>{\r\n        console.log('')\r\n      })\r\n    }\r\n\r\n    fetchLogs = () => {\r\n      fetch('https://frozen-river-89705.herokuapp.com/sr/log',{\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n          username: this.state.jrCaller.jrName,\r\n          telecaller_id: this.state.jrCaller.jrTeleId\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(resp => {\r\n        if(resp[0].lead_id)\r\n        {\r\n          this.setState({\r\n            jrContent: resp\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n          this.setState({\r\n            setPreview: true\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n        }\r\n        else if(resp==='empty')\r\n        {\r\n          alert(`No leads assigned to ${this.state.jrCaller.jrName}`)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        alert('Failed to load telecaller logs.Please try again.')\r\n      })\r\n    }\r\n\r\n    setJrCaller = (username1, telecaller_id1) => {\r\n      var user = {\r\n        jrName: '',\r\n        jrTeleId: ''\r\n      }\r\n      user.jrName = username1\r\n      user.jrTeleId = telecaller_id1\r\n      this.setState({\r\n        jrCaller: user\r\n      }, () => {\r\n        this.fetchLogs()\r\n      })\r\n    }\r\n\r\n    componentDidMount(){\r\n      fetch('https://frozen-river-89705.herokuapp.com/sr/fetch',{\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            username: this.state.user.username,\r\n            telecaller_id: this.state.user.telecaller_id\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(resp => {\r\n        if(resp[0].username)\r\n        {\r\n          this.setState({\r\n            data: resp\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n    render(){\r\n      const {data,setPreview,jrContent} = this.state;\r\n      const {jrName, jrTeleId} = this.state.jrCaller;\r\n      const leadDataHeader = [\r\n        'Username',\r\n        'Jr_Id'\r\n      ]\r\n\r\n      const jrHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'Status1',\r\n        'Status2',\r\n        'UpdateAfterHandover',\r\n        'HandoverStatus',\r\n        'Coded Status'\r\n      ]\r\n\r\n      const {username, telecaller_id} = this.state.user;\r\n\r\n      return(\r\n        <div className=\"pa4\">\r\n          <SrTable \r\n          headerArray={leadDataHeader} \r\n          contentArray={data} \r\n          setPreviewState={this.setPreviewState} \r\n          setJrCaller={this.setJrCaller}\r\n          />\r\n          <Modal \r\n          isOpen={setPreview}\r\n          ariaHideApp={false} \r\n          >\r\n            <div className=\"flex justify-end\">\r\n              <p\r\n              className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer flex justify-end items-center\" \r\n              onClick={() => this.setPreviewState(false)}\r\n              >X</p> \r\n            </div>\r\n            <div className='flex flex-column justify-center items-center'>\r\n              <h1>{`LOGS OF ${jrName}(${jrTeleId})`}</h1>\r\n              <div\r\n              style={{cursor: 'pointer'}}\r\n              className=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\r\n              onClick={() => this.fetchLogs()}\r\n              >\r\n              Refresh\r\n              </div>\r\n              <ModalTable headerArray={jrHeader} contentArray={jrContent} fetchLogs={this.fetchLogs}/>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SrCaller;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Form from './Components/Form/Form';\r\nimport Home from './Components/Home/Home';\r\nimport SignInPage from './Components/SignInPage/SignInPage';\r\nimport Admin from './Components/Admin/Admin';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Background from './Container/Images/Background.png';\r\nimport JrCaller from './Components/JrCaller/JrCaller';\r\nimport SrCaller from './Components/SrCaller/SrCaller';\r\n\r\nconst initialState = {\r\n\troute: 'home',\r\n    user: {\r\n        username: '',\r\n        telecaller_id: '',\r\n        des: ''\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tonRouteChange = (route) => {\r\n        console.log('Routing')\r\n\t\tthis.setState({route: route})\r\n\t}\r\n\r\n    loadUser = (user) => {\r\n        console.log('Loading user');\r\n        this.setState({user:{\r\n            username: user.username,\r\n            telecaller_id: user.telecaller_id,\r\n            des: user.des\r\n        }})\r\n    }\r\n\r\n    onSubmitHandler = (username, password) => {\r\n        fetch('http://localhost:3001/signin', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n                })\r\n             })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n        if(resp.des)\r\n        {\r\n            this.loadUser(resp);\r\n            this.onRouteChange(resp.des);\r\n        }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n  \trender()\r\n  \t{\r\n  \t\tconst {route,user} = this.state;\r\n    \tif(route==='home')\r\n    \t{\r\n    \t\treturn(\r\n\t\t\t\t<div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n    \t\t\t    <Home onRouteChange={this.onRouteChange} />\r\n\t    \t\t</div>\r\n    \t\t);\r\n    \t}\r\n    \telse if(route==='form')\r\n    \t{\r\n    \t\treturn(\r\n\t\t\t\t<div className=\"back\">\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n    \t\t\t\t<Form />\r\n    \t\t\t</div>\r\n    \t\t);\r\n    \t}\r\n        else if(route==='signin')\r\n        {\r\n            return(\r\n                <div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n                    <SignInPage loadUser={this.loadUser} onRouteChange={this.onRouteChange} onSubmitHandler={this.onSubmitHandler} />\r\n                </div>\r\n            );\r\n        }\r\n        else if(route==='Admin')\r\n        {\r\n            return(\r\n                <div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n                    <Admin />\r\n                </div>\r\n            );\r\n        }\r\n        else if(route==='JrCaller')\r\n        {\r\n            return(\r\n                <div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n                    <JrCaller user={user}/>\r\n                </div>\r\n            );\r\n        }\r\n\t\t\t\telse if(route==='SrCaller'){\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n\t\t\t\t\t\t\t\t\t<SrCaller user={user}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}