[{"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\index.js":"1","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\App.js":"3","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Navbar\\Navbar.js":"4","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Footer\\Footer.js":"5","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Admin\\Admin.js":"6","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Form\\Form.jsx":"7","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\JrCaller\\JrCaller.jsx":"8","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SignInPage\\SignInPage.jsx":"9","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Home\\Home.jsx":"10","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SrCaller\\SrCaller.jsx":"11","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\BatchTable\\BatchTable.js":"12","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Table\\Table.js":"13","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\LogTable\\LogTable.js":"14","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\JrTable\\JrTable.js":"15","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SrTable\\SrTable.js":"16","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\ModalTable\\ModalTable.js":"17","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\OpenAccount\\OpenAccount.js":"18","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\OurTraining\\ourTraining.js":"19","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\StillConfusing\\StillConfusing.js":"20","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\LogTable\\LogRow.js":"21","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\OurCourses\\OurCourses.js":"22","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\BatchTable\\BatchRow.js":"23","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Table\\Row.js":"24","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SrTable\\SrRow.js":"25","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\JrTable\\JrRow.js":"26","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\BackgroundCarousel\\BackgroundCarousel.jsx":"27","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\ModalTable\\ModalRow.js":"28"},{"size":542,"mtime":1615020387644,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":4688,"mtime":1616217616300,"results":"32","hashOfConfig":"30"},{"size":2590,"mtime":1616585047953,"results":"33","hashOfConfig":"30"},{"size":3164,"mtime":1616584956919,"results":"34","hashOfConfig":"30"},{"size":19451,"mtime":1616219183974,"results":"35","hashOfConfig":"30"},{"size":12037,"mtime":1615056618904,"results":"36","hashOfConfig":"30"},{"size":4101,"mtime":1616090708464,"results":"37","hashOfConfig":"30"},{"size":4472,"mtime":1615022677251,"results":"38","hashOfConfig":"30"},{"size":662,"mtime":1614881806247,"results":"39","hashOfConfig":"30"},{"size":4504,"mtime":1616090708692,"results":"40","hashOfConfig":"30"},{"size":1107,"mtime":1614005658554,"results":"41","hashOfConfig":"30"},{"size":1179,"mtime":1613109149200,"results":"42","hashOfConfig":"30"},{"size":1071,"mtime":1614005658631,"results":"43","hashOfConfig":"30"},{"size":1148,"mtime":1614878849797,"results":"44","hashOfConfig":"30"},{"size":1333,"mtime":1614531055013,"results":"45","hashOfConfig":"30"},{"size":872,"mtime":1614878849837,"results":"46","hashOfConfig":"30"},{"size":3962,"mtime":1616251506976,"results":"47","hashOfConfig":"30"},{"size":2213,"mtime":1616584885726,"results":"48","hashOfConfig":"30"},{"size":1271,"mtime":1615023173505,"results":"49","hashOfConfig":"30"},{"size":417,"mtime":1614005658631,"results":"50","hashOfConfig":"30"},{"size":5084,"mtime":1615023131905,"results":"51","hashOfConfig":"30"},{"size":422,"mtime":1614005658522,"results":"52","hashOfConfig":"30"},{"size":14282,"mtime":1614961638608,"results":"53","hashOfConfig":"30"},{"size":651,"mtime":1614531055009,"results":"54","hashOfConfig":"30"},{"size":5695,"mtime":1616090708504,"results":"55","hashOfConfig":"30"},{"size":4754,"mtime":1616585221410,"results":"56","hashOfConfig":"30"},{"size":5979,"mtime":1616090708548,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"hi494z",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\index.js",[],["124","125"],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\App.js",["126"],"import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    HashRouter\r\n  } from \"react-router-dom\";\r\nimport Form from './Components/Form/Form';\r\nimport Home from './Components/Home/Home';\r\nimport SignInPage from './Components/SignInPage/SignInPage';\r\nimport Admin from './Components/Admin/Admin';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport JrCaller from './Components/JrCaller/JrCaller';\r\nimport SrCaller from './Components/SrCaller/SrCaller';\r\nimport Footer from './Components/Footer/Footer';\r\n\r\nconst initialState = {\r\n\troute: 'home',\r\n    user: {\r\n        username: '',\r\n        telecaller_id: '',\r\n        des: ''\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tonRouteChange = (route) => {\r\n        console.log('Routing')\r\n\t\tthis.setState({route: route})\r\n\t}\r\n\r\n    loadUser = (user) => {\r\n        console.log('Loading user');\r\n        this.setState({user:{\r\n            username: user.username,\r\n            telecaller_id: user.telecaller_id,\r\n            des: user.des\r\n        }})\r\n    }\r\n\r\n    onSubmitHandler = (username, password) => {\r\n        fetch('http://localhost:3001/signin', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n                })\r\n             })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n        if(resp.des)\r\n        {\r\n            this.loadUser(resp);\r\n            this.onRouteChange(resp.des);\r\n        }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n  \trender()\r\n  \t{\r\n        const {user} = this.state;\r\n        return(\r\n          <HashRouter>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Home />\r\n                  <Footer/>\r\n                </Route>\r\n                \r\n                <Route exact path=\"/form\">\r\n                  <Navbar />\r\n                  <Form />\r\n                </Route>\r\n\r\n                <Route exact path=\"/signin\">\r\n                  <Navbar />\r\n                  <SignInPage loadUser={this.loadUser} onSubmitHandler={this.onSubmitHandler} /> \r\n                </Route>\r\n\r\n                <Route exact path=\"/admin\">\r\n                  <Navbar />\r\n                  <Admin /> \r\n                </Route>\r\n\r\n                <Route exact path=\"/jrcaller\">\r\n                  <Navbar />\r\n                  <JrCaller user={user}/> \r\n                </Route>\r\n\r\n                <Route exact path=\"/srcaller\">\r\n                  <Navbar />\r\n                  <SrCaller user={user}/>\r\n                </Route>\r\n\r\n              </Switch>\r\n              </HashRouter>\r\n        );\r\n  \t// \tconst {route,user} = this.state;\r\n    // \tif(route==='home')\r\n    // \t{\r\n    // \t\treturn(\r\n\t// \t\t\t<div>\r\n    //                 {/* <Navbar route = {route} onRouteChange={this.onRouteChange} /> */}\r\n    // \t\t\t    <Home onRouteChange={this.onRouteChange} />\r\n    //                 <Footer onRouteChange={this.onRouteChange}/>\r\n\t//     \t\t</div>\r\n    // \t\t);\r\n    // \t}\r\n    // \telse if(route==='form')\r\n    // \t{\r\n    // \t\treturn(\r\n\t// \t\t\t<div className=\"back\">\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n    // \t\t\t\t<Form />\r\n    // \t\t\t</div>\r\n    // \t\t);\r\n    // \t}\r\n    //     else if(route==='signin')\r\n    //     {\r\n    //         return(\r\n    //             <div>\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n    //                 <SignInPage loadUser={this.loadUser} onRouteChange={this.onRouteChange} onSubmitHandler={this.onSubmitHandler} />\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n    //     else if(route==='Admin')\r\n    //     {\r\n    //         return(\r\n    //             <div>\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n    //                 <Admin />\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n    //     else if(route==='JrCaller')\r\n    //     {\r\n    //         return(\r\n    //             <div>\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n    //                 <JrCaller user={user}/>\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n\t// \t\t\telse if(route==='SrCaller'){\r\n\t// \t\t\t\treturn(\r\n\t// \t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t<Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n\t// \t\t\t\t\t\t\t\t<SrCaller user={user}/>\r\n\t// \t\t\t\t\t\t</div>\r\n\t// \t\t\t\t);\r\n\t// \t\t\t}\r\n    // }\r\n        }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Footer\\Footer.js",["127","128","129","130","131","132"],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Admin\\Admin.js",["133","134","135"],"import React,{useState, useEffect} from 'react';\r\nimport Table from '../Table/Table.js';\r\nimport LogTable from '../LogTable/LogTable.js';\r\nimport BatchTable from '../BatchTable/BatchTable.js';\r\nimport './Admin.css';\r\nconst Admin = () => {\r\n\r\n\tconst leadDataHeader = [\r\n\t\t'LeadId',\r\n\t\t'Assigned To',\r\n\t\t'LeadName',\r\n\t\t'LeadContact',\r\n\t\t'WhatsApp Number',\r\n\t\t'Account Opening Number',\r\n\t\t'First Status',\r\n\t\t'Second Status',\r\n\t\t'Update After Hand-Over',\r\n        'City',\r\n        'Knowledge', \r\n        'Demat',\r\n        'Broker' ,\r\n        'Preffered Language',\r\n        'Microsoft Id',\r\n        'Coded',\r\n        'Payment'\r\n\t]\r\n\r\n\tconst logDataHeader = [\r\n\t\t'Username',\r\n\t\t'Telecaller Id',\r\n\t\t'Handover Count'\r\n\t]\r\n\r\n\tconst [leadData, setLeadData] = useState([])\r\n\r\n\tconst [filter, setFilter] = useState('*')\r\n\r\n\tconst setFilterField = (event) => {\r\n\t\tsetFilter(event.target.value);\r\n\t}\r\n\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [usernameFlag, setUsernameFlag] = useState(false)\r\n\tconst [usernameErr, setUsernameErr] = useState('')\r\n\r\n\tconst setUsernameField = (event) => {\r\n\t\tsetUsername(event.target.value)\r\n\t}\r\n\r\n\tconst usernameValidate = () => {\r\n\t\tif(username==='')\r\n\t\t{\r\n\t\t\tsetUsernameFlag(false)\r\n\t\t\tsetUsernameErr('Set username field')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetUsernameFlag(true)\r\n\t\t\tsetUsernameErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [passwordFlag, setPasswordFlag] = useState(false)\r\n\tconst [passwordErr, setPasswordErr] = useState('')\r\n\r\n\tconst setPasswordField = (event) => {\r\n\t\tsetPassword(event.target.value)\r\n\t}\r\n\r\n\tconst passwordValidate = () => {\r\n\t\tif(password==='')\r\n\t\t{\r\n\t\t\tsetPasswordFlag(false)\r\n\t\t\tsetPasswordErr('Set password field')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetPasswordFlag(true)\r\n\t\t\tsetPasswordErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [telecaller_id, setTelecaller] = useState('')\r\n\tconst [telecallerFlag, setTelecallerFlag] = useState(false)\r\n\tconst [telecallerErr, setTelecallerErr] = useState('')\r\n\r\n\tconst setTelecallerField = (event) => {\r\n\t\tsetTelecaller(event.target.value);\r\n\t}\r\n\r\n\tconst telecallerValidate = () => {\r\n\t\tif(telecaller_id==='')\r\n\t\t{\r\n\t\t\tsetTelecallerFlag(false)\r\n\t\t\tsetTelecallerErr('Set Telecaller Id')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetTelecallerFlag(true)\r\n\t\t\tsetTelecallerErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [des, setDes] = useState('none')\r\n\tconst [desFlag, setDesFlag] = useState(false)\r\n\tconst [desErr, setDesErr] = useState('')\r\n\r\n\tconst setDesField = (event) => {\r\n\t\tsetDes(event.target.value)\r\n\t}\r\n\r\n\tconst desValidate = () => {\r\n\t\tif (des==='none') {\r\n\t\t\tsetDesFlag(false)\r\n\t\t\tsetDesErr('Set Designation of caller')\r\n\t\t}\r\n\t\telse if(des!=='JrCaller')\r\n\t\t{\r\n\t\t\tsetAssigned('')\r\n\t\t\tdocument.getElementById('assigned_to').value = ''\r\n\t\t\tconsole.log(document.getElementById('assigned_to').value)\r\n\t\t}\r\n\t\t{\r\n\t\t\tsetDesFlag(true)\r\n\t\t\tsetDesErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [assigned, setAssigned] = useState('')\r\n\tconst [assignedFlag, setAssignedFlag] = useState(false)\r\n\tconst [assignedErr, setAssignedErr] = useState('')\r\n\r\n\tconst setAssignedField = (event) => {\r\n\t\tsetAssigned(event.target.value);\r\n\t}\r\n\r\n\tconst assignedValidate = () => {\r\n\t\tif(des==='JrCaller')\r\n\t\t{\r\n\t\t\tconsole.log(des)\r\n\t\t\tif(assigned==='')\r\n\t\t\t{\r\n\t\t\t\tconsole.log(assigned)\r\n\t\t\t\tsetAssignedFlag(false)\r\n\t\t\t\tsetAssignedErr('Assigned to field compulsary.')\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tsetAssignedFlag(true)\r\n\t\t\t\tsetAssignedErr('')\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetAssignedFlag(true)\r\n\t\t\tsetAssignedErr('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst addTelecaller = () => {\r\n\t\tif(assigned==='' && des!=='JrCaller')\r\n\t\t{\r\n\t\t\tsetAssignedFlag(true)\r\n\t\t\tsetAssignedErr('')\r\n\t\t}\r\n\t\tif(\r\n\t\t\tusernameFlag &&\r\n\t\t\tpasswordFlag &&\r\n\t\t\ttelecallerFlag &&\r\n\t\t\tdesFlag &&\r\n\t\t\tassignedFlag\r\n\t\t)\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/register', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n                telecaller_id: telecaller_id,\r\n                des: des,\r\n                assigned: assigned\r\n                })\r\n             })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t       \t\tif (resp==='Registered') {\r\n\t       \t\t\talert('Telecaller registered successfully')\r\n\t       \t\t}\r\n\t       \t\telse if(resp==='Not Unique.')\r\n\t       \t\t{\r\n\t       \t\t\talert('Looks like telecaller with same Telecaller Id is already registered.')\r\n\t       \t\t}\r\n\t       \t\telse{\r\n\t       \t\t\talert('OOPs....something went wrong.Please try again.')\r\n\t       \t\t}\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tusernameValidate()\r\n\t\t\tpasswordValidate()\r\n\t\t\ttelecallerValidate()\r\n\t\t\tdesValidate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst showHandler = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/show', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                filter: filter\r\n                })\r\n             })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t       \t\tif(resp!=='Unable to fetch')\r\n\t       \t\t{\r\n\t       \t\t\tsetLeadData(resp)\r\n\t       \t\t}\r\n\t       \t\telse\r\n\t       \t\t{\r\n\t       \t\t\talert('Unable to fetch.Please try again.')\r\n\t       \t\t}\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst [popState, setPopState] = useState('none');\r\n\r\n\tconst setPopStateField = () => {\r\n        if(popState==='none')\r\n        {\r\n            setPopState('block');\r\n        }\r\n        else\r\n        {\r\n        \tsetPopState('none')\r\n        }\r\n    }\r\n\r\n    const [popPayState, setPopPayState] = useState('none');\r\n    const [teleId, setTeleId] = useState('');\r\n    const [logContentArray, setLogContentArray] = useState([]);\r\n\r\n    const setTeleIdField = (event) => {\r\n    \tsetTeleId(event.target.value);\r\n    }\r\n\r\n\tconst setPopPayStateField = () => {\r\n        if(popPayState==='none')\r\n        {\r\n            setPopPayState('block');\r\n        }\r\n        else\r\n        {\r\n        \tsetPopPayState('none')\r\n        \tsetTeleId('')\r\n        \tsetLogContentArray([])\r\n        }\r\n    }\r\n\r\n    const [popBatch, setPopBatch] = useState('none')\r\n    const setPopBatches = () => {\r\n    \tif(popBatch==='none')\r\n    \t{\r\n    \t\tsetPopBatch('block')\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\tsetPopBatch('none')\r\n    \t}\r\n    }\r\n\r\n    const fetchBatch = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/batch/fetch', {\r\n    \t\t\tmethod: 'post',\r\n    \t\t\theaders: {'Content-Type': 'application/json'},\r\n    \t\t\tbody: JSON.stringify({\r\n    \t\t\t\tbatch: batch\r\n    \t\t\t})\r\n    \t\t})\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(resp => {\r\n    \t\t\tif(resp!=='fail')\r\n    \t\t\t{\r\n    \t\t\t\tsetBatchContentArray(resp)\r\n    \t\t\t}\r\n    \t\t\telse\r\n    \t\t\t{\r\n    \t\t\t\tconsole.log('Fetch call to batches failed')\r\n    \t\t\t}\r\n    \t\t})\r\n    \t\t.catch(err => console.log(err))\r\n    }\r\n\r\n    const batchDataHeader = [\r\n    \t'LeadId',\r\n    \t'LeadName',\r\n    \t'LeadContact',\r\n    \t'WhatsApp Number',\r\n\t\t'Account Opening Number',\r\n\t\t'City',\r\n\t\t'Knowledge',\r\n\t\t'Demat',\r\n\t\t'Broker',\r\n\t\t'Preffered Language'\r\n    ]\r\n\r\n    const [batchContentArray, setBatchContentArray] = useState([]);\r\n\r\n    const [batch, setBatch] = useState('current')\r\n    const changeBatch = () => {\r\n    \tif(batch==='current')\r\n    \t{\r\n    \t\tsetBatch('next')\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\tsetBatch('current')\r\n    \t}\r\n    }\r\n\r\n    const onShowDetails = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/log', {\r\n    \t\tmethod: 'post',\r\n    \t\theaders: {'Content-Type': 'application/json'},\r\n    \t\tbody: JSON.stringify({\r\n    \t\t\tteleId: teleId\r\n    \t\t})\r\n    \t})\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif (resp[0].username) {\r\n    \t\t\tsetLogContentArray(resp)\r\n    \t\t}\r\n    \t\telse if(resp==='Incorrect Submission')\r\n    \t\t{\r\n    \t\t\talert('Incorrect submission')\r\n    \t\t}\r\n    \t})\r\n    \t.catch(err => console.log(err))\r\n    }\r\n\r\n    const batchHandler = (event) => {\r\n    \tconst name = event.target.getAttribute('name');\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/batch/modify', {\r\n    \t\tmethod: 'post',\r\n    \t\theaders: {'Content-Type': 'application/json'},\r\n    \t\tbody: JSON.stringify({\r\n    \t\t\tname: name\r\n    \t\t})\r\n    \t})\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif(resp==='Success')\r\n    \t\t{\r\n    \t\t\talert('Success')\r\n    \t\t\tfetchBatch()\r\n    \t\t}\r\n    \t})\r\n    \t.catch(err => {\r\n    \t\tconsole.log(err)\r\n    \t\talert('OOPs...something went wrong.Please try again.')\r\n    \t})\r\n    }\r\n\r\n    const [srCaller, setSrCaller] = useState([])\r\n\r\n    const fetchSrCallers = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/srcaller')\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif(resp[0].username)\r\n    \t\t{\r\n    \t\t\tsetSrCaller(resp)\r\n    \t\t}\r\n    \t})\r\n    \t.catch(err => {\r\n    \t\tconsole.log(err)\r\n    \t})\r\n    }\r\n\r\n    const [leadNameFilter, setLeadNameFilter] = useState('')\r\n\r\n    const fetchByName = () => {\r\n    \tfetch('https://frozen-river-89705.herokuapp.com/admin/name', {\r\n    \t\tmethod: 'post',\r\n    \t\theaders: {'Content-Type': 'application/json'},\r\n    \t\tbody: JSON.stringify({\r\n    \t\t\tleadNameFilter: leadNameFilter\r\n    \t\t})\r\n    \t})\r\n    \t.then(response => response.json())\r\n    \t.then(resp => {\r\n    \t\tif(resp!=='Unable to fetch')\r\n       \t\t{\r\n       \t\t\tsetLeadData(resp)\r\n       \t\t}\r\n       \t\telse if(resp==='Incorrect submission')\r\n       \t\t{\r\n       \t\t\talert(resp);\r\n       \t\t}\r\n       \t\telse\r\n       \t\t{\r\n       \t\t\talert('Unable to fetch.Please try again.')\r\n       \t\t}\r\n    \t})\r\n    \t.catch(err =>{\r\n    \t\tconsole.log(err)\r\n    \t\talert('OOPs...something went wrong.Please try again.');\r\n    \t})\r\n    }\r\n\r\n    useEffect(() => {\r\n    \tfetchBatch()\r\n    \tfetchSrCallers()\r\n    }, [batch])\r\n\r\n\treturn(\r\n\t\t<div style={{display: 'flex', flexDirection: 'column', justifyCenter: 'center', itemsCenter: 'flex-end'}}>\t\r\n\t\t\t <div id='pop-up' className='bg-white shadow-4 pop-up' style={{display: `${popState}`}}>\r\n                <a \r\n                onClick={() => setPopStateField()} \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\" \r\n                href=\"#0\">\r\n                    X\r\n                </a>\r\n                <div style={{height:'100%'}} className='flex justify-center items-center flex-column'>\r\n                    <h2>Add New Telecaller</h2>\r\n                    <div>\r\n                        <p>New Username</p>\r\n                        <input\r\n                        id=\"number\" \r\n                        type=\"text\" \r\n                        autoComplete=\"blej\"\r\n                        onChange={(event) => setUsernameField(event)}\r\n                        onBlur={() => usernameValidate()}\r\n                        />\r\n                    </div>\r\n                    <div className=\"f4 red\">{usernameErr}</div>\r\n                    <div>\r\n                        <p>Password</p>\r\n                        <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"blej\"\r\n                        onChange={(event) => setPasswordField(event)}\r\n                        onBlur={() => passwordValidate()}\r\n                        />\r\n                    </div>\r\n                    <div className=\"f4 red\">{passwordErr}</div>\r\n\t                <div>\r\n\t\t\t\t\t\t<p>Telecaller Id</p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"telecaller_id\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tautoComplete=\"blej\"\r\n\t\t\t\t\t\tonChange={(event) => setTelecallerField(event)}\r\n\t\t\t\t\t\tonBlur={() => telecallerValidate()}\r\n\t\t\t\t\t\t/>\r\n                    </div>\r\n                    <div className=\"f4 red\">{telecallerErr}</div>\r\n                    <div>\r\n\t\t\t\t\t\t<p>Designation</p>\r\n\t\t\t\t\t\t<select \r\n\t\t\t\t\t\tstyle={{width: '185px'}}\r\n\t\t\t\t\t\tonChange={(event) => setDesField(event)}\r\n\t\t\t\t\t\tonBlur={() => desValidate()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='none'>None</option>\r\n\t\t\t\t\t\t\t<option value='SrCaller'>Senior Caller</option>\r\n\t\t\t\t\t\t\t<option value='JrCaller'>Junior Caller</option>\r\n\t\t\t\t\t\t</select>\r\n                    </div>\r\n                    <div className=\"flex flex-column justify-center items-center ma2 pa3\" style = {{display: `${des==='JrCaller'?'flex':'none'}`}}>\r\n\t\t\t\t\t\t<p>Assigned to:</p>\r\n\t\t\t\t\t\t<div className=\"flex justify-center items-center pa2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"assigned_to\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"blej\"\r\n\t\t\t\t\t\t\tplaceholder='Enter SrCaller Id'\r\n\t\t\t\t\t\t\tclassName='ma1'\r\n\t\t\t\t\t\t\tonChange={(event) => setAssignedField(event)}\r\n\t\t\t\t\t\t\tonBlur={() => assignedValidate()}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t<option value=''>Select SrCaller</option>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsrCaller.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={item.telecaller_id}>{`${item.username}(${item.telecaller_id})`}</option>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<div className=\"f4 red\">{assignedErr}</div>\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                    <div className=\"f4 red\">{telecallerErr}</div>\r\n                    <div className=\"f4 red\">{desErr}</div>\r\n                    <div\r\n                    style={{cursor: \"pointer\"}}\r\n                    className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\" \r\n                    href=\"#0\"\r\n                    onClick={() => addTelecaller()}\r\n                    >\r\n                    Add Telecaller\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n{/*-------------- PopUp fpr Payment CheckOut ----------------------------*/}\r\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up-payment-checkout' style={{display: `${popPayState}`, zIndex: '1'}}>\r\n                <a \r\n                onClick={() => setPopPayStateField()} \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\" \r\n                href=\"#0\">\r\n                    X\r\n                </a>\r\n                <div style={{height:'100%'}} className='flex justify-center items-center flex-column'>\r\n                    <h2>TELECALLER LOGS</h2>\r\n                    <div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"pv1 ma2\"\r\n\t\t\t\t\t\tautoComplete=\"blej\"\r\n\t\t\t\t\t\tonChange={(event) => setTeleIdField(event)} \r\n\t\t\t\t\t\tplaceholder='Enter Telecaller name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span \r\n\t\t\t\t\t\tclass=\"f6 link dim ph3 pv2 mb2 dib white br2 bg-dark-blue\"\r\n\t\t\t\t\t\tonClick = {() => onShowDetails()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\tShowDetails\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<LogTable headerArray={logDataHeader} ContentArray={logContentArray} />\r\n                </div>\r\n            </div>\r\n\r\n{/* ---------------------------------------------------- */}\r\n\r\n\r\n{/*-------------- PopUp fpr Batches ----------------------------*/}\r\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up-batches' style={{display: `${popBatch}`, zIndex: '1'}}>\r\n                <a \r\n                onClick={() => setPopBatches()} \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\">\r\n                    X\r\n                </a>\r\n                <div style={{height:'100%'}} className='flex justify-center items-center flex-column'>\r\n                \t<hr style={{width:'99%', padding: '1px', backgroundColor: 'black'}}/>\r\n                    <h2>BATCHES</h2>\r\n                    <hr style={{width:'99%', padding: '1px', backgroundColor: 'black'}}/>\r\n                    <div className=\"flex justify-center items-center\">\r\n\t                    <h3 \r\n\t                    className={`ma2 pa2 f4 b tc pointer ${batch==='current'?'active1':'effect1 effect1-left'}`}\r\n\t                    onClick={() => changeBatch()}>\r\n\t                    Current\r\n\t                    </h3>\r\n\t                    <h3 \r\n\t                    className={`ma2 pa2 f4 b tc pointer ${batch==='next'?'active1':'effect1 effect1-left'}`}\r\n\t                    onClick={() => changeBatch()}>\r\n\t                    Next\r\n\t                    </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<BatchTable headerArray={batchDataHeader} ContentArray={batchContentArray} />\r\n\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\tname={batch} \r\n\t\t\t\t\t\tclassName=\"pointer f6 link dim ph3 pv2 mb2 dib white br2 bg-dark-blue mh2\"\r\n\t\t\t\t\t\tonClick={(event) => batchHandler(event)}>\r\n\t\t\t\t\t\t{batch==='current'?'Clear Batch':'Transfer to Current'}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n                </div>\r\n            </div>\r\n\r\n{/* ---------------------------------------------------- */}\r\n\r\n\t\t\t<div className=\"admin-container overflow-auto\">\r\n\t\t\t\t\t<div className='flex justify-center items-center flex-column'>\r\n\t\t\t\t\t\t<div>\r\n\t\t                    <select\r\n\t\t                    onChange = {(event) => setFilterField(event)}\r\n\t\t                    >\r\n\t\t                        <option value=\"*\">--Select--</option>\r\n\t\t                        <option value='*'>All</option>\r\n\t\t                        <option value='no'>Unassigned</option>\r\n\t\t                        <option value='Jryes'>Assigned to Jr Caller</option>\r\n\t\t                        <option value=\"Handed Over\">IsHandedOver(Y)</option>\r\n\t\t                        <option value=\"Not Handed Over\">IsHandedOver(N)</option>\r\n\t\t                        <option value=\"processed\">Processed</option>\r\n\t\t                    </select>\r\n\t\t                    <div \r\n\t\t                    className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t                    href=\"#0\"\r\n\t\t                    onClick = {() => showHandler()} \r\n\t\t                    >\r\n\t\t                    Show Data\r\n\t\t                    </div>\r\n\t\t                    <div \r\n\t\t                    className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\r\n\t\t                    onClick = {() => showHandler()} \r\n\t\t                    >\r\n\t\t                    Refresh\r\n\t\t                    </div>\r\n\t\t                </div>\r\n\t\t                <div className=\"flex justify-center\">\r\n\t\t                \t<input \r\n\t\t                \ttype=\"text\" \r\n\t\t                \tclassName=\"ma2\" \r\n\t\t                \tplaceholder=\"Search by telecallerName\"\r\n\t\t                \tstyle={{width: \"190px\"}}\r\n\t\t                \tonChange={(event) => setLeadNameFilter(event.target.value)}\r\n\t\t                \t/>\r\n\t\t                \t<div \r\n\t\t                \tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\r\n\t\t                \tonClick = {() => fetchByName()}\r\n\t\t                \t>\r\n\t\t                \tSearch\r\n\t\t                \t</div>\r\n\t\t                </div>\r\n\t\t                <Table showHandler={showHandler} headerArray={leadDataHeader} ContentArray={leadData} />\r\n\t\t                <div className=\"flex\">\r\n\t\t\t                <div\r\n\t\t\t                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\r\n\t\t\t                onClick={() => setPopStateField()}>\r\n\t\t\t                Register New Telecallers            \r\n\t\t\t            \t</div>\r\n\t\t\t                <div\r\n\t\t\t                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\r\n\t\t\t                onClick={() => setPopPayStateField()}>\r\n\t\t\t                Check Telecaller Logs            \r\n\t\t\t            \t</div>\r\n\t\t\t            \t<div\r\n\t\t\t                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n\t\t\t                onClick={() => setPopBatches()}>\r\n\t\t\t                Check Batches    \r\n\t\t\t            \t</div>\r\n\t\t            \t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t);\r\n}\r\n\r\nexport default Admin;","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Form\\Form.jsx",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\JrCaller\\JrCaller.jsx",["136"],"import React,{useState, useEffect} from 'react';\r\nimport JrTable from '../JrTable/JrTable.js';\r\n\r\nconst JrCaller = ({user}) => {\r\n\r\n    const {username, telecaller_id} = user;\r\n\r\n    const leadDataHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'WhatsappNo',\r\n        'AccountOpening No',\r\n        'LeadCity',\r\n        'Demat Account',\r\n        'Broker Name',\r\n        'Prior Knowledge',\r\n        'Preffered Language',\r\n        'Status 1',\r\n        'Status 2',\r\n        'Handedover Status',\r\n        'Coded Status',\r\n        'Payment Status'\r\n    ]\r\n\r\n    const [leadData, setLeadData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const onRefresh = () => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const onFetch = () => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/new', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if((resp!=='Unable to fetch' || resp!=='Unable to insert') && resp[0].lead_id)\r\n            {\r\n                var newArr = leadData;\r\n                newArr.push(...resp)\r\n                setLeadData(newArr);\r\n            }\r\n            else if(resp==='Not enough leads')\r\n            {\r\n                alert('Not enough leads')\r\n            }\r\n            else if(resp==='30min')\r\n            {\r\n                alert('30 minutes not yet elapsed from last fetch')\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong.Please try again.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"pa4\">\r\n            <div className=\"overflow-auto flex flex-column justify-center items-center\">\r\n            <div className=\"flex justify-center\">\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onFetch()}\r\n                >\r\n                    Fetch New Leads            \r\n                </div>\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onRefresh()}\r\n                >\r\n                    Refresh        \r\n                </div>\r\n            </div>\r\n               <JrTable headerArray={leadDataHeader} ContentArray={leadData} onRefresh={onRefresh}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JrCaller;","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SignInPage\\SignInPage.jsx",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SrCaller\\SrCaller.jsx",["137","138","139"],"import React,{Component} from 'react';\r\nimport SrTable from '../SrTable/SrTable.js';\r\nimport ModalTable from '../ModalTable/ModalTable.js';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport Modal from 'react-modal';\r\n\r\n  class SrCaller extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        setPreview: false,\r\n        user: this.props.user,\r\n        jrCaller: {\r\n          jrName:'',\r\n          jrTeleId: ''\r\n        },\r\n        data: [],\r\n        jrContent: [],\r\n      }\r\n    }\r\n\r\n    setPreviewState = (s1) => {\r\n      this.setState({\r\n        setPreview: s1\r\n      },() =>{\r\n        console.log('')\r\n      })\r\n    }\r\n\r\n    fetchLogs = () => {\r\n      fetch('https://frozen-river-89705.herokuapp.com/sr/log',{\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n          username: this.state.jrCaller.jrName,\r\n          telecaller_id: this.state.jrCaller.jrTeleId\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(resp => {\r\n        if(resp[0].lead_id)\r\n        {\r\n          this.setState({\r\n            jrContent: resp\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n          this.setState({\r\n            setPreview: true\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n        }\r\n        else if(resp==='empty')\r\n        {\r\n          alert(`No leads assigned to ${this.state.jrCaller.jrName}`)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        alert('Failed to load telecaller logs.Please try again.')\r\n      })\r\n    }\r\n\r\n    setJrCaller = (username1, telecaller_id1) => {\r\n      var user = {\r\n        jrName: '',\r\n        jrTeleId: ''\r\n      }\r\n      user.jrName = username1\r\n      user.jrTeleId = telecaller_id1\r\n      this.setState({\r\n        jrCaller: user\r\n      }, () => {\r\n        this.fetchLogs()\r\n      })\r\n    }\r\n\r\n    componentDidMount(){\r\n      fetch('https://frozen-river-89705.herokuapp.com/sr/fetch',{\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            username: this.state.user.username,\r\n            telecaller_id: this.state.user.telecaller_id\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(resp => {\r\n        if(resp[0].username)\r\n        {\r\n          this.setState({\r\n            data: resp\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n    render(){\r\n      const {data,setPreview,jrContent} = this.state;\r\n      const {jrName, jrTeleId} = this.state.jrCaller;\r\n      const leadDataHeader = [\r\n        'Username',\r\n        'Jr_Id'\r\n      ]\r\n\r\n      const jrHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'Whatsapp',\r\n        'AccountOpening No',\r\n        'LeadCity',\r\n        'Demat Account',\r\n        'Broker Name',\r\n        'Prior Knowledge',\r\n        'Preffered Language',\r\n        'Status1',\r\n        'Status2',\r\n        'UpdateAfterHandover',\r\n        'HandoverStatus',\r\n        'Coded Status',\r\n        'Payment Status'\r\n      ]\r\n\r\n      const {username, telecaller_id} = this.state.user;\r\n\r\n      return(\r\n        <div className=\"pa4\">\r\n          <SrTable \r\n          headerArray={leadDataHeader} \r\n          contentArray={data} \r\n          setPreviewState={this.setPreviewState} \r\n          setJrCaller={this.setJrCaller}\r\n          />\r\n          <Modal \r\n          isOpen={setPreview}\r\n          ariaHideApp={false} \r\n          >\r\n            <div className=\"flex justify-end\">\r\n              <p\r\n              className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer flex justify-end items-center\" \r\n              onClick={() => this.setPreviewState(false)}\r\n              >X</p> \r\n            </div>\r\n            <div className='flex flex-column justify-center items-center'>\r\n              <h1>{`LOGS OF ${jrName}(${jrTeleId})`}</h1>\r\n              <div\r\n              style={{cursor: 'pointer'}}\r\n              className=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\r\n              onClick={() => this.fetchLogs()}\r\n              >\r\n              Refresh\r\n              </div>\r\n              <ModalTable headerArray={jrHeader} contentArray={jrContent} fetchLogs={this.fetchLogs}/>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SrCaller;","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\BatchTable\\BatchTable.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Table\\Table.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\LogTable\\LogTable.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\JrTable\\JrTable.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SrTable\\SrTable.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\ModalTable\\ModalTable.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\OpenAccount\\OpenAccount.js",["140","141"],"import React from \"react\";\nimport 'tachyons';\nimport './OpenAccount.css';\nimport ZerodhaImg from './Zerodha.jpg';\nimport Angel from './Angel-Broking.jpg';\n\nexport default function OpenAccount() {\n    return (\n        <section className={'mr-auto w-100 bg-black white tl'}>\n            <div className={'pv5 pb5 w-80-ns ml-auto-ns mr-auto-ns'}>\n                <div className={''}>\n\n                    <div className={''}>\n                        <p className={'pl3 pt1 mb0-ns downMove'}>Open An Online Trading Account</p><h1\n                        className={'w-50-ns pl3 f1-ns tl-ns'}><span>Open Your<span\n                        className={'red'}> DEMAT</span> </span></h1></div>\n                </div>\n                <div className={'flex flex-wrap'}>\n                    <article className=\"w-50-ns  shadow-2 center br3 pa3 pa4-ns mv3 \">\n                        <div className={'flex flex-wrap justify-center'}>\n                            <div className=\"tc\">\n                                <div>\n                                    <img width=\"290px\" height='130px' className=\"img-fluid partner_img\" src={ZerodhaImg}\n                                         alt=\"Zerodha Logo\"/>\n                                </div>\n                                <p className={'w-70-ns f4-ns mr-auto ml-auto '}>\n                                With high-class technology, unique trading tools, and three-way trading platform,\n                                    Zerodha is giving its clients an edge in trading and decision making. Pioneer in\n                                    introducing low brokerage scheme.\n                                </p>\n                                <div className={'db custom-link w-60-ns f3-ns hoverLine mr-auto ml-auto mt5 ba pt3 pl3 pb3 b--red br3'}>\n                                    <a className={'noDecoration'} target='_blank' href={'https://zerodha.com/open-account?c=ZMPAIV'}>\n                                        <div className={'lines'}>\n                                            <hr className={'colorWhite'}/>\n                                        </div>\n                                        <b className={'pl3 f5'}>Open Account Now</b>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </article>\n                    <article className=\"w-50-ns  shadow-2 center br3 pa3 pa4-ns mv3\">\n                        <div className={'flex flex-wrap justify-center'}>\n                            <div className=\"tc\">\n                                <div>\n                                    <img width=\"290px\" height='130px' className=\"img-fluid partner_img\" src={Angel}\n                                         alt=\"Zerodha Logo\"/>\n                                </div>\n                                <p className={'w-70-ns f4-ns mr-auto ml-auto '}>\n                                Angel Broking is a low brokerage stock broker in India. They are among the cheapest stock broker online. Angel Broking simple pricing model offers trading across segments for same flat brokerage fee of maximum ₹20 per executed order.</p>\n                                <div className={'db custom-link w-60-ns hoverLine f3-ns mr-auto ml-auto mt5 ba pt3 pl3 pb3 b--red br3'}>\n                                    <a className={'noDecoration'} target='_blank' href={'http://tinyurl.com/ybanzogq'}>\n                                        <div className={'lines'}>\n                                            <hr className={'colorWhite '}/>\n                                        </div>\n                                        <b className={'pl3 f5'}>Open Account Now</b>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </article>\n                </div>\n            </div>\n        </section>\n\n    );\n}","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\OurTraining\\ourTraining.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\StillConfusing\\StillConfusing.js",["142","143","144"],"import React from 'react';\nimport './StillConfusing.css';\nimport {FiInstagram} from 'react-icons/fi';\nimport {AiOutlineMail} from 'react-icons/ai';\nimport {FaWhatsapp} from 'react-icons/fa';\nexport default function stillConfusing() {\n    return (\n        <section className={'mr-auto bg-dark-blue pv6 tl'}>\n            <div className={'pv5 pb5 w-70-ns ml-auto-ns mr-auto-ns white'}>\n                <div className={'pl3'}>\n                    <p className={'pt1 mb0-ns downmove'}>START LEARNING WITH US</p>\n                    <h1 className={'f1-ns'}>Still <span className={'red'}>Confused ?</span></h1>\n                </div>\n                <div className={'w-60-ns pl3 pr3 mr2'}>\n                    <p className={'w-80-ns pb3-ns f4-ns'}>We understand your problems. You may have many questions boiling up in your mind. To address your\n                        concerns we recommend you sign up for a Premium consultation with us.</p>\n                    <a href={''} className={'f2'}><FiInstagram color={'white'} /></a>\n                    <a href={''} className={'f2 pl2'}><AiOutlineMail color={'white'}/></a>\n                    <a href={''} className={'f2 pl2'}><FaWhatsapp color={'white'}/></a>\n                </div>\n            </div>\n        </section>\n    );\n}","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\LogTable\\LogRow.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\OurCourses\\OurCourses.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\BatchTable\\BatchRow.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\Table\\Row.js",["145"],"import React,{useState} from 'react';\r\nimport 'tachyons';\r\nimport './Row.css';\r\n\r\nconst Row = ({rowObject, showHandler}) => {\r\n\tconst {lead_id,lead_phone_number} = rowObject;\r\n\tconst keyArr = Object.keys(rowObject);\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\tconsole.log(elementArray)\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\tconst [username, setUsername] = useState(rowObject.username)\r\n\tconst [lead_name, setLeadName] = useState(rowObject.lead_name)\r\n\tconst [whatsapp_number, setWhatsapp] = useState(rowObject.whatsapp_number)\r\n\tconst [accountopening_number, setAccountOpening] = useState(rowObject.accountopening_number)\r\n\tconst [call_status_1, setStatus1] = useState(rowObject.call_status_1)\r\n\tconst [call_status_2, setStatus2] = useState(rowObject.call_status_2)\r\n\tconst [updatehandover, setUpdateHandover] = useState(rowObject.updatehandover)\r\n\tconst [lead_city, setLeadCity] = useState(rowObject.lead_city)\r\n\tconst [knowledge, setKnowledge] = useState(rowObject.prior_knowledge)\r\n\tconst [dmat_acc, setDmat_acc] = useState(rowObject.dmat_acc)\r\n\tconst [broker, setBroker] = useState(rowObject.broker)\r\n\tconst [preferred_lang, setLanguage] = useState(rowObject.preferred_lang)\r\n\tconst [microsoftid, setMicrosoftId] = useState(rowObject.microsoftid)\r\n\tconst [coded, setCoded] = useState(rowObject.coded)\r\n\tconst [payment, setPayment] = useState(rowObject.payment)\r\n\r\n\tconsole.log(lead_id,coded)\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='username')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setUsername(rowObject.username)\r\n\t\t\t}\r\n\t\t\tsetUsername(value)\r\n\t\t}\r\n\t\telse if(name==='lead_name')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setLeadName(rowObject.lead_name)\r\n\t\t\t}\r\n\t\t\tsetLeadName(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_1')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setStatus1(rowObject.call_status_1)\r\n\t\t\t}\r\n\t\t\tsetStatus1(value)\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setStatus2(rowObject.call_status_2)\r\n\t\t\t}\r\n\t\t\tsetStatus2(value)\r\n\t\t}\r\n\t\telse if(name==='updatehandover')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setUpdateHandover(rowObject.updatehandover)\r\n\t\t\t}\r\n\t\t\tsetUpdateHandover(value)\r\n\t\t}\r\n\t\telse if(name==='lead_city')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setLeadCity(rowObject.lead_city)\r\n\t\t\t}\r\n\t\t\tsetLeadCity(value)\r\n\t\t}\r\n\t\telse if(name==='prior_knowledge')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setKnowledge(rowObject.prior_knowledge)\r\n\t\t\t}\r\n\t\t\tsetKnowledge(value)\r\n\t\t}\r\n\t\telse if(name==='dmat_acc')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setDmat_acc(rowObject.dmat_acc)\r\n\t\t\t}\r\n\t\t\tsetDmat_acc(value)\r\n\t\t}\r\n\t\telse if(name==='broker_name')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setBroker(rowObject.broker_name)\r\n\t\t\t}\r\n\t\t\tsetBroker(value)\r\n\t\t}\r\n\t\telse if(name==='preferred_lang')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setLanguage(rowObject.preferred_lang)\r\n\t\t\t}\r\n\t\t\tsetLanguage(value)\r\n\t\t}\r\n\t\telse if(name==='coded')\r\n\t\t{\r\n\t\t\tif(value==='')\r\n\t\t\t{\r\n\t\t\t\treturn setCoded(rowObject.coded)\r\n\t\t\t}\r\n\t\t\tsetCoded(value)\r\n\t\t}\r\n\t\telse if(name==='whatsapp_number')\r\n\t\t{\r\n\t\t\tif(!value)\r\n\t\t\t{\r\n\t\t\t\treturn setWhatsapp(rowObject.whatsapp_number)\r\n\t\t\t}\r\n\t\t\tsetWhatsapp(value);\r\n\t\t}\r\n\t\telse if(name==='accountopening_number')\r\n\t\t{\r\n\t\t\tif (!value) {\r\n\t\t\t\treturn setAccountOpening(rowObject.accountopening_number)\r\n\t\t\t}\r\n\t\t\tsetAccountOpening(value);\r\n\t\t}\r\n\t\telse if(name==='microsoftid')\r\n\t\t{\r\n\t\t\tif (!value) {\r\n\t\t\t\treturn setMicrosoftId(rowObject.microsoftid)\r\n\t\t\t}\r\n\t\t\tsetMicrosoftId(value)\r\n\t\t}\r\n\t\telse if(name==='payment')\r\n\t\t{\r\n\t\t\tif(value==='')\r\n\t\t\t{\r\n\t\t\t\treturn setPayment(rowObject.payment)\r\n\t\t\t}\r\n\t\t\tsetPayment(value)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onCheck = (event) => {\r\n\t\tconst {name, checked} = event.target;\r\n\t\tif (name==='whatsapp') \r\n\t\t{\r\n\t\t\tif(checked)\r\n\t\t\t{\r\n\t\t\t\tsetWhatsapp(rowObject.lead_phone_number)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetWhatsapp(rowObject.whatsapp_number)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (name==='accountopening')\r\n\t\t{\r\n\t\t\tif (checked) \r\n\t\t\t{\r\n\t\t\t\tsetAccountOpening(rowObject.lead_phone_number)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetAccountOpening(rowObject.accountopening_number)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSave = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/update', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                lead_name: lead_name,\r\n                lead_phone_number: rowObject.lead_phone_number,\r\n                whatsapp_number: whatsapp_number,\r\n                accountopening_number: accountopening_number,\r\n                call_status_1: call_status_1,\r\n                call_status_2: call_status_2,\r\n                updatehandover: updatehandover,\r\n                lead_city: lead_city,\r\n                prior_knowledge: knowledge,\r\n                dmat_acc: dmat_acc,\r\n                broker_name: broker,\r\n                preferred_lang: preferred_lang,\r\n                microsoftid: microsoftid,\r\n                coded: coded,\r\n                payment: payment\r\n                })\r\n             })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t       \t\tif (resp==='Success') {\r\n\t       \t\t\talert('Success')\r\n\t       \t\t\tshowHandler()\r\n\t       \t\t}\r\n\t       \t\telse if(resp==='Not Unique')\r\n\t       \t\t{\r\n\t       \t\t\talert('The given whatsapp/accountopening number is already registered.Please enter other contact and try again.')\r\n\t       \t\t}\r\n\t        })\r\n\t        .catch(err => {\r\n\t        \tconsole.log(err)\r\n\t        \talert('OOPSS...something went wrong please try again.')\r\n\t        })\r\n\t}\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onAddToBatch = (event) => {\r\n\t\tconst name = event.target.getAttribute('name');\r\n\t\tif(name==='current')\r\n\t\t{\r\n\t\t\tvar c1 = window.confirm('Are you  sure you want to add lead to current batch.This will change the status of lead to processed and it will be stored seperately.');\r\n\t\t\tif(c1===true)\r\n\t\t\t{\r\n\t\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number,\r\n\t\t\t\t\tname: name\r\n\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(resp => {\r\n\t\t\t\t\tif(resp==='Success')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Success')\r\n\t\t\t\t\t\tsetWhatsapp(rowObject.whatsapp_number)\r\n\t\t\t\t\t\tsetAccountOpening(rowObject.accountopening_number)\r\n\t\t\t\t\t\tconsole.log(whatsapp_number,accountopening_number)\r\n\t\t\t\t\t\tshowHandler()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(resp==='exists')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Sorry...But the lead already added to next batch.')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar c2 = window.confirm('Are you  sure you want to add lead to next batch.This will change the status of lead to processed and it will be stored seperately.');\r\n\t\t\tif (c2===true) {\r\n\t\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number,\r\n\t\t\t\t\tname: name\r\n\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(resp => {\r\n\t\t\t\t\tif(resp==='Success')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Success')\r\n\t\t\t\t\t\tshowHandler()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(resp==='exists')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talert('Sorry...But the lead already added to current batch.')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst addtoProcessedList = () => {\r\n\t\tif(window.confirm('Are you sure you want to add lead to processed list?'))\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/processed', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(resp => {\r\n\t\t\t\tif(resp==='Success')\r\n\t\t\t\t{\r\n\t\t\t\t\talert(resp)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\talert('OOPSS...something went wrong.Please try again.')\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst onRemove = () => {\r\n\t\tif(window.confirm('Are you sure you want to permanently delete the lead.'))\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/delete', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tlead_id: lead_id,\r\n\t\t\t\t\tlead_phone_number: lead_phone_number\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(resp => {\r\n\t\t\t\tif(resp==='Success')\r\n\t\t\t\t{\r\n\t\t\t\t\talert(resp)\r\n\t\t\t\t\tshowHandler()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\talert('OOps...something went wrong.Please try again.')\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index===0 || index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':null)}`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tname='whatsapp' \r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tautoComplete='blej'  \r\n\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\tonClick={(event) => onCheck(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span style={{padding: '2px'}} className={`${coded!=='null'?'fw6 white':null}`}>Same as Lead Contact</span>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tname={keyArr[index]} \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${whatsapp_number}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===5)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tname='accountopening' \r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tautoComplete='blej'  \r\n\t\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\t\tonClick={(event) => onCheck(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span style={{padding: '2px'}} className={`${coded!=='null'?'fw6 white':null}`}>Same as Lead Contact</span>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tname={keyArr[index]} \r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\t\tplaceholder={`${accountopening_number}`} \r\n\t\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t);\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===elementArray.length-1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname={keyArr[index]}  \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tvalue={payment}\r\n\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=''>--select--</option>\r\n\t\t\t\t\t\t\t\t<option value='null'>Null</option>\r\n\t\t\t\t\t\t\t\t<option value='done'>Done</option>\r\n\t\t\t\t\t\t\t\t<option value='notDone'>NotDone</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===elementArray.length-2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname={keyArr[index]}  \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tvalue={coded}\r\n\t\t\t\t\t\t\tdisabled={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=''>--select--</option>\r\n\t\t\t\t\t\t\t\t<option value='null'>Null</option>\r\n\t\t\t\t\t\t\t\t<option value='coded'>Coded</option>\r\n\t\t\t\t\t\t\t\t<option value='notCoded'>Not Coded</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index!==elementArray.length-1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tname={keyArr[index]} \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className=\"flex\">\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc ph3 pv2 mb2 dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-white')}`}\r\n\t\t\t>\r\n\t\t\t{`Leadno:${lead_id}`}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => onSave()}>\r\n\t\t\t\tSaveChanges\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => onRemove()}>\r\n\t\t\t\tRemove\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tname='current'\r\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='coded'?'block':'none'}`}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={(event) => onAddToBatch(event)}\r\n\t\t\t>\r\n\t\t\t\tAddtoCurrentBatch\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tname='next'\r\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='coded'?'block':'none'}`}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={(event) => onAddToBatch(event)}\r\n\t\t\t>\r\n\t\t\t\tAddtoNextBatch\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tname='next'\r\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='notCoded'?'block':'none'}`}}\r\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\r\n\t\t\tonClick={() => addtoProcessedList()}\r\n\t\t\t>\r\n\t\t\t\tAddtoProcessedList\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Row;","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\SrTable\\SrRow.js",[],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\JrTable\\JrRow.js",["146"],"import React,{useState} from 'react';\r\nimport './JrRow.css';\r\n\r\nconst JrRow = ({rowObject, onRefresh}) => {\r\n\tconst {lead_id, lead_phone_number, whatsapp_number, handoverstatus, call_status_1, call_status_2, coded} = rowObject;\r\n\tvar disable;\r\n\r\n\tif (handoverstatus==='Handed') {\r\n\t\tdisable=true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tdisable=false;\r\n\t}\r\n\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\tconst [status1, setStatus1] = useState(call_status_1)\r\n\tconst [status2, setStatus2] = useState(call_status_2)\r\n\r\n\tconst [whatsapp, setWhatsapp] = useState(whatsapp_number);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='call_status_1')\r\n\t\t{\r\n\t\t\tsetStatus1(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tsetStatus2(value);\r\n\t\t}\r\n\t\telse if(name==='whatsapp')\r\n\t\t{\r\n\t\t\tsetWhatsapp(value);\r\n\t\t}\r\n\t\tconsole.log(whatsapp);\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/update', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_phone_number: lead_phone_number,\r\n                call_status_1: status1,\r\n                call_status_2: status2,\r\n                whatsapp_number: whatsapp\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.')\r\n\t            \tonRefresh();\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\tconst onHandover = () => {\r\n\t\tif(handoverstatus!=='Handed')\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/handover', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_id: lead_id,\r\n            \tlead_phone_number: lead_phone_number\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.Refresh to view changes.')\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index>=0 && index<=9 && index!==3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"whatsapp\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===10)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_1\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===11)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_2\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\"\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`}\r\n\t\t\thref=\"#0\"\r\n\t\t\tonClick = {() => onSubmit()} \r\n\t\t\t>\r\n\t\t\t\tUpdateStatus\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\" \r\n\t\t\tonClick = {() => onHandover()} \r\n\t\t\t>\r\n\t\t\t\tHandover\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default JrRow;","C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\BackgroundCarousel\\BackgroundCarousel.jsx",["147","148"],"C:\\Users\\91916\\Desktop\\Tanmay\\Debugged.exe\\telecaller_frontend\\src\\Components\\ModalTable\\ModalRow.js",["149","150"],"import React,{useState} from 'react';\r\n\r\nconst ModalRow = ({rowObject,fetchLogs}) => {\r\n\tconst {lead_id, lead_phone_number, whatsapp_number, accountopening_number, handoverstatus, call_status_1, call_status_2, updatehandover, coded} = rowObject;\r\n\r\n\tconst [status1, setStatus1] = useState(call_status_1)\r\n\tconst [status2, setStatus2] = useState(call_status_2)\r\n\tconst [update, setUpdate] = useState(updatehandover)\r\n\tconst [whatsapp, setWhatsapp] = useState(whatsapp_number)\r\n\tconst [accountopening, setAccountOpening] = useState(accountopening_number)\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='call_status_1')\r\n\t\t{\r\n\t\t\tsetStatus1(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tsetStatus2(value);\r\n\t\t}\r\n\t\telse if(name==='updatehandover')\r\n\t\t{\r\n\t\t\tsetUpdate(value);\r\n\t\t}\r\n\t\telse if(name==='whatsapp')\r\n\t\t{\r\n\t\t\tsetWhatsapp(value);\r\n\t\t}\r\n\t\telse if(name==='accountopening')\r\n\t\t{\r\n\t\t\tsetAccountOpening(value);\r\n\t\t}\r\n\t}\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\r\n\tconst onSubmit = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/sr/update', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_phone_number: lead_phone_number,\r\n                call_status_1: status1,\r\n                call_status_2: status2,\r\n                updatehandover: update,\r\n                whatsapp_number: whatsapp,\r\n                accountopening_number: accountopening\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.')\r\n\t            \tfetchLogs()\r\n\t            }\r\n\t            else if(resp==='Not Unique')\r\n\t       \t\t{\r\n\t       \t\t\talert('The given whatsapp/accountopening number is already registered.Please enter other contact and try again.')\r\n\t       \t\t}\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index>=0 && index<=9 && index!==3 && index!=4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\t\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"whatsapp\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\t\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"accountopening\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===10)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_1\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===11)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_2\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===12)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"updatehandover\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName='bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2'\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\r\n\t\t\tonClick = {() => onSubmit()} \r\n\t\t\t>\r\n\t\t\t\tUpdateStatus\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ModalRow;",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":4,"column":22,"nodeType":"157","messageId":"158","endLine":4,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":28,"column":33,"nodeType":"161","endLine":28,"endColumn":106},{"ruleId":"159","severity":1,"message":"160","line":34,"column":33,"nodeType":"161","endLine":34,"endColumn":156},{"ruleId":"159","severity":1,"message":"160","line":35,"column":33,"nodeType":"161","endLine":35,"endColumn":137},{"ruleId":"159","severity":1,"message":"160","line":36,"column":33,"nodeType":"161","endLine":36,"endColumn":113},{"ruleId":"159","severity":1,"message":"160","line":37,"column":33,"nodeType":"161","endLine":37,"endColumn":122},{"ruleId":"159","severity":1,"message":"160","line":38,"column":33,"nodeType":"161","endLine":38,"endColumn":125},{"ruleId":"162","severity":1,"message":"163","line":124,"column":3,"nodeType":"164","messageId":"165","endLine":127,"endColumn":4},{"ruleId":"166","severity":1,"message":"167","line":421,"column":8,"nodeType":"168","endLine":421,"endColumn":15,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":550,"column":17,"nodeType":"161","endLine":552,"endColumn":84},{"ruleId":"166","severity":1,"message":"172","line":49,"column":8,"nodeType":"168","endLine":49,"endColumn":10,"suggestions":"173"},{"ruleId":"155","severity":1,"message":"174","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":28},{"ruleId":"155","severity":1,"message":"175","line":129,"column":14,"nodeType":"157","messageId":"158","endLine":129,"endColumn":22},{"ruleId":"155","severity":1,"message":"176","line":129,"column":24,"nodeType":"157","messageId":"158","endLine":129,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":32,"column":37,"nodeType":"161","endLine":32,"endColumn":134},{"ruleId":"159","severity":1,"message":"160","line":52,"column":37,"nodeType":"161","endLine":52,"endColumn":120},{"ruleId":"170","severity":1,"message":"177","line":17,"column":21,"nodeType":"161","endLine":17,"endColumn":51},{"ruleId":"170","severity":1,"message":"177","line":18,"column":21,"nodeType":"161","endLine":18,"endColumn":55},{"ruleId":"170","severity":1,"message":"177","line":19,"column":21,"nodeType":"161","endLine":19,"endColumn":55},{"ruleId":"178","severity":1,"message":"179","line":351,"column":34,"nodeType":"180","messageId":"181","endLine":351,"endColumn":36},{"ruleId":"155","severity":1,"message":"182","line":13,"column":3,"nodeType":"157","messageId":"158","endLine":13,"endColumn":10},{"ruleId":"159","severity":1,"message":"160","line":23,"column":13,"nodeType":"161","endLine":27,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":32,"column":13,"nodeType":"161","endLine":36,"endColumn":14},{"ruleId":"155","severity":1,"message":"183","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":92,"column":50,"nodeType":"186","messageId":"187","endLine":92,"endColumn":52},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBatch'. Either include it or remove the dependency array.","ArrayExpression",["190"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'telecaller_id' and 'username'. Either include them or remove the dependency array.",["191"],"'useStateWithCallback' is defined but never used.","'username' is assigned a value but never used.","'telecaller_id' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'disable' is assigned a value but never used.","'lead_id' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [batch, fetchBatch]",{"range":"196","text":"197"},"Update the dependencies array to be: [telecaller_id, username]",{"range":"198","text":"199"},[9809,9816],"[batch, fetchBatch]",[1353,1355],"[telecaller_id, username]"]