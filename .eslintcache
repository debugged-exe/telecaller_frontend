[{"F:\\webdev\\Tejas\\telecaller_frontend\\src\\index.js":"1","F:\\webdev\\Tejas\\telecaller_frontend\\src\\App.js":"2","F:\\webdev\\Tejas\\telecaller_frontend\\src\\reportWebVitals.js":"3","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Form\\Form.jsx":"4","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Home\\Home.jsx":"5","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\Admin.js":"6","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Table.js":"7","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Row.js":"8","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Navbar\\Navbar.js":"9","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SignInPage\\SignInPage.jsx":"10","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrCaller\\JrCaller.jsx":"11","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrTable.js":"12","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrRow.js":"13"},{"size":517,"mtime":1611308172052,"results":"14","hashOfConfig":"15"},{"size":3012,"mtime":1612772067331,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1611308172053,"results":"17","hashOfConfig":"15"},{"size":10535,"mtime":1611757453023,"results":"18","hashOfConfig":"15"},{"size":1594,"mtime":1611584415448,"results":"19","hashOfConfig":"15"},{"size":8987,"mtime":1612939497530,"results":"20","hashOfConfig":"15"},{"size":1179,"mtime":1612773488510,"results":"21","hashOfConfig":"15"},{"size":8540,"mtime":1612946766350,"results":"22","hashOfConfig":"15"},{"size":3202,"mtime":1612179520277,"results":"23","hashOfConfig":"15"},{"size":4363,"mtime":1612774051744,"results":"24","hashOfConfig":"15"},{"size":3715,"mtime":1612882959669,"results":"25","hashOfConfig":"15"},{"size":1142,"mtime":1612692489277,"results":"26","hashOfConfig":"15"},{"size":5239,"mtime":1612934764702,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"10j0qj8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\webdev\\Tejas\\telecaller_frontend\\src\\index.js",[],["57","58"],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\App.js",["59"],"import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Form from './Components/Form/Form';\r\nimport Home from './Components/Home/Home';\r\nimport SignInPage from './Components/SignInPage/SignInPage';\r\nimport Admin from './Components/Admin/Admin';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Background from './Container/Images/Background.png';\r\nimport JrCaller from './Components/JrCaller/JrCaller';\r\n\r\nconst initialState = {\r\n\troute: 'home',\r\n    user: {\r\n        username: '',\r\n        telecaller_id: '',\r\n        des: ''\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tonRouteChange = (route) => {\r\n        console.log('Routing')\r\n\t\tthis.setState({route: route})\r\n\t}\r\n\r\n    loadUser = (user) => {\r\n        console.log('Loading user');\r\n        this.setState({user:{\r\n            username: user.username,\r\n            telecaller_id: user.telecaller_id,\r\n            des: user.des\r\n        }})\r\n    }\r\n\r\n    onSubmitHandler = (username, password) => {\r\n        fetch('http://localhost:3001/signin', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n                })\r\n             })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n        if(resp.des)\r\n        {\r\n            this.loadUser(resp);\r\n            this.onRouteChange(resp.des);\r\n        }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n  \trender()\r\n  \t{\r\n  \t\tconst {route,user} = this.state;\r\n    \tif(route==='home')\r\n    \t{\r\n    \t\treturn(\r\n\t\t\t\t<div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n    \t\t\t    <Home onRouteChange={this.onRouteChange} />\r\n\t    \t\t</div>\r\n    \t\t);\t\r\n    \t}\r\n    \telse if(route==='form')\r\n    \t{\r\n    \t\treturn(\r\n\t\t\t\t<div className=\"back\">\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n    \t\t\t\t<Form />\r\n    \t\t\t</div>\r\n    \t\t);\r\n    \t}\r\n        else if(route==='signin')\r\n        {\r\n            return(\r\n                <div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n                    <SignInPage loadUser={this.loadUser} onRouteChange={this.onRouteChange} onSubmitHandler={this.onSubmitHandler} />\r\n                </div>\r\n            );   \r\n        }\r\n        else if(route==='Admin')\r\n        {\r\n            return(\r\n                <div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n                    <Admin />\r\n                </div>\r\n            );\r\n        }\r\n        else if(route==='JrCaller')\r\n        {\r\n            return(\r\n                <div>\r\n                    <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n                    <JrCaller user={user}/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n \r\nexport default App;\r\n","F:\\webdev\\Tejas\\telecaller_frontend\\src\\reportWebVitals.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Form\\Form.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Home\\Home.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\Admin.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Table.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Row.js",["60","61"],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Navbar\\Navbar.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SignInPage\\SignInPage.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrCaller\\JrCaller.jsx",["62"],"import React,{useState, useEffect} from 'react';\r\nimport JrTable from '../JrTable/JrTable.js';\r\n\r\nconst JrCaller = ({user}) => {\r\n\r\n    const {username, telecaller_id} = user;\r\n\r\n    const leadDataHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'Status 1',\r\n        'Status 2',\r\n        'Handedover Status',\r\n        'Coded Status',\r\n        ''\r\n    ]\r\n\r\n    const [leadData, setLeadData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const onRefresh = () => {\r\n        fetch('http://localhost:3001/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const onFetch = () => {\r\n        fetch('http://localhost:3001/jr/fetch/new', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if((resp!=='Unable to fetch' || resp!=='Unable to insert') && resp[0].lead_id)\r\n            {\r\n                var newArr = leadData;\r\n                newArr.push(...resp)\r\n                setLeadData(newArr);\r\n            }\r\n            else if(resp==='Not enough leads')\r\n            {\r\n                alert('Not enough leads')\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong.Please try again.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"pa4\">\r\n            <div className=\"overflow-auto flex flex-column justify-center items-center\">\r\n            <div className=\"flex justify-center\">\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onFetch()}\r\n                >\r\n                    Fetch New Leads            \r\n                </div>\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onRefresh()}\r\n                >\r\n                    Refresh          \r\n                </div>\r\n            </div>\r\n               <JrTable headerArray={leadDataHeader} ContentArray={leadData} onRefresh={onRefresh}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default JrCaller;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrTable.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrRow.js",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":122,"column":11,"nodeType":"71","messageId":"75","endLine":122,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":122,"column":11,"nodeType":"78","messageId":"79","endLine":122,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":42,"column":8,"nodeType":"82","endLine":42,"endColumn":10,"suggestions":"83"},{"ruleId":"69","severity":1,"message":"84","line":24,"column":8,"nodeType":"71","messageId":"72","endLine":24,"endColumn":22},{"ruleId":"69","severity":1,"message":"85","line":28,"column":8,"nodeType":"71","messageId":"72","endLine":28,"endColumn":22},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Background' is defined but never used.","Identifier","unusedVar","no-const-assign","'name' is constant.","const","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'telecaller_id' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["88"],"'status1Handler' is assigned a value but never used.","'status2Handler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [telecaller_id, username]",{"range":"91","text":"92"},[1137,1139],"[telecaller_id, username]"]