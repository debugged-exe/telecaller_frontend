[{"F:\\webdev\\Tejas\\telecaller_frontend\\src\\index.js":"1","F:\\webdev\\Tejas\\telecaller_frontend\\src\\reportWebVitals.js":"2","F:\\webdev\\Tejas\\telecaller_frontend\\src\\App.js":"3","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Navbar\\Navbar.js":"4","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\Admin.js":"5","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Footer\\Footer.js":"6","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Form\\Form.jsx":"7","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Home\\Home.jsx":"8","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SignInPage\\SignInPage.jsx":"9","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrCaller\\JrCaller.jsx":"10","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SrCaller\\SrCaller.jsx":"11","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Table.js":"12","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\LogTable\\LogTable.js":"13","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\BatchTable\\BatchTable.js":"14","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SrTable\\SrTable.js":"15","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrTable.js":"16","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\ModalTable\\ModalTable.js":"17","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\BatchTable\\BatchRow.js":"18","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\LogTable\\LogRow.js":"19","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Row.js":"20","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\OurCourses\\OurCourses.js":"21","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\OurTraining\\ourTraining.js":"22","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\StillConfusing\\StillConfusing.js":"23","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\OpenAccount\\OpenAccount.js":"24","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SrTable\\SrRow.js":"25","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrRow.js":"26","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\ModalTable\\ModalRow.js":"27","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\BackgroundCarousel\\BackgroundCarousel.jsx":"28","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\TeamViewer\\TeamViewer.js":"29","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\TeamViewer\\TeamRow.js":"30","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\JrCallerViewer\\JrCallerViewer.js":"31","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\JrCallerViewer\\JrViewRow.js":"32","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\JrCountViewer\\JrCountViewer.js":"33"},{"size":560,"mtime":1616043381295,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1611308172053,"results":"36","hashOfConfig":"35"},{"size":4763,"mtime":1618247456570,"results":"37","hashOfConfig":"35"},{"size":2590,"mtime":1618247455865,"results":"38","hashOfConfig":"35"},{"size":21087,"mtime":1618819786933,"results":"39","hashOfConfig":"35"},{"size":3289,"mtime":1618247455863,"results":"40","hashOfConfig":"35"},{"size":12399,"mtime":1618247455864,"results":"41","hashOfConfig":"35"},{"size":662,"mtime":1614928899367,"results":"42","hashOfConfig":"35"},{"size":4472,"mtime":1615969786556,"results":"43","hashOfConfig":"35"},{"size":4165,"mtime":1618247455864,"results":"44","hashOfConfig":"35"},{"size":4504,"mtime":1616051557918,"results":"45","hashOfConfig":"35"},{"size":1179,"mtime":1612773488510,"results":"46","hashOfConfig":"35"},{"size":1071,"mtime":1613489546713,"results":"47","hashOfConfig":"35"},{"size":1107,"mtime":1613813918489,"results":"48","hashOfConfig":"35"},{"size":1333,"mtime":1614431833574,"results":"49","hashOfConfig":"35"},{"size":1148,"mtime":1615485487719,"results":"50","hashOfConfig":"35"},{"size":872,"mtime":1614844127667,"results":"51","hashOfConfig":"35"},{"size":422,"mtime":1613816046539,"results":"52","hashOfConfig":"35"},{"size":417,"mtime":1613757604930,"results":"53","hashOfConfig":"35"},{"size":14221,"mtime":1618819875976,"results":"54","hashOfConfig":"35"},{"size":5172,"mtime":1618247455866,"results":"55","hashOfConfig":"35"},{"size":2249,"mtime":1618247455867,"results":"56","hashOfConfig":"35"},{"size":1294,"mtime":1615969786556,"results":"57","hashOfConfig":"35"},{"size":4028,"mtime":1618247455865,"results":"58","hashOfConfig":"35"},{"size":651,"mtime":1614428613015,"results":"59","hashOfConfig":"35"},{"size":5695,"mtime":1615969010863,"results":"60","hashOfConfig":"35"},{"size":5979,"mtime":1616051549524,"results":"61","hashOfConfig":"35"},{"size":4754,"mtime":1618247455862,"results":"62","hashOfConfig":"35"},{"size":1198,"mtime":1618688000198,"results":"63","hashOfConfig":"35"},{"size":394,"mtime":1618689037550,"results":"64","hashOfConfig":"35"},{"size":1283,"mtime":1618770005353,"results":"65","hashOfConfig":"35"},{"size":398,"mtime":1618770002014,"results":"66","hashOfConfig":"35"},{"size":744,"mtime":1618819750829,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"64d18b",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\webdev\\Tejas\\telecaller_frontend\\src\\index.js",[],["144","145"],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\reportWebVitals.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\App.js",["146"],"import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    HashRouter\r\n  } from \"react-router-dom\";\r\nimport Form from './Components/Form/Form';\r\nimport Home from './Components/Home/Home';\r\nimport SignInPage from './Components/SignInPage/SignInPage';\r\nimport Admin from './Components/Admin/Admin';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport JrCaller from './Components/JrCaller/JrCaller';\r\nimport SrCaller from './Components/SrCaller/SrCaller';\r\nimport Footer from './Components/Footer/Footer';\r\n\r\nconst initialState = {\r\n\troute: 'home',\r\n    user: {\r\n        username: '',\r\n        telecaller_id: '',\r\n        des: '',\r\n        preferred_lang:''\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tonRouteChange = (route) => {\r\n        console.log('Routing')\r\n\t\tthis.setState({route: route})\r\n\t}\r\n\r\n    loadUser = (user) => {\r\n        console.log('Loading user');\r\n        this.setState({user:{\r\n            username: user.username,\r\n            telecaller_id: user.telecaller_id,\r\n            des: user.des,\r\n            preferred_lang:user.preferred_lang\r\n        }})\r\n    }\r\n\r\n    onSubmitHandler = (username, password) => {\r\n        fetch('http://localhost:3001/signin', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n                })\r\n             })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n        if(resp.des)\r\n        {\r\n            this.loadUser(resp);\r\n            this.onRouteChange(resp.des);\r\n        }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n  \trender()\r\n  \t{\r\n        const {user} = this.state;\r\n        return(\r\n          <HashRouter>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Home />\r\n                  <Footer/>\r\n                </Route>\r\n                \r\n                <Route exact path=\"/form\">\r\n                  <Navbar />\r\n                  <Form />\r\n                </Route>\r\n\r\n                <Route exact path=\"/signin\">\r\n                  <Navbar />\r\n                  <SignInPage loadUser={this.loadUser} onSubmitHandler={this.onSubmitHandler} /> \r\n                </Route>\r\n\r\n                <Route exact path=\"/admin\">\r\n                  <Navbar />\r\n                  <Admin /> \r\n                </Route>\r\n\r\n                <Route exact path=\"/jrcaller\">\r\n                  <Navbar />\r\n                  <JrCaller user={user}/> \r\n                </Route>\r\n\r\n                <Route exact path=\"/srcaller\">\r\n                  <Navbar />\r\n                  <SrCaller user={user}/>\r\n                </Route>\r\n\r\n              </Switch>\r\n              </HashRouter>\r\n        );\r\n  \t// \tconst {route,user} = this.state;\r\n    // \tif(route==='home')\r\n    // \t{\r\n    // \t\treturn(\r\n\t// \t\t\t<div>\r\n    //                 {/* <Navbar route = {route} onRouteChange={this.onRouteChange} /> */}\r\n    // \t\t\t    <Home onRouteChange={this.onRouteChange} />\r\n    //                 <Footer onRouteChange={this.onRouteChange}/>\r\n\t//     \t\t</div>\r\n    // \t\t);\r\n    // \t}\r\n    // \telse if(route==='form')\r\n    // \t{\r\n    // \t\treturn(\r\n\t// \t\t\t<div className=\"back\">\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n    // \t\t\t\t<Form />\r\n    // \t\t\t</div>\r\n    // \t\t);\r\n    // \t}\r\n    //     else if(route==='signin')\r\n    //     {\r\n    //         return(\r\n    //             <div>\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange}/>\r\n    //                 <SignInPage loadUser={this.loadUser} onRouteChange={this.onRouteChange} onSubmitHandler={this.onSubmitHandler} />\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n    //     else if(route==='Admin')\r\n    //     {\r\n    //         return(\r\n    //             <div>\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n    //                 <Admin />\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n    //     else if(route==='JrCaller')\r\n    //     {\r\n    //         return(\r\n    //             <div>\r\n    //                 <Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n    //                 <JrCaller user={user}/>\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n\t// \t\t\telse if(route==='SrCaller'){\r\n\t// \t\t\t\treturn(\r\n\t// \t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t<Navbar route = {route} onRouteChange={this.onRouteChange} />\r\n\t// \t\t\t\t\t\t\t\t<SrCaller user={user}/>\r\n\t// \t\t\t\t\t\t</div>\r\n\t// \t\t\t\t);\r\n\t// \t\t\t}\r\n    // }\r\n        }\r\n}\r\n\r\nexport default App;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Navbar\\Navbar.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\Admin.js",["147","148","149","150","151"],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Footer\\Footer.js",["152","153","154","155","156","157","158"],"import React from \"react\";\r\nimport './Footer.css';\r\nimport Logo from '../../Container/Images/Logo_3D2.png';\r\nimport {FiInstagram} from \"react-icons/fi\";\r\nimport {SiGmail} from \"react-icons/si\";\r\nimport {AiOutlineTwitter} from \"react-icons/ai\";\r\nimport {FaWhatsapp,FaTelegramPlane} from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"body tl\" style={{display: 'inline-block', width: \"100%\"}}>\r\n            <footer className=\"footer\">\r\n                <div className=\"footer-left mr4\">\r\n                    <span style={{}}>\r\n                        <img src={Logo} alt=\"Logo\" style={{width: \"180px\", height: \"120px\"}} />\r\n                    </span>\r\n                    <h1 className={'f2'}>\r\n                        Cyberking <span className={'red'}>Capitals</span>\r\n                    </h1>\r\n                    <p className={'p1 f4'}>The Group of Investing</p>\r\n                    <Link style={{outline:'none'}} className=\"f6 link dim br1 ph3 pv2 mb2 dib white bg-dark-blue\" to=\"/signin\">Sign In</Link>\r\n                </div>\r\n                <ul className=\"footer-right\">\r\n                    <li>\r\n                        <ul className=\"box lh-copy f4\">\r\n                            <li><a href={'tel:919156104002'}>+91 91561 04002</a></li>\r\n                            <li><a href={'https://mailto:cyberkingcapitals@gmail.com'} target={'_blank'}>cyberkingcapitals@gmail.com</a></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"features\">\r\n                        <h2 className={'h2 dark-blue mt0'}> CONNECT WITH US</h2>\r\n                        <ul style={{display:'flex'}} className=\"box\">\r\n                            <li><a href={\"https://instagram.com/cyberking_capitals?igshid=mjv77zi1djho\"} target={'_blank'} className={'flex items-center'}><FiInstagram size=\"2rem\" color=\"white\" className={'pr3'}/></a></li>\r\n                            <li><a href=\"https://mailto:cyberkingcapitals@gmail.com\" target={'_blank'} className={'flex items-center'} ><SiGmail size=\"2rem\" color=\"white\" className={'pr3'}/></a></li>\r\n                            <li><a href=\"https://google.com\" target={'_blank'} className={'flex items-center'} ><AiOutlineTwitter size=\"2rem\" color=\"white\" className={'pr3'}/></a></li>\r\n                            <li><a href=\"https://wa.me/9191566104002\" target={'_blank'} className={'flex items-center'} ><FaWhatsapp size=\"2rem\" color=\"white\" className={'pr3'}/></a></li>\r\n                            <li><a href=\"https://t.me/cyberkingcapitals\" target={'_blank'} className={'flex items-center'} ><FaTelegramPlane size=\"2rem\" color=\"white\" className={'pr3'}/></a></li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </footer>\r\n            <footer className=\"pv4 ph3 ph5-m ph6-l white flex justify-center\" style={{backgroundColor: \"red\"}}>\r\n                <small className=\"f6 db\" style={{textAlign: 'center'}}>© 2021 <b className=\"ttu\">Developed by\r\n                   <a className=\"b black\" href=\"https://debuggedexe.com\" target=\"_blank\"> Debugged.exe </a></b>| All Rights\r\n                    Reserved</small>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Form\\Form.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Home\\Home.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SignInPage\\SignInPage.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrCaller\\JrCaller.jsx",["159"],"import React,{useState, useEffect} from 'react';\r\nimport JrTable from '../JrTable/JrTable.js';\r\n\r\nconst JrCaller = ({user}) => {\r\n\r\n    const {username, telecaller_id, preferred_lang} = user;\r\n\r\n    const leadDataHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'WhatsappNo',\r\n        'AccountOpening No',\r\n        'LeadCity',\r\n        'Demat Account',\r\n        'Broker Name',\r\n        'Prior Knowledge',\r\n        'Preffered Language',\r\n        'Status 1',\r\n        'Status 2',\r\n        'Handedover Status',\r\n        'Coded Status',\r\n        'Payment Status'\r\n    ]\r\n\r\n    const [leadData, setLeadData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const onRefresh = () => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\r\n            {\r\n                setLeadData(resp)\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong in fetching old leads.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const onFetch = () => {\r\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/new', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                telecaller_id: telecaller_id,\r\n                preferred_lang:preferred_lang\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(resp => {\r\n            if((resp!=='Unable to fetch' || resp!=='Unable to insert') && resp[0].lead_id)\r\n            {\r\n                var newArr = leadData;\r\n                newArr.push(...resp)\r\n                setLeadData(newArr);\r\n            }\r\n            else if(resp==='Not enough leads')\r\n            {\r\n                alert('Not enough leads')\r\n            }\r\n            else if(resp==='30min')\r\n            {\r\n                alert('30 minutes not yet elapsed from last fetch')\r\n            }\r\n            else\r\n            {\r\n                alert('OOPS...something went wrong.Please try again.')\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"pa4\">\r\n            <div className=\"overflow-auto flex flex-column justify-center items-center\">\r\n            <div className=\"flex justify-center\">\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onFetch()}\r\n                >\r\n                    Fetch New Leads            \r\n                </div>\r\n                <div \r\n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \r\n                href=\"#0\"\r\n                onClick = {() => onRefresh()}\r\n                >\r\n                    Refresh        \r\n                </div>\r\n            </div>\r\n               <JrTable headerArray={leadDataHeader} ContentArray={leadData} onRefresh={onRefresh}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JrCaller;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SrCaller\\SrCaller.jsx",["160","161","162"],"import React,{Component} from 'react';\r\nimport SrTable from '../SrTable/SrTable.js';\r\nimport ModalTable from '../ModalTable/ModalTable.js';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport Modal from 'react-modal';\r\n\r\n  class SrCaller extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        setPreview: false,\r\n        user: this.props.user,\r\n        jrCaller: {\r\n          jrName:'',\r\n          jrTeleId: ''\r\n        },\r\n        data: [],\r\n        jrContent: [],\r\n      }\r\n    }\r\n\r\n    setPreviewState = (s1) => {\r\n      this.setState({\r\n        setPreview: s1\r\n      },() =>{\r\n        console.log('')\r\n      })\r\n    }\r\n\r\n    fetchLogs = () => {\r\n      fetch('https://frozen-river-89705.herokuapp.com/sr/log',{\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n          username: this.state.jrCaller.jrName,\r\n          telecaller_id: this.state.jrCaller.jrTeleId\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(resp => {\r\n        if(resp[0].lead_id)\r\n        {\r\n          this.setState({\r\n            jrContent: resp\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n          this.setState({\r\n            setPreview: true\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n        }\r\n        else if(resp==='empty')\r\n        {\r\n          alert(`No leads assigned to ${this.state.jrCaller.jrName}`)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        alert('Failed to load telecaller logs.Please try again.')\r\n      })\r\n    }\r\n\r\n    setJrCaller = (username1, telecaller_id1) => {\r\n      var user = {\r\n        jrName: '',\r\n        jrTeleId: ''\r\n      }\r\n      user.jrName = username1\r\n      user.jrTeleId = telecaller_id1\r\n      this.setState({\r\n        jrCaller: user\r\n      }, () => {\r\n        this.fetchLogs()\r\n      })\r\n    }\r\n\r\n    componentDidMount(){\r\n      fetch('https://frozen-river-89705.herokuapp.com/sr/fetch',{\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            username: this.state.user.username,\r\n            telecaller_id: this.state.user.telecaller_id\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(resp => {\r\n        if(resp[0].username)\r\n        {\r\n          this.setState({\r\n            data: resp\r\n          }, () => {\r\n            console.log('')\r\n          })\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n    render(){\r\n      const {data,setPreview,jrContent} = this.state;\r\n      const {jrName, jrTeleId} = this.state.jrCaller;\r\n      const leadDataHeader = [\r\n        'Username',\r\n        'Jr_Id'\r\n      ]\r\n\r\n      const jrHeader = [\r\n        'LeadId',\r\n        'LeadName',\r\n        'LeadContact',\r\n        'Whatsapp',\r\n        'AccountOpening No',\r\n        'LeadCity',\r\n        'Demat Account',\r\n        'Broker Name',\r\n        'Prior Knowledge',\r\n        'Preffered Language',\r\n        'Status1',\r\n        'Status2',\r\n        'UpdateAfterHandover',\r\n        'HandoverStatus',\r\n        'Coded Status',\r\n        'Payment Status'\r\n      ]\r\n\r\n      const {username, telecaller_id} = this.state.user;\r\n\r\n      return(\r\n        <div className=\"pa4\">\r\n          <SrTable \r\n          headerArray={leadDataHeader} \r\n          contentArray={data} \r\n          setPreviewState={this.setPreviewState} \r\n          setJrCaller={this.setJrCaller}\r\n          />\r\n          <Modal \r\n          isOpen={setPreview}\r\n          ariaHideApp={false} \r\n          >\r\n            <div className=\"flex justify-end\">\r\n              <p\r\n              className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer flex justify-end items-center\" \r\n              onClick={() => this.setPreviewState(false)}\r\n              >X</p> \r\n            </div>\r\n            <div className='flex flex-column justify-center items-center'>\r\n              <h1>{`LOGS OF ${jrName}(${jrTeleId})`}</h1>\r\n              <div\r\n              style={{cursor: 'pointer'}}\r\n              className=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\r\n              onClick={() => this.fetchLogs()}\r\n              >\r\n              Refresh\r\n              </div>\r\n              <ModalTable headerArray={jrHeader} contentArray={jrContent} fetchLogs={this.fetchLogs}/>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SrCaller;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Table.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\LogTable\\LogTable.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\BatchTable\\BatchTable.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SrTable\\SrTable.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrTable.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\ModalTable\\ModalTable.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\BatchTable\\BatchRow.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\LogTable\\LogRow.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Table\\Row.js",["163"],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\OurCourses\\OurCourses.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\OurTraining\\ourTraining.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\StillConfusing\\StillConfusing.js",["164","165","166"],"import React from 'react';\r\nimport './StillConfusing.css';\r\nimport {FiInstagram} from 'react-icons/fi';\r\nimport {AiOutlineMail} from 'react-icons/ai';\r\nimport {FaWhatsapp} from 'react-icons/fa';\r\nexport default function stillConfusing() {\r\n    return (\r\n        <section className={'mr-auto bg-dark-blue pv6 tl'}>\r\n            <div className={'pv5 pb5 w-70-ns ml-auto-ns mr-auto-ns white'}>\r\n                <div className={'pl3'}>\r\n                    <p className={'pt1 mb0-ns downmove'}>START LEARNING WITH US</p>\r\n                    <h1 className={'f1-ns'}>Still <span className={'red'}>Confused ?</span></h1>\r\n                </div>\r\n                <div className={'w-60-ns pl3 pr3 mr2'}>\r\n                    <p className={'w-80-ns pb3-ns f4-ns'}>We understand your problems. You may have many questions boiling up in your mind. To address your\r\n                        concerns we recommend you sign up for a Premium consultation with us.</p>\r\n                    <a href={''} className={'f2'}><FiInstagram color={'white'} /></a>\r\n                    <a href={''} className={'f2 pl2'}><AiOutlineMail color={'white'}/></a>\r\n                    <a href={''} className={'f2 pl2'}><FaWhatsapp color={'white'}/></a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\OpenAccount\\OpenAccount.js",["167","168"],"import React from \"react\";\r\nimport 'tachyons';\r\nimport './OpenAccount.css';\r\nimport ZerodhaImg from './Zerodha.jpg';\r\nimport Angel from './Angel-Broking.jpg';\r\n\r\nexport default function OpenAccount() {\r\n    return (\r\n        <section className={'mr-auto w-100 bg-black white tl'}>\r\n            <div className={'pv5 pb5 w-80-ns ml-auto-ns mr-auto-ns'}>\r\n                <div className={''}>\r\n\r\n                    <div className={''}>\r\n                        <p className={'pl3 pt1 mb0-ns downMove'}>Open An Online Trading Account</p><h1\r\n                        className={'w-50-ns pl3 f1-ns tl-ns'}><span>Open Your<span\r\n                        className={'red'}> DEMAT</span> </span></h1></div>\r\n                </div>\r\n                <div className={'flex flex-wrap'}>\r\n                    <article className=\"w-50-ns  shadow-2 center br3 pa3 pa4-ns mv3 \">\r\n                        <div className={'flex flex-wrap justify-center'}>\r\n                            <div className=\"tc\">\r\n                                <div>\r\n                                    <img width=\"290px\" height='130px' className=\"img-fluid partner_img\" src={ZerodhaImg}\r\n                                         alt=\"Zerodha Logo\"/>\r\n                                </div>\r\n                                <p className={'w-70-ns f4-ns mr-auto ml-auto '}>\r\n                                With high-class technology, unique trading tools, and three-way trading platform,\r\n                                    Zerodha is giving its clients an edge in trading and decision making. Pioneer in\r\n                                    introducing low brokerage scheme.\r\n                                </p>\r\n                                <div className={'db custom-link w-60-ns f3-ns hoverLine mr-auto ml-auto mt5 ba pt3 pl3 pb3 b--red br3'}>\r\n                                    <a className={'noDecoration'} target='_blank' href={'https://zerodha.com/open-account?c=ZMPAIV'}>\r\n                                        <div className={'lines'}>\r\n                                            <hr className={'colorWhite'}/>\r\n                                        </div>\r\n                                        <b className={'pl3 f5'}>Open Account Now</b>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                    <article className=\"w-50-ns  shadow-2 center br3 pa3 pa4-ns mv3\">\r\n                        <div className={'flex flex-wrap justify-center'}>\r\n                            <div className=\"tc\">\r\n                                <div>\r\n                                    <img width=\"290px\" height='130px' className=\"img-fluid partner_img\" src={Angel}\r\n                                         alt=\"Zerodha Logo\"/>\r\n                                </div>\r\n                                <p className={'w-70-ns f4-ns mr-auto ml-auto '}>\r\n                                Angel Broking is a low brokerage stock broker in India. They are among the cheapest stock broker online. Angel Broking simple pricing model offers trading across segments for same flat brokerage fee of maximum ₹20 per executed order.</p>\r\n                                <div className={'db custom-link w-60-ns hoverLine f3-ns mr-auto ml-auto mt5 ba pt3 pl3 pb3 b--red br3'}>\r\n                                    <a className={'noDecoration'} target='_blank' href={'http://tinyurl.com/ybanzogq'}>\r\n                                        <div className={'lines'}>\r\n                                            <hr className={'colorWhite '}/>\r\n                                        </div>\r\n                                        <b className={'pl3 f5'}>Open Account Now</b>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    );\r\n}","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\SrTable\\SrRow.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\JrTable\\JrRow.js",["169"],"import React,{useState} from 'react';\r\nimport './JrRow.css';\r\n\r\nconst JrRow = ({rowObject, onRefresh}) => {\r\n\tconst {lead_id, lead_phone_number, whatsapp_number, handoverstatus, call_status_1, call_status_2, coded} = rowObject;\r\n\tvar disable;\r\n\r\n\tif (handoverstatus==='Handed') {\r\n\t\tdisable=true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tdisable=false;\r\n\t}\r\n\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\tconst [status1, setStatus1] = useState(call_status_1)\r\n\tconst [status2, setStatus2] = useState(call_status_2)\r\n\r\n\tconst [whatsapp, setWhatsapp] = useState(whatsapp_number);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='call_status_1')\r\n\t\t{\r\n\t\t\tsetStatus1(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tsetStatus2(value);\r\n\t\t}\r\n\t\telse if(name==='whatsapp')\r\n\t\t{\r\n\t\t\tsetWhatsapp(value);\r\n\t\t}\r\n\t\tconsole.log(whatsapp);\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/update', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_phone_number: lead_phone_number,\r\n                call_status_1: status1,\r\n                call_status_2: status2,\r\n                whatsapp_number: whatsapp\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.')\r\n\t            \tonRefresh();\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\tconst onHandover = () => {\r\n\t\tif(handoverstatus!=='Handed')\r\n\t\t{\r\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/handover', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_id: lead_id,\r\n            \tlead_phone_number: lead_phone_number\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.Refresh to view changes.')\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index>=0 && index<=9 && index!==3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"whatsapp\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===10)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_1\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===11)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_2\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\"\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`}\r\n\t\t\thref=\"#0\"\r\n\t\t\tonClick = {() => onSubmit()} \r\n\t\t\t>\r\n\t\t\t\tUpdateStatus\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\" \r\n\t\t\tonClick = {() => onHandover()} \r\n\t\t\t>\r\n\t\t\t\tHandover\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default JrRow;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\ModalTable\\ModalRow.js",["170","171"],"import React,{useState} from 'react';\r\n\r\nconst ModalRow = ({rowObject,fetchLogs}) => {\r\n\tconst {lead_id, lead_phone_number, whatsapp_number, accountopening_number, handoverstatus, call_status_1, call_status_2, updatehandover, coded} = rowObject;\r\n\r\n\tconst [status1, setStatus1] = useState(call_status_1)\r\n\tconst [status2, setStatus2] = useState(call_status_2)\r\n\tconst [update, setUpdate] = useState(updatehandover)\r\n\tconst [whatsapp, setWhatsapp] = useState(whatsapp_number)\r\n\tconst [accountopening, setAccountOpening] = useState(accountopening_number)\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tif(name==='call_status_1')\r\n\t\t{\r\n\t\t\tsetStatus1(value);\r\n\t\t}\r\n\t\telse if(name==='call_status_2')\r\n\t\t{\r\n\t\t\tsetStatus2(value);\r\n\t\t}\r\n\t\telse if(name==='updatehandover')\r\n\t\t{\r\n\t\t\tsetUpdate(value);\r\n\t\t}\r\n\t\telse if(name==='whatsapp')\r\n\t\t{\r\n\t\t\tsetWhatsapp(value);\r\n\t\t}\r\n\t\telse if(name==='accountopening')\r\n\t\t{\r\n\t\t\tsetAccountOpening(value);\r\n\t\t}\r\n\t}\r\n\r\n\tconst [read, setRead] = useState(true)\r\n\r\n\tconst onSubmit = () => {\r\n\t\tfetch('https://frozen-river-89705.herokuapp.com/sr/update', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            \tlead_phone_number: lead_phone_number,\r\n                call_status_1: status1,\r\n                call_status_2: status2,\r\n                updatehandover: update,\r\n                whatsapp_number: whatsapp,\r\n                accountopening_number: accountopening\r\n            })\r\n\t        })\r\n\t        .then(response => response.json())\r\n\t        .then(resp => {\r\n\t            if (resp==='Success') {\r\n\t            \talert('Status updated successfully.')\r\n\t            \tfetchLogs()\r\n\t            }\r\n\t            else if(resp==='Not Unique')\r\n\t       \t\t{\r\n\t       \t\t\talert('The given whatsapp/accountopening number is already registered.Please enter other contact and try again.')\r\n\t       \t\t}\r\n\t            else\r\n\t            {\r\n\t            \talert('OOps something went wrong.Please try again.')\r\n\t            }\r\n\t        })\r\n\t        .catch(err => console.log(err))\r\n\t}\r\n\r\n\tconst onEditHandler = () => {\r\n\t\tif(read===true)\r\n\t\t{\r\n\t\t\tsetRead(false)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsetRead(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst x = 'Done'\r\n\tconst Edit = 'Edit'\r\n\r\n\tconst elementArray = []\r\n\tObject.keys(rowObject).forEach((key) => {\r\n\t\t\t\telementArray.push(rowObject[key])\r\n\t\t\t})\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{\r\n\t\t\telementArray.map((item,index) => {\r\n\t\t\t\tif(index>=0 && index<=9 && index!==3 && index!=4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===3)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\t\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"whatsapp\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===4)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\t\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"accountopening\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===10)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_1\" \r\n\t\t\t\t\t\t\tautoComplete='blej'\r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===11)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"call_status_2\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if(index===12)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tname=\"updatehandover\" \r\n\t\t\t\t\t\t\tautoComplete='blej' \r\n\t\t\t\t\t\t\tplaceholder={`${item}`} \r\n\t\t\t\t\t\t\treadOnly={read}\r\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName='bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2'\r\n\t\t\tonClick={() => onEditHandler()}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tread===false?x:Edit\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td\r\n\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\tclassName=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\r\n\t\t\tonClick = {() => onSubmit()} \r\n\t\t\t>\r\n\t\t\t\tUpdateStatus\r\n\t\t\t</td>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ModalRow;","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\BackgroundCarousel\\BackgroundCarousel.jsx",["172","173"],"import React from 'react';\r\nimport Carousel from 'react-elastic-carousel'\r\nimport './BackgroundCarousel.css';\r\nimport Logo from '../../Container/Images/Logo_3D.png';\r\n\r\nconst BackgroundCarousel = () => {\r\n    return(\r\n        <div style={{marginLeft:'-10px',marginRight:'-10px'}}>\r\n            <img src={Logo} style={{height:'100px',width:'180px'}} className='center-logo' alt='Logo'/>\r\n        <div className='center-tagline red b f4 pointer'>We Rise by Lifting Others</div>\r\n        <aside className=\"left-side side-nav\">\r\n        <ul className=\"mr-auto ml-auto\">\r\n          <li className=\"di pl3 grow\">\r\n            <a\r\n              href=\"https://twitter.com\"\r\n              className=\"white f6 fw6 di black link1\"\r\n              title=\"TWITTER\"\r\n            >\r\n              TWITTER\r\n            </a>\r\n          </li>\r\n          <li className=\"di pl3\">\r\n            <a\r\n              href={\"https://instagram.com/cyberking_capitals?igshid=mjv77zi1djho\"} target={'_blank'}\r\n              className=\"white f6 fw6 di black grow link1\"\r\n              title=\"INSTAGRAM\"\r\n            >\r\n              INSTAGRAM\r\n            </a>\r\n          </li>\r\n          <li className=\"di pl3 grow\">\r\n            <a\r\n            href=\"https://wa.me/9191566104002\" target={'_blank'}\r\n              className=\"white f6 fw6 di black link1\"\r\n              title=\"TWITTER\"\r\n            >\r\n              WHATSAPP\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </aside>\r\n            <Carousel enableAutoPlay={true} autoPlaySpeed={2000}>\r\n                <div className='slide1 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        CREATE\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        WEALTH\r\n                    </div>\r\n                </div>\r\n                <div className='slide2 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        ACCURATE\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        SIGNALS\r\n                    </div>\r\n                </div>\r\n                <div className='slide3 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        EXPERTISED\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        TEACHING\r\n                    </div>\r\n                </div>\r\n                <div className='slide1 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        CREATE\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        WEALTH\r\n                    </div>\r\n                </div>\r\n                <div className='slide2 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        ACCURATE\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        SIGNALS\r\n                    </div>\r\n                </div>\r\n                <div className='slide3 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        EXPERTISED\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        TEACHING\r\n                    </div>\r\n                </div>\r\n                <div className='slide1 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        CREATE\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        WEALTH\r\n                    </div>\r\n                </div>\r\n                <div className='slide2 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        ACCURATE\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        SIGNALS\r\n                    </div>\r\n                </div>\r\n                <div className='slide3 flex justify-center items-center font-size flex-column'>\r\n                    <div className='red b tl'>\r\n                        EXPERTISED\r\n                    </div>\r\n                    <div className='b white stroke tl'>\r\n                        TEACHING\r\n                    </div>\r\n                </div>\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackgroundCarousel","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\TeamViewer\\TeamViewer.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\TeamViewer\\TeamRow.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\JrCallerViewer\\JrCallerViewer.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\JrCallerViewer\\JrViewRow.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Admin\\JrCountViewer\\JrCountViewer.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":4,"column":22,"nodeType":"180","messageId":"181","endLine":4,"endColumn":28},{"ruleId":"178","severity":1,"message":"182","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":16},{"ruleId":"178","severity":1,"message":"183","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":21},{"ruleId":"178","severity":1,"message":"184","line":47,"column":8,"nodeType":"180","messageId":"181","endLine":47,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":161,"column":3,"nodeType":"187","messageId":"188","endLine":164,"endColumn":4},{"ruleId":"189","severity":1,"message":"190","line":514,"column":5,"nodeType":"191","endLine":514,"endColumn":12,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":28,"column":33,"nodeType":"195","messageId":"196","endLine":28,"endColumn":106,"fix":"197"},{"ruleId":"193","severity":1,"message":"194","line":34,"column":33,"nodeType":"195","messageId":"196","endLine":34,"endColumn":156,"fix":"198"},{"ruleId":"193","severity":1,"message":"194","line":35,"column":33,"nodeType":"195","messageId":"196","endLine":35,"endColumn":137,"fix":"199"},{"ruleId":"193","severity":1,"message":"194","line":36,"column":33,"nodeType":"195","messageId":"196","endLine":36,"endColumn":113,"fix":"200"},{"ruleId":"193","severity":1,"message":"194","line":37,"column":33,"nodeType":"195","messageId":"196","endLine":37,"endColumn":122,"fix":"201"},{"ruleId":"193","severity":1,"message":"194","line":38,"column":33,"nodeType":"195","messageId":"196","endLine":38,"endColumn":125,"fix":"202"},{"ruleId":"193","severity":1,"message":"194","line":45,"column":20,"nodeType":"195","messageId":"196","endLine":45,"endColumn":90,"fix":"203"},{"ruleId":"189","severity":1,"message":"204","line":49,"column":8,"nodeType":"191","endLine":49,"endColumn":10,"suggestions":"205"},{"ruleId":"178","severity":1,"message":"206","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":28},{"ruleId":"178","severity":1,"message":"207","line":129,"column":14,"nodeType":"180","messageId":"181","endLine":129,"endColumn":22},{"ruleId":"178","severity":1,"message":"208","line":129,"column":24,"nodeType":"180","messageId":"181","endLine":129,"endColumn":37},{"ruleId":"209","severity":1,"message":"210","line":347,"column":34,"nodeType":"211","messageId":"212","endLine":347,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":17,"column":21,"nodeType":"195","endLine":17,"endColumn":51},{"ruleId":"213","severity":1,"message":"214","line":18,"column":21,"nodeType":"195","endLine":18,"endColumn":55},{"ruleId":"213","severity":1,"message":"214","line":19,"column":21,"nodeType":"195","endLine":19,"endColumn":55},{"ruleId":"193","severity":1,"message":"194","line":32,"column":37,"nodeType":"195","messageId":"196","endLine":32,"endColumn":134,"fix":"215"},{"ruleId":"193","severity":1,"message":"194","line":52,"column":37,"nodeType":"195","messageId":"196","endLine":52,"endColumn":120,"fix":"216"},{"ruleId":"178","severity":1,"message":"217","line":13,"column":3,"nodeType":"180","messageId":"181","endLine":13,"endColumn":10},{"ruleId":"178","severity":1,"message":"218","line":4,"column":9,"nodeType":"180","messageId":"181","endLine":4,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":92,"column":50,"nodeType":"221","messageId":"222","endLine":92,"endColumn":52},{"ruleId":"193","severity":1,"message":"194","line":23,"column":13,"nodeType":"195","messageId":"196","endLine":27,"endColumn":14,"fix":"223"},{"ruleId":"193","severity":1,"message":"194","line":32,"column":13,"nodeType":"195","messageId":"196","endLine":36,"endColumn":14,"fix":"224"},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'LogTable' is defined but never used.","'SrcallerArray' is assigned a value but never used.","'logDataHeader' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBatch'. Either include it or remove the dependency array.","ArrayExpression",["227"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"228","text":"229"},{"range":"230","text":"229"},{"range":"231","text":"229"},{"range":"232","text":"229"},{"range":"233","text":"229"},{"range":"234","text":"229"},{"range":"235","text":"229"},"React Hook useEffect has missing dependencies: 'telecaller_id' and 'username'. Either include them or remove the dependency array.",["236"],"'useStateWithCallback' is defined but never used.","'username' is assigned a value but never used.","'telecaller_id' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"237","text":"229"},{"range":"238","text":"229"},"'disable' is assigned a value but never used.","'lead_id' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"239","text":"229"},{"range":"240","text":"229"},"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},[1429,1429]," rel=\"noreferrer\"",[1880,1880],[2084,2084],[2261,2261],[2456,2456],[2648,2648],[3139,3139],{"desc":"243","fix":"244"},[1946,1946],[3488,3488],[1069,1069],[1352,1352],"Update the dependencies array to be: [batch, fetchBatch]",{"range":"245","text":"246"},"Update the dependencies array to be: [telecaller_id, username]",{"range":"247","text":"248"},[11615,11622],"[batch, fetchBatch]",[1369,1371],"[telecaller_id, username]"]