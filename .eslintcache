[{"F:\\webdev\\Tejas\\telecaller_frontend\\src\\index.js":"1","F:\\webdev\\Tejas\\telecaller_frontend\\src\\App.js":"2","F:\\webdev\\Tejas\\telecaller_frontend\\src\\reportWebVitals.js":"3","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Form\\Form.jsx":"4","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Home\\Home.jsx":"5","F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Signin\\Signin.js":"6"},{"size":517,"mtime":1611308172052,"results":"7","hashOfConfig":"8"},{"size":1375,"mtime":1611479015832,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611308172053,"results":"10","hashOfConfig":"8"},{"size":9167,"mtime":1611475318415,"results":"11","hashOfConfig":"8"},{"size":2084,"mtime":1611476297699,"results":"12","hashOfConfig":"8"},{"size":3266,"mtime":1611478814549,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10j0qj8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"F:\\webdev\\Tejas\\telecaller_frontend\\src\\index.js",[],["28","29"],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\App.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\reportWebVitals.js",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Form\\Form.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Home\\Home.jsx",[],"F:\\webdev\\Tejas\\telecaller_frontend\\src\\Components\\Signin\\Signin.js",["30"],"import React,{useState} from 'react';\r\nimport FormBg from '../../Container/Images/FormBg.png';\r\nimport Background from '../../Container/Images/Background.png';\r\nimport './Signin.css';\r\n\r\nconst Signin = () => {\r\n\r\n    const [username, setUserName] = useState(\"\");\r\n    const [usernameFlag, setUserNameFlag] = useState(false);\r\n    const [usernameErr, setUserNameErr] = useState(\"\");\r\n\r\n    const setUserNameField = (event) => {\r\n        setUserName(event.target.value);\r\n    }\r\n\r\n    const usernameValidate = (event) => {\r\n    if(username!==\"\")\r\n    {\r\n      setUserNameFlag(true);\r\n      setUserNameErr(\"\");\r\n    }\r\n    else\r\n    {\r\n      setUserNameFlag(false);\r\n      setUserNameErr(\"*username Field is compulsary\");\r\n    }\r\n  }\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordFlag, setPasswordFlag] = useState(false);\r\n    const [passwordErr, setPasswordErr] = useState(\"\");\r\n\r\n    const setPasswordField = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const passwordValidate = (event) => {\r\n    if(password!==\"\")\r\n    {\r\n      setPasswordFlag(true);\r\n      setPasswordErr(\"\");\r\n    }\r\n    else\r\n    {\r\n      setPasswordFlag(false);\r\n      setPasswordErr(\"*password Field is compulsary\");\r\n    }\r\n  }\r\n\r\n  const submit = () => {\r\n    if(\r\n        usernameFlag===true &&\r\n        passwordFlag===true\r\n    )\r\n    {\r\n        console.log(username, password)\r\n    }\r\n    else\r\n    {\r\n        usernameValidate();\r\n        passwordValidate();\r\n    }\r\n  }\r\n\r\n    return (\r\n    \t<main className=\"pa4 black-80\">\r\n\t\t  \t<form style={{backgroundImage: `url(${FormBg})`}} className=\"flex flex-column items-center measure center br3 pa3 shadow-2 cardContainer\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"tc f2 fw6 ph0 mh0\">Sign-In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"mv2 db fw6 lh-copy f4\" htmlFor=\"email-address\">UserName:</label>\r\n\t\t\t        <input \r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t        type=\"email\" \r\n\t\t\t        name=\"email-address\" \r\n\t\t\t        id=\"email-address\" \r\n\t\t\t        autoComplete='blej'\r\n\t\t\t        onChange={(event) => setUserNameField(event)}\r\n\t\t\t        onBlur={() => usernameValidate()}\r\n\t\t\t        />\r\n\t\t\t        <div className=\"f4 red\">{`${usernameErr}`}</div>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"mv2 db fw6 lh-copy f4\" htmlFor=\"password\">Password:</label>\r\n\t\t\t        <input \r\n\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t        type=\"password\" \r\n\t\t\t        name=\"password\" \r\n\t\t\t        id=\"password\" \r\n\t\t\t        autoComplete='blej'\r\n\t\t\t        onChange={(event) => setPasswordField(event)}\r\n\t\t\t        onBlur={() => passwordValidate()}\r\n\t\t\t        />\r\n\t\t\t        <div className=\"f4 red\">{`${passwordErr}`}</div>\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \r\n\t\t\t      type=\"button\" \r\n\t\t\t      value=\"Sign in\" \r\n\t\t\t      onClick={() => submit()}/>\r\n\t\t\t    </div>\r\n\t\t  \t</form>\r\n\t\t</main>\t\r\n    );\r\n}\r\n\r\nexport default Signin;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":18},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Background' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]