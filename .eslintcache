[{"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/index.js":"1","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/App.js":"2","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/reportWebVitals.js":"3","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/Admin.js":"4","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Navbar/Navbar.js":"5","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Footer/Footer.js":"6","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Form/Form.jsx":"7","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Home/Home.jsx":"8","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SignInPage/SignInPage.jsx":"9","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JrCaller/JrCaller.jsx":"10","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SrCaller/SrCaller.jsx":"11","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Table/Table.js":"12","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/TeamViewer/TeamViewer.js":"13","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/LogTable/LogTable.js":"14","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/JrCallerViewer/JrCallerViewer.js":"15","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/BatchTable/BatchTable.js":"16","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/JrCountViewer/JrCountViewer.js":"17","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JrTable/JrTable.js":"18","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SrTable/SrTable.js":"19","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/ModalTable/ModalTable.js":"20","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/OpenAccount/OpenAccount.js":"21","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/OurTraining/ourTraining.js":"22","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/OurCourses/OurCourses.js":"23","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/StillConfusing/StillConfusing.js":"24","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/LogTable/LogRow.js":"25","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/TeamViewer/TeamRow.js":"26","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/BatchTable/BatchRow.js":"27","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/JrCallerViewer/JrViewRow.js":"28","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Table/Row.js":"29","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JrTable/JrRow.js":"30","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SrTable/SrRow.js":"31","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/ModalTable/ModalRow.js":"32","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JoinOurTelegram/JoinOurTelegram.jsx":"33","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/BackgroundCarousel/BackgroundCarousel.jsx":"34"},{"size":542,"mtime":1620147447346,"results":"35","hashOfConfig":"36"},{"size":4659,"mtime":1620223897393,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1620147447351,"results":"38","hashOfConfig":"36"},{"size":20714,"mtime":1620147447275,"results":"39","hashOfConfig":"36"},{"size":2522,"mtime":1620147447281,"results":"40","hashOfConfig":"36"},{"size":3670,"mtime":1620226650330,"results":"41","hashOfConfig":"36"},{"size":12074,"mtime":1620147447278,"results":"42","hashOfConfig":"36"},{"size":738,"mtime":1620147447279,"results":"43","hashOfConfig":"36"},{"size":4333,"mtime":1620147447283,"results":"44","hashOfConfig":"36"},{"size":4033,"mtime":1620147447279,"results":"45","hashOfConfig":"36"},{"size":4339,"mtime":1620147447283,"results":"46","hashOfConfig":"36"},{"size":1141,"mtime":1620147447285,"results":"47","hashOfConfig":"36"},{"size":1150,"mtime":1620147447276,"results":"48","hashOfConfig":"36"},{"size":1034,"mtime":1620147447280,"results":"49","hashOfConfig":"36"},{"size":1231,"mtime":1620147447275,"results":"50","hashOfConfig":"36"},{"size":1070,"mtime":1620147447277,"results":"51","hashOfConfig":"36"},{"size":709,"mtime":1620147447276,"results":"52","hashOfConfig":"36"},{"size":1110,"mtime":1620147447280,"results":"53","hashOfConfig":"36"},{"size":1290,"mtime":1620147447284,"results":"54","hashOfConfig":"36"},{"size":835,"mtime":1620147447281,"results":"55","hashOfConfig":"36"},{"size":4345,"mtime":1620230550320,"results":"56","hashOfConfig":"36"},{"size":2705,"mtime":1620230550308,"results":"57","hashOfConfig":"36"},{"size":7231,"mtime":1620225513815,"results":"58","hashOfConfig":"36"},{"size":2010,"mtime":1620230550314,"results":"59","hashOfConfig":"36"},{"size":394,"mtime":1620147447280,"results":"60","hashOfConfig":"36"},{"size":374,"mtime":1620147447276,"results":"61","hashOfConfig":"36"},{"size":400,"mtime":1620147447277,"results":"62","hashOfConfig":"36"},{"size":378,"mtime":1620147447275,"results":"63","hashOfConfig":"36"},{"size":13709,"mtime":1620147447285,"results":"64","hashOfConfig":"36"},{"size":5492,"mtime":1620147447279,"results":"65","hashOfConfig":"36"},{"size":620,"mtime":1620147447284,"results":"66","hashOfConfig":"36"},{"size":5775,"mtime":1620147447280,"results":"67","hashOfConfig":"36"},{"size":1448,"mtime":1620226115802,"results":"68","hashOfConfig":"36"},{"size":5481,"mtime":1620226915631,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"5y5djr",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/index.js",[],["145","146"],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/App.js",["147"],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/reportWebVitals.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/Admin.js",["148","149","150","151","152"],"import React, { useState, useEffect } from 'react';\nimport Table from '../Table/Table.js';\nimport LogTable from '../LogTable/LogTable.js';\nimport BatchTable from '../BatchTable/BatchTable.js';\nimport TeamViewer from './TeamViewer/TeamViewer.js';\nimport JrCallerViewer from './JrCallerViewer/JrCallerViewer.js';\nimport JrCountViewer from './JrCountViewer/JrCountViewer.js';\nimport './Admin.css';\n\nconst Admin = () => {\n\n\tconst SrcallerArray = [\n\t\t{\n\t\t\tusername: 'Tejas',\n\t\t\ttelecaller_id: 'SR001'\n\t\t},\n\t\t{\n\t\t\tusername: 'Soham',\n\t\t\ttelecaller_id: 'SR002'\n\t\t},\n\t\t{\n\t\t\tusername: 'Tanmay',\n\t\t\ttelecaller_id: 'SR003'\n\t\t}\n\t]\n\n\tconst leadDataHeader = [\n\t\t'LeadId',\n\t\t'Assigned To',\n\t\t'LeadName',\n\t\t'LeadContact',\n\t\t'WhatsApp Number',\n\t\t'Account Opening Number',\n\t\t'First Status',\n\t\t'Second Status',\n\t\t'Update After Hand-Over',\n\t\t'City',\n\t\t'Knowledge',\n\t\t'Demat',\n\t\t'Broker',\n\t\t'Preffered Language',\n\t\t'Microsoft Id',\n\t\t'Coded',\n\t\t'Payment'\n\t]\n\n\tconst logDataHeader = [\n\t\t'Username',\n\t\t'Telecaller Id',\n\t\t'Handover Count'\n\t]\n\n\tconst [leadData, setLeadData] = useState([])\n\n\tconst [filter, setFilter] = useState('*')\n\tconst [languageFilter, setLanguageFilter] = useState('Marathi')\n\n\tconst setFilterField = (event) => {\n\t\tsetFilter(event.target.value);\n\t}\n\n\tconst setLanguageFilterField = (event) => {\n\t\tsetLanguageFilter(event.target.value);\n\t}\n\n\tconst [username, setUsername] = useState('')\n\tconst [usernameFlag, setUsernameFlag] = useState(false)\n\tconst [usernameErr, setUsernameErr] = useState('')\n\n\tconst setUsernameField = (event) => {\n\t\tsetUsername(event.target.value)\n\t}\n\n\tconst usernameValidate = () => {\n\t\tif (username === '') {\n\t\t\tsetUsernameFlag(false)\n\t\t\tsetUsernameErr('Set username field')\n\t\t}\n\t\telse {\n\t\t\tsetUsernameFlag(true)\n\t\t\tsetUsernameErr('')\n\t\t}\n\t}\n\n\t// ---------------------------Prefferrred Language Validations----------------------------------------------\n\tconst [language, setLanguage] = useState('')\n\tconst [languageFlag, setLanguageFlag] = useState(false)\n\tconst [languageErr, setLanguageErr] = useState('')\n\n\tconst setLanguageField = (event) => {\n\t\tsetLanguage(event.target.value)\n\t}\n\n\tconst languageValidate = () => {\n\t\tif (language === 'none') {\n\t\t\tsetLanguageFlag(false)\n\t\t\tsetLanguageErr('Set TeleCaller Language')\n\t\t}\n\t\telse {\n\t\t\tsetLanguageFlag(true)\n\t\t\tsetLanguageErr('')\n\t\t}\n\t}\n\t// -----------------------------------------------------------------------------\n\tconst [password, setPassword] = useState('')\n\tconst [passwordFlag, setPasswordFlag] = useState(false)\n\tconst [passwordErr, setPasswordErr] = useState('')\n\n\tconst setPasswordField = (event) => {\n\t\tsetPassword(event.target.value)\n\t}\n\n\tconst passwordValidate = () => {\n\t\tif (password === '') {\n\t\t\tsetPasswordFlag(false)\n\t\t\tsetPasswordErr('Set password field')\n\t\t}\n\t\telse {\n\t\t\tsetPasswordFlag(true)\n\t\t\tsetPasswordErr('')\n\t\t}\n\t}\n\n\tconst [telecaller_id, setTelecaller] = useState('')\n\tconst [telecallerFlag, setTelecallerFlag] = useState(false)\n\tconst [telecallerErr, setTelecallerErr] = useState('')\n\n\tconst setTelecallerField = (event) => {\n\t\tsetTelecaller(event.target.value);\n\t}\n\n\tconst telecallerValidate = () => {\n\t\tif (telecaller_id === '') {\n\t\t\tsetTelecallerFlag(false)\n\t\t\tsetTelecallerErr('Set Telecaller Id')\n\t\t}\n\t\telse {\n\t\t\tsetTelecallerFlag(true)\n\t\t\tsetTelecallerErr('')\n\t\t}\n\t}\n\n\tconst [des, setDes] = useState('none')\n\tconst [desFlag, setDesFlag] = useState(false)\n\tconst [desErr, setDesErr] = useState('')\n\n\tconst setDesField = (event) => {\n\t\tsetDes(event.target.value)\n\t}\n\n\tconst desValidate = () => {\n\t\tif (des === 'none') {\n\t\t\tsetDesFlag(false)\n\t\t\tsetDesErr('Set Designation of caller')\n\t\t}\n\t\telse if (des !== 'JrCaller') {\n\t\t\tsetAssigned('')\n\t\t\tdocument.getElementById('assigned_to').value = ''\n\t\t\tconsole.log(document.getElementById('assigned_to').value)\n\t\t}\n\t\t{\n\t\t\tsetDesFlag(true)\n\t\t\tsetDesErr('')\n\t\t}\n\t}\n\n\tconst [assigned, setAssigned] = useState('')\n\tconst [assignedFlag, setAssignedFlag] = useState(false)\n\tconst [assignedErr, setAssignedErr] = useState('')\n\n\tconst setAssignedField = (event) => {\n\t\tsetAssigned(event.target.value);\n\t}\n\n\tconst assignedValidate = () => {\n\t\tif (des === 'JrCaller') {\n\t\t\tconsole.log(des)\n\t\t\tif (assigned === '') {\n\t\t\t\tconsole.log(assigned)\n\t\t\t\tsetAssignedFlag(false)\n\t\t\t\tsetAssignedErr('Assigned to field compulsary.')\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetAssignedFlag(true)\n\t\t\t\tsetAssignedErr('')\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tsetAssignedFlag(true)\n\t\t\tsetAssignedErr('')\n\t\t}\n\t}\n\n\tconst addTelecaller = () => {\n\t\tif (assigned === '' && des !== 'JrCaller') {\n\t\t\tsetAssignedFlag(true)\n\t\t\tsetAssignedErr('')\n\t\t}\n\t\tif (\n\t\t\tusernameFlag &&\n\t\t\tpasswordFlag &&\n\t\t\ttelecallerFlag &&\n\t\t\tlanguageFlag &&\n\t\t\tdesFlag &&\n\t\t\tassignedFlag\n\t\t) {\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/register', {\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tusername: username,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\ttelecaller_id: telecaller_id,\n\t\t\t\t\tlanguage: language,\n\t\t\t\t\tdes: des,\n\t\t\t\t\tassigned: assigned\n\t\t\t\t})\n\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(resp => {\n\t\t\t\t\tif (resp === 'Registered') {\n\t\t\t\t\t\talert('Telecaller registered successfully')\n\t\t\t\t\t}\n\t\t\t\t\telse if (resp === 'Not Unique.') {\n\t\t\t\t\t\talert('Looks like telecaller with same Telecaller Id is already registered.')\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\talert('OOPs....something went wrong.Please try again.')\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t\telse {\n\t\t\tusernameValidate()\n\t\t\tpasswordValidate()\n\t\t\ttelecallerValidate()\n\t\t\tlanguageValidate()\n\t\t\tdesValidate()\n\t\t}\n\t}\n\n\tconst showHandler = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/show', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tfilter: filter,\n\t\t\t\tlanguageFilter:languageFilter\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif (resp !== 'Unable to fetch') {\n\t\t\t\t\tsetLeadData(resp)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert('Unable to fetch.Please try again.')\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tconst [popState, setPopState] = useState('none');\n\n\tconst setPopStateField = () => {\n\t\tif (popState === 'none') {\n\t\t\tsetPopState('block');\n\t\t}\n\t\telse {\n\t\t\tsetPopState('none')\n\t\t}\n\t}\n\n\tconst [popPayState, setPopPayState] = useState('none');\n\t\n\tconst setPopPayStateField = () => {\n\t\tif (popPayState === 'none') {\n\t\t\tfetchCallers();\n\t\t\tsetPopPayState('block');\n\t\t}\n\t\telse {\n\t\t\tsetPopPayState('none')\n\t\t}\n\t}\n\n\tconst [popBatch, setPopBatch] = useState('none')\n\tconst setPopBatches = () => {\n\t\tif (popBatch === 'none') {\n\t\t\tsetPopBatch('block')\n\t\t}\n\t\telse {\n\t\t\tsetPopBatch('none')\n\t\t}\n\t}\n\n\tconst fetchBatch = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch/fetch', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tbatch: batch\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif (resp !== 'fail') {\n\t\t\t\t\tsetBatchContentArray(resp)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('Fetch call to batches failed')\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tconst batchDataHeader = [\n\t\t'LeadId',\n\t\t'LeadName',\n\t\t'LeadContact',\n\t\t'WhatsApp Number',\n\t\t'Account Opening Number',\n\t\t'City',\n\t\t'Knowledge',\n\t\t'Demat',\n\t\t'Broker',\n\t\t'Preffered Language'\n\t]\n\n\tconst [batchContentArray, setBatchContentArray] = useState([]);\n\n\tconst [batch, setBatch] = useState('current')\n\tconst changeBatch = () => {\n\t\tif (batch === 'current') {\n\t\t\tsetBatch('next')\n\t\t}\n\t\telse {\n\t\t\tsetBatch('current')\n\t\t}\n\t}\n\n\tconst batchHandler = (event) => {\n\t\tconst name = event.target.getAttribute('name');\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch/modify', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif (resp === 'Success') {\n\t\t\t\t\talert('Success')\n\t\t\t\t\tfetchBatch()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\talert('OOPs...something went wrong.Please try again.')\n\t\t\t})\n\t}\n\n\tconst [srCaller, setSrCaller] = useState([])\n\n\tconst fetchSrCallers = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/srcaller')\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif (resp[0].username) {\n\t\t\t\t\tsetSrCaller(resp);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tconst [leadNameFilter, setLeadNameFilter] = useState('')\n\n\tconst fetchByName = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/name', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tleadNameFilter: leadNameFilter\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif (resp !== 'Unable to fetch') {\n\t\t\t\t\tsetLeadData(resp)\n\t\t\t\t}\n\t\t\t\telse if (resp === 'Incorrect submission') {\n\t\t\t\t\talert(resp);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert('Unable to fetch.Please try again.')\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\talert('OOPs...something went wrong.Please try again.');\n\t\t\t})\n\t}\n\n\tconst TeamHeader = [\n\t\t'Username',\n\t\t'TeleCaller Id',\n\t\t'Preffered Language',\n\t\t'Designation'\n\t];\n\n\tconst [teamLang, setTeamLang] = useState('none');\n\n\tconst setTeamLangField = (event) => {\n\t\tsetTeamLang(event.target.value);\n\t}\n\n\tconst [caller, setCaller] = useState([]);\n\n\tconst fetchCallers = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/caller')\n\t\t.then(response => response.json())\n\t\t.then(resp => {\n\t\t\tif(resp[0].username)\n\t\t\t{\n\t\t\t\tsetCaller(resp);\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err)\n\t\t\talert('Failed to fetch teams');\n\t\t})\n\t}\n\n\tconst JrHeader = [\n\t\t'Username',\n\t\t'TeleCaller Id',\n\t\t'Preffered Language',\n\t\t'Designation',\n\t\t'Assigned to'\n\t]\n\n\tconst [jrcaller, setJrCaller] = useState([]);\n\n\tconst setJrCallerArray = (telecaller_id) => {\n\t\tlet tempArray;\n\t\tif (caller.length>0) {\n\t\t\ttempArray = caller.filter(item => item.assigned_to===telecaller_id);\n\t\t\tsetJrCaller(tempArray);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetJrCaller([]);\n\t\t}\n\t}\n\n\tconst setJrLog = (telecaller_id) => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/jrlog', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttelecaller_id: telecaller_id\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(resp => {\n\t\t\tif(resp !== 'Unable to fetch')\n\t\t\t{\n\t\t\t\tsetLeadData(resp);\n\t\t\t\tsetPopPayState('none');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('Unable to fetch jr caller logs');\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t})\n\t}\n\n\tconst countHeader = [\n\t\t'Telecaller Id',\n\t\t'Status1 Count',\n\t\t'Status2 Count',\n\t\t'Both Status Count',\n\t\t'Handover Count',\n\t\t'Coded Count'\n\t]\n\n\tconst [count, setCount] = useState([]);\n\n\tconst fetchJrCount = (telecaller_id) => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/jrcount', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttelecaller_id: telecaller_id\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(resp => {\n\t\t\tsetCount(resp);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err)\n\t\t\talert('Unable to fetch count details.');\n\t\t})\n\t}\n\n\tconst [hindiUnassigned, setHindi] = useState('');\n\tconst [marathiUnassigned, setMarathi] = useState('');\n\n\tconst fetchUnassigned = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/unassigned')\n\t\t.then(response => response.json())\n\t\t.then(resp => {\n\t\t\tsetHindi(resp[0]);\n\t\t\tsetMarathi(resp[1]);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tfetchBatch()\n\t\tfetchSrCallers()\n\t\tfetchUnassigned()\n\t}, [batch])\n\n\treturn (\n\t\t<div style={{ display: 'flex', flexDirection: 'column', justifyCenter: 'center', itemsCenter: 'flex-end' }}>\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up' style={{ display: `${popState}` }}>\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => setPopStateField()}\n\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\"\n\t\t\t\t>\n\t\t\t\t\tX\n                </div>\n\t\t\t\t<div style={{ height: '100%' }} className='flex justify-center items-center flex-column'>\n\t\t\t\t\t<h2>Add New Telecaller</h2>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>New Username</p>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"number\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tautoComplete=\"blej\"\n\t\t\t\t\t\t\tonChange={(event) => setUsernameField(event)}\n\t\t\t\t\t\t\tonBlur={() => usernameValidate()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f4 red\">{usernameErr}</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Password</p>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"blej\"\n\t\t\t\t\t\t\tonChange={(event) => setPasswordField(event)}\n\t\t\t\t\t\t\tonBlur={() => passwordValidate()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f4 red\">{passwordErr}</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Telecaller Id</p>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"telecaller_id\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tautoComplete=\"blej\"\n\t\t\t\t\t\t\tonChange={(event) => setTelecallerField(event)}\n\t\t\t\t\t\t\tonBlur={() => telecallerValidate()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f4 red\">{telecallerErr}</div>\n\n\t\t\t\t\t{/* ------------------------------Language Section------------------------------------------- */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Select Language</p>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tstyle={{ width: '185px' }}\n\t\t\t\t\t\t\tonChange={(event) => setLanguageField(event)}\n\t\t\t\t\t\t\tonBlur={() => languageValidate()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='none'>None</option>\n\t\t\t\t\t\t\t<option value='Marathi'>Marathi</option>\n\t\t\t\t\t\t\t<option value='Hindi'>Hindi</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f4 red\">{languageErr}</div>\n\t\t\t\t\t{/* -------------------------------------------------------------------------------------------------- */}\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Designation</p>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tstyle={{ width: '185px' }}\n\t\t\t\t\t\t\tonChange={(event) => setDesField(event)}\n\t\t\t\t\t\t\tonBlur={() => desValidate()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='none'>None</option>\n\t\t\t\t\t\t\t<option value='SrCaller'>Senior Caller</option>\n\t\t\t\t\t\t\t<option value='JrCaller'>Junior Caller</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"flex flex-column justify-center items-center ma2 pa3\" style={{ display: `${des === 'JrCaller' ? 'flex' : 'none'}` }}>\n\t\t\t\t\t\t<p>Assigned to:</p>\n\t\t\t\t\t\t<div className=\"flex justify-center items-center pa2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"assigned_to\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tautoComplete=\"blej\"\n\t\t\t\t\t\t\t\tplaceholder='Enter SrCaller Id'\n\t\t\t\t\t\t\t\tclassName='ma1'\n\t\t\t\t\t\t\t\tonChange={(event) => setAssignedField(event)}\n\t\t\t\t\t\t\t\tonBlur={() => assignedValidate()}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t\t<option value=''>Select SrCaller</option>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrCaller\n\t\t\t\t\t\t\t\t\t\t.filter(item => item.preferred_lang === language)\n\t\t\t\t\t\t\t\t\t\t.map((item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={item.telecaller_id}>{`${item.username}(${item.telecaller_id})/${item.preferred_lang}`}</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<div className=\"f4 red\">{assignedErr}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"f4 red\">{telecallerErr}</div>\n\n\t\t\t\t\t<div className=\"f4 red\">{desErr}</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\"\n\t\t\t\t\t\tonClick={() => addTelecaller()}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Telecaller\n                    </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/*-------------- PopUp fpr Payment CheckOut ----------------------------*/}\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up-payment-checkout' style={{ display: `${popPayState}`, zIndex: '1' ,width:'80vw'}}>\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => setPopPayStateField()}\n\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\"\n\t\t\t\t>\n\t\t\t\t\tX\n                </div>\n\t\t\t\t<div style={{ height: '100%' }} className='flex justify-center items-center flex-column'>\n\t\t\t\t\t<h2>TELECALLER LOGS</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Select Language</p>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tstyle={{ width: '185px' }}\n\t\t\t\t\t\t\tonChange={(event) => setTeamLangField(event)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='none'>None</option>\n\t\t\t\t\t\t\t<option value='Marathi'>Marathi</option>\n\t\t\t\t\t\t\t<option value='Hindi'>Hindi</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TeamViewer \n\t\t\t\t\theader={TeamHeader} \n\t\t\t\t\tcontent={caller} \n\t\t\t\t\tteamLang={teamLang} \n\t\t\t\t\tsetJrCallerArray={setJrCallerArray}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"jrcaller-drawer\">\n\t\t\t\t\t\t<JrCallerViewer \n\t\t\t\t\t\theader={JrHeader} \n\t\t\t\t\t\tcontent={jrcaller} \n\t\t\t\t\t\tsetJrLog={setJrLog}\n\t\t\t\t\t\tfetchJrCount={fetchJrCount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"count-drawer\">\n\t\t\t\t\t\t<JrCountViewer header={countHeader} content={count} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* ---------------------------------------------------- */}\n\n\n\t\t\t{/*----------------- PopUp fpr Batches ----------------------------*/}\n\t\t\t<div id='pop-up' className='bg-white shadow-4 pop-up-batches' style={{ display: `${popBatch}`, zIndex: '1' }}>\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => setPopBatches()}\n\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2\">\n\t\t\t\t\tX\n                </div>\n\t\t\t\t<div style={{ height: '100%' }} className='flex justify-center items-center flex-column'>\n\t\t\t\t\t<hr style={{ width: '99%', padding: '1px', backgroundColor: 'black' }} />\n\t\t\t\t\t<h2>BATCHES</h2>\n\t\t\t\t\t<hr style={{ width: '99%', padding: '1px', backgroundColor: 'black' }} />\n\t\t\t\t\t<div className=\"flex justify-center items-center\">\n\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\tclassName={`ma2 pa2 f4 b tc pointer ${batch === 'current' ? 'active1' : 'effect1 effect1-left'}`}\n\t\t\t\t\t\t\tonClick={() => changeBatch()}>\n\t\t\t\t\t\t\tCurrent\n\t                    </h3>\n\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\tclassName={`ma2 pa2 f4 b tc pointer ${batch === 'next' ? 'active1' : 'effect1 effect1-left'}`}\n\t\t\t\t\t\t\tonClick={() => changeBatch()}>\n\t\t\t\t\t\t\tNext\n\t                    </h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<BatchTable headerArray={batchDataHeader} ContentArray={batchContentArray} />\n\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tname={batch}\n\t\t\t\t\t\t\tclassName=\"pointer f6 link dim ph3 pv2 mb2 dib white br2 bg-dark-blue mh2\"\n\t\t\t\t\t\t\tonClick={(event) => batchHandler(event)}>\n\t\t\t\t\t\t\t{batch === 'current' ? 'Clear Batch' : 'Transfer to Current'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* ---------------------------------------------------- */}\n\n\t\t\t<div className=\"admin-container overflow-auto\">\n\t\t\t\t<div className='flex justify-center items-center flex-column'>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<select className='mr2'\n\t\t\t\t\t\t\tonChange={(event) => setLanguageFilterField(event)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"none\">--Select Language--</option>\n\t\t\t\t\t\t\t<option value='Marathi'>Marathi</option>\n\t\t\t\t\t\t\t<option value='Hindi'>Hindi</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tonChange={(event) => setFilterField(event)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"*\">--Select Filter--</option>\n\t\t\t\t\t\t\t<option value='*'>All</option>\n\t\t\t\t\t\t\t<option value='no'>Unassigned</option>\n\t\t\t\t\t\t\t<option value='Jryes'>Assigned to Jr Caller</option>\n\t\t\t\t\t\t\t<option value=\"Handed Over\">IsHandedOver(Y)</option>\n\t\t\t\t\t\t\t<option value=\"Not Handed Over\">IsHandedOver(N)</option>\n\t\t\t\t\t\t\t<option value=\"processed\">Processed</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\n\t\t\t\t\t\t\thref=\"#0\"\n\t\t\t\t\t\t\tonClick={() => showHandler()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tShow Data\n\t\t                    </div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\n\t\t\t\t\t\t\tonClick={() => showHandler()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRefresh\n\t\t                    </div>\n\t\t\t\t\t</div>\n\n\n\n\n\n\t\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"ma2\"\n\t\t\t\t\t\t\tplaceholder=\"Search by telecallerName\"\n\t\t\t\t\t\t\tstyle={{ width: \"190px\" }}\n\t\t\t\t\t\t\tonChange={(event) => setLeadNameFilter(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\n\t\t\t\t\t\t\tonClick={() => fetchByName()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSearch\n\t\t                \t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"unassigned-count flex\">\n\t\t\t\t\t\t<div className=\"h-unassigned b ma2\">\n\t\t\t\t\t\t\t<p>Hindi Unassigned Count: {hindiUnassigned}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"m-unassigned b ma2\">\n\t\t\t\t\t\t\t<p>Marathi Unassigned Count: {marathiUnassigned}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Table showHandler={showHandler} headerArray={leadDataHeader} ContentArray={leadData} />\n\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\n\t\t\t\t\t\t\tonClick={() => setPopStateField()}>\n\t\t\t\t\t\t\tRegister New Telecallers\n\t\t\t            \t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\n\t\t\t\t\t\t\tonClick={() => setPopPayStateField()}>\n\t\t\t\t\t\t\tCheck Telecaller Logs\n\t\t\t            \t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\"\n\t\t\t\t\t\t\tonClick={() => setPopBatches()}>\n\t\t\t\t\t\t\tCheck Batches\n\t\t\t            \t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\n\nexport default Admin;","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Navbar/Navbar.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Footer/Footer.js",["153","154","155","156","157","158","159"],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Form/Form.jsx",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Home/Home.jsx",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SignInPage/SignInPage.jsx",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JrCaller/JrCaller.jsx",["160"],"import React,{useState, useEffect} from 'react';\nimport JrTable from '../JrTable/JrTable.js';\n\nconst JrCaller = ({user}) => {\n\n    const {username, telecaller_id, preferred_lang} = user;\n\n    const leadDataHeader = [\n        'LeadId',\n        'LeadName',\n        'LeadContact',\n        'WhatsappNo',\n        'AccountOpening No',\n        'LeadCity',\n        'Demat Account',\n        'Broker Name',\n        'Prior Knowledge',\n        'Preffered Language',\n        'Status 1',\n        'Status 2',\n        'Handedover Status',\n        'Coded Status',\n        'Payment Status'\n    ]\n\n    const [leadData, setLeadData] = useState([])\n\n    useEffect(() => {\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: username,\n                telecaller_id: telecaller_id\n            })\n        })\n        .then(response => response.json())\n        .then(resp => {\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\n            {\n                setLeadData(resp)\n            }\n            else\n            {\n                alert('OOPS...something went wrong in fetching old leads.')\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const onRefresh = () => {\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/old', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: username,\n                telecaller_id: telecaller_id\n            })\n        })\n        .then(response => response.json())\n        .then(resp => {\n            if(resp!=='Unable to fetch' && resp[0].lead_id)\n            {\n                setLeadData(resp)\n            }\n            else\n            {\n                alert('OOPS...something went wrong in fetching old leads.')\n            }\n        })\n        .catch(err => console.log(err));\n    }\n\n    const onFetch = () => {\n        fetch('https://frozen-river-89705.herokuapp.com/jr/fetch/new', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: username,\n                telecaller_id: telecaller_id,\n                preferred_lang:preferred_lang\n            })\n        })\n        .then(response => response.json())\n        .then(resp => {\n            if((resp!=='Unable to fetch' || resp!=='Unable to insert') && resp[0].lead_id)\n            {\n                var newArr = leadData;\n                newArr.push(...resp)\n                setLeadData(newArr);\n            }\n            else if(resp==='Not enough leads')\n            {\n                alert('Not enough leads')\n            }\n            else if(resp==='30min')\n            {\n                alert('30 minutes not yet elapsed from last fetch')\n            }\n            else\n            {\n                alert('OOPS...something went wrong.Please try again.')\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"pa4\">\n            <div className=\"overflow-auto flex flex-column justify-center items-center\">\n            <div className=\"flex justify-center\">\n                <div \n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \n                href=\"#0\"\n                onClick = {() => onFetch()}\n                >\n                    Fetch New Leads            \n                </div>\n                <div \n                className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer\" \n                href=\"#0\"\n                onClick = {() => onRefresh()}\n                >\n                    Refresh        \n                </div>\n            </div>\n               <JrTable headerArray={leadDataHeader} ContentArray={leadData} onRefresh={onRefresh}/>\n            </div>\n        </div>\n    );\n}\n\nexport default JrCaller;","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SrCaller/SrCaller.jsx",["161","162","163"],"import React,{Component} from 'react';\nimport SrTable from '../SrTable/SrTable.js';\nimport ModalTable from '../ModalTable/ModalTable.js';\nimport useStateWithCallback from 'use-state-with-callback';\nimport Modal from 'react-modal';\n\n  class SrCaller extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        setPreview: false,\n        user: this.props.user,\n        jrCaller: {\n          jrName:'',\n          jrTeleId: ''\n        },\n        data: [],\n        jrContent: [],\n      }\n    }\n\n    setPreviewState = (s1) => {\n      this.setState({\n        setPreview: s1\n      },() =>{\n        console.log('')\n      })\n    }\n\n    fetchLogs = () => {\n      fetch('https://frozen-river-89705.herokuapp.com/sr/log',{\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n          username: this.state.jrCaller.jrName,\n          telecaller_id: this.state.jrCaller.jrTeleId\n        })\n      })\n      .then(response => response.json())\n      .then(resp => {\n        if(resp[0].lead_id)\n        {\n          this.setState({\n            jrContent: resp\n          }, () => {\n            console.log('')\n          })\n          this.setState({\n            setPreview: true\n          }, () => {\n            console.log('')\n          })\n        }\n        else if(resp==='empty')\n        {\n          alert(`No leads assigned to ${this.state.jrCaller.jrName}`)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('Failed to load telecaller logs.Please try again.')\n      })\n    }\n\n    setJrCaller = (username1, telecaller_id1) => {\n      var user = {\n        jrName: '',\n        jrTeleId: ''\n      }\n      user.jrName = username1\n      user.jrTeleId = telecaller_id1\n      this.setState({\n        jrCaller: user\n      }, () => {\n        this.fetchLogs()\n      })\n    }\n\n    componentDidMount(){\n      fetch('https://frozen-river-89705.herokuapp.com/sr/fetch',{\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            username: this.state.user.username,\n            telecaller_id: this.state.user.telecaller_id\n        })\n      })\n      .then(response => response.json())\n      .then(resp => {\n        if(resp[0].username)\n        {\n          this.setState({\n            data: resp\n          }, () => {\n            console.log('')\n          })\n        }\n      })\n      .catch(err => console.log(err))\n    }\n\n    render(){\n      const {data,setPreview,jrContent} = this.state;\n      const {jrName, jrTeleId} = this.state.jrCaller;\n      const leadDataHeader = [\n        'Username',\n        'Jr_Id'\n      ]\n\n      const jrHeader = [\n        'LeadId',\n        'LeadName',\n        'LeadContact',\n        'Whatsapp',\n        'AccountOpening No',\n        'LeadCity',\n        'Demat Account',\n        'Broker Name',\n        'Prior Knowledge',\n        'Preffered Language',\n        'Status1',\n        'Status2',\n        'UpdateAfterHandover',\n        'HandoverStatus',\n        'Coded Status',\n        'Payment Status'\n      ]\n\n      const {username, telecaller_id} = this.state.user;\n\n      return(\n        <div className=\"pa4\">\n          <SrTable \n          headerArray={leadDataHeader} \n          contentArray={data} \n          setPreviewState={this.setPreviewState} \n          setJrCaller={this.setJrCaller}\n          />\n          <Modal \n          isOpen={setPreview}\n          ariaHideApp={false} \n          >\n            <div className=\"flex justify-end\">\n              <p\n              className=\"f6 link dim ph3 pv2 mb2 dib white bg-dark-blue br2 ma2 pointer flex justify-end items-center\" \n              onClick={() => this.setPreviewState(false)}\n              >X</p> \n            </div>\n            <div className='flex flex-column justify-center items-center'>\n              <h1>{`LOGS OF ${jrName}(${jrTeleId})`}</h1>\n              <div\n              style={{cursor: 'pointer'}}\n              className=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\n              onClick={() => this.fetchLogs()}\n              >\n              Refresh\n              </div>\n              <ModalTable headerArray={jrHeader} contentArray={jrContent} fetchLogs={this.fetchLogs}/>\n            </div>\n          </Modal>\n        </div>\n      );\n    }\n  }\n\nexport default SrCaller;","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Table/Table.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/TeamViewer/TeamViewer.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/LogTable/LogTable.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/JrCallerViewer/JrCallerViewer.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/BatchTable/BatchTable.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/JrCountViewer/JrCountViewer.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JrTable/JrTable.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SrTable/SrTable.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/ModalTable/ModalTable.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/OpenAccount/OpenAccount.js",["164","165"],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/OurTraining/ourTraining.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/OurCourses/OurCourses.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/StillConfusing/StillConfusing.js",["166"],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/LogTable/LogRow.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/TeamViewer/TeamRow.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/BatchTable/BatchRow.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Admin/JrCallerViewer/JrViewRow.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/Table/Row.js",["167"],"import React,{useState} from 'react';\nimport 'tachyons';\nimport './Row.css';\n\nconst Row = ({rowObject, showHandler}) => {\n\tconst {lead_id,lead_phone_number} = rowObject;\n\tconst keyArr = Object.keys(rowObject);\n\tconst elementArray = []\n\tObject.keys(rowObject).forEach((key) => {\n\t\t\t\telementArray.push(rowObject[key])\n\t\t\t})\n\tconst [read, setRead] = useState(true)\n\tconst [username, setUsername] = useState(rowObject.username)\n\tconst [lead_name, setLeadName] = useState(rowObject.lead_name)\n\tconst [whatsapp_number, setWhatsapp] = useState(rowObject.whatsapp_number)\n\tconst [accountopening_number, setAccountOpening] = useState(rowObject.accountopening_number)\n\tconst [call_status_1, setStatus1] = useState(rowObject.call_status_1)\n\tconst [call_status_2, setStatus2] = useState(rowObject.call_status_2)\n\tconst [updatehandover, setUpdateHandover] = useState(rowObject.updatehandover)\n\tconst [lead_city, setLeadCity] = useState(rowObject.lead_city)\n\tconst [knowledge, setKnowledge] = useState(rowObject.prior_knowledge)\n\tconst [dmat_acc, setDmat_acc] = useState(rowObject.dmat_acc)\n\tconst [broker, setBroker] = useState(rowObject.broker)\n\tconst [preferred_lang, setLanguage] = useState(rowObject.preferred_lang)\n\tconst [microsoftid, setMicrosoftId] = useState(rowObject.microsoftid)\n\tconst [coded, setCoded] = useState(rowObject.coded)\n\tconst [payment, setPayment] = useState(rowObject.payment)\n\n\tconst onChange = (event) => {\n\t\tconst {value, name} = event.target;\n\t\tif(name==='username')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setUsername(rowObject.username)\n\t\t\t}\n\t\t\tsetUsername(value)\n\t\t}\n\t\telse if(name==='lead_name')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setLeadName(rowObject.lead_name)\n\t\t\t}\n\t\t\tsetLeadName(value);\n\t\t}\n\t\telse if(name==='call_status_1')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setStatus1(rowObject.call_status_1)\n\t\t\t}\n\t\t\tsetStatus1(value)\n\t\t}\n\t\telse if(name==='call_status_2')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setStatus2(rowObject.call_status_2)\n\t\t\t}\n\t\t\tsetStatus2(value)\n\t\t}\n\t\telse if(name==='updatehandover')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setUpdateHandover(rowObject.updatehandover)\n\t\t\t}\n\t\t\tsetUpdateHandover(value)\n\t\t}\n\t\telse if(name==='lead_city')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setLeadCity(rowObject.lead_city)\n\t\t\t}\n\t\t\tsetLeadCity(value)\n\t\t}\n\t\telse if(name==='prior_knowledge')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setKnowledge(rowObject.prior_knowledge)\n\t\t\t}\n\t\t\tsetKnowledge(value)\n\t\t}\n\t\telse if(name==='dmat_acc')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setDmat_acc(rowObject.dmat_acc)\n\t\t\t}\n\t\t\tsetDmat_acc(value)\n\t\t}\n\t\telse if(name==='broker_name')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setBroker(rowObject.broker_name)\n\t\t\t}\n\t\t\tsetBroker(value)\n\t\t}\n\t\telse if(name==='preferred_lang')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setLanguage(rowObject.preferred_lang)\n\t\t\t}\n\t\t\tsetLanguage(value)\n\t\t}\n\t\telse if(name==='coded')\n\t\t{\n\t\t\tif(value==='')\n\t\t\t{\n\t\t\t\treturn setCoded(rowObject.coded)\n\t\t\t}\n\t\t\tsetCoded(value)\n\t\t}\n\t\telse if(name==='whatsapp_number')\n\t\t{\n\t\t\tif(!value)\n\t\t\t{\n\t\t\t\treturn setWhatsapp(rowObject.whatsapp_number)\n\t\t\t}\n\t\t\tsetWhatsapp(value);\n\t\t}\n\t\telse if(name==='accountopening_number')\n\t\t{\n\t\t\tif (!value) {\n\t\t\t\treturn setAccountOpening(rowObject.accountopening_number)\n\t\t\t}\n\t\t\tsetAccountOpening(value);\n\t\t}\n\t\telse if(name==='microsoftid')\n\t\t{\n\t\t\tif (!value) {\n\t\t\t\treturn setMicrosoftId(rowObject.microsoftid)\n\t\t\t}\n\t\t\tsetMicrosoftId(value)\n\t\t}\n\t\telse if(name==='payment')\n\t\t{\n\t\t\tif(value==='')\n\t\t\t{\n\t\t\t\treturn setPayment(rowObject.payment)\n\t\t\t}\n\t\t\tsetPayment(value)\n\t\t}\n\t}\n\n\tconst onCheck = (event) => {\n\t\tconst {name, checked} = event.target;\n\t\tif (name==='whatsapp') \n\t\t{\n\t\t\tif(checked)\n\t\t\t{\n\t\t\t\tsetWhatsapp(rowObject.lead_phone_number)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetWhatsapp(rowObject.whatsapp_number)\n\t\t\t}\n\t\t}\n\t\telse if (name==='accountopening')\n\t\t{\n\t\t\tif (checked) \n\t\t\t{\n\t\t\t\tsetAccountOpening(rowObject.lead_phone_number)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetAccountOpening(rowObject.accountopening_number)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst onSave = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/update', {\n                method: 'post',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                username: username,\n                lead_name: lead_name,\n                lead_phone_number: rowObject.lead_phone_number,\n                whatsapp_number: whatsapp_number,\n                accountopening_number: accountopening_number,\n                call_status_1: call_status_1,\n                call_status_2: call_status_2,\n                updatehandover: updatehandover,\n                lead_city: lead_city,\n                prior_knowledge: knowledge,\n                dmat_acc: dmat_acc,\n                broker_name: broker,\n                preferred_lang: preferred_lang,\n                microsoftid: microsoftid,\n                coded: coded,\n                payment: payment\n                })\n             })\n\t        .then(response => response.json())\n\t        .then(resp => {\n\t       \t\tif (resp==='Success') {\n\t       \t\t\talert('Success')\n\t       \t\t\tshowHandler()\n\t       \t\t}\n\t       \t\telse if(resp==='Not Unique')\n\t       \t\t{\n\t       \t\t\talert('The given whatsapp/accountopening number is already registered.Please enter other contact and try again.')\n\t       \t\t}\n\t        })\n\t        .catch(err => {\n\t        \tconsole.log(err)\n\t        \talert('OOPSS...something went wrong please try again.')\n\t        })\n\t}\n\n\tconst onEditHandler = () => {\n\t\tif(read===true)\n\t\t{\n\t\t\tsetRead(false)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetRead(true)\n\t\t}\n\t}\n\n\tconst onAddToBatch = (event) => {\n\t\tconst name = event.target.getAttribute('name');\n\t\tif(name==='current')\n\t\t{\n\t\t\tvar c1 = window.confirm('Are you  sure you want to add lead to current batch.This will change the status of lead to processed and it will be stored seperately.');\n\t\t\tif(c1===true)\n\t\t\t{\n\t\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch', {\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlead_id: lead_id,\n\t\t\t\t\tlead_phone_number: lead_phone_number,\n\t\t\t\t\tname: name\n\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(resp => {\n\t\t\t\t\tif(resp==='Success')\n\t\t\t\t\t{\n\t\t\t\t\t\talert('Success')\n\t\t\t\t\t\tsetWhatsapp(rowObject.whatsapp_number)\n\t\t\t\t\t\tsetAccountOpening(rowObject.accountopening_number)\n\t\t\t\t\t\tconsole.log(whatsapp_number,accountopening_number)\n\t\t\t\t\t\tshowHandler()\n\t\t\t\t\t}\n\t\t\t\t\telse if(resp==='exists')\n\t\t\t\t\t{\n\t\t\t\t\t\talert('Sorry...But the lead already added to next batch.')\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar c2 = window.confirm('Are you  sure you want to add lead to next batch.This will change the status of lead to processed and it will be stored seperately.');\n\t\t\tif (c2===true) {\n\t\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/batch', {\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlead_id: lead_id,\n\t\t\t\t\tlead_phone_number: lead_phone_number,\n\t\t\t\t\tname: name\n\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(resp => {\n\t\t\t\t\tif(resp==='Success')\n\t\t\t\t\t{\n\t\t\t\t\t\talert('Success')\n\t\t\t\t\t\tshowHandler()\n\t\t\t\t\t}\n\t\t\t\t\telse if(resp==='exists')\n\t\t\t\t\t{\n\t\t\t\t\t\talert('Sorry...But the lead already added to current batch.')\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\t\n\t\t\t}\n\t\t}\n\t}\n\n\tconst addtoProcessedList = () => {\n\t\tif(window.confirm('Are you sure you want to add lead to processed list?'))\n\t\t{\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/processed', {\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlead_id: lead_id,\n\t\t\t\t\tlead_phone_number: lead_phone_number\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif(resp==='Success')\n\t\t\t\t{\n\t\t\t\t\talert(resp)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\talert('OOPSS...something went wrong.Please try again.')\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onRemove = () => {\n\t\tif(window.confirm('Are you sure you want to permanently delete the lead.'))\n\t\t{\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/admin/delete', {\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlead_id: lead_id,\n\t\t\t\t\tlead_phone_number: lead_phone_number\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(resp => {\n\t\t\t\tif(resp==='Success')\n\t\t\t\t{\n\t\t\t\t\talert(resp)\n\t\t\t\t\tshowHandler()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\talert('OOps...something went wrong.Please try again.')\n\t\t\t})\n\t\t}\n\t}\n\n\tconst x = 'Done'\n\tconst Edit = 'Edit'\n\n\treturn(\n\t\t<>\n\t\t{\n\t\t\telementArray.map((item,index) => {\n\t\t\t\tif(index===0 || index===3)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':null)}`}>{item}</td>\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if(index===4)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tname='whatsapp' \n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tautoComplete='blej'  \n\t\t\t\t\t\t\tdisabled={read}\n\t\t\t\t\t\t\tonClick={(event) => onCheck(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span style={{padding: '2px'}} className={`${coded!=='null'?'fw6 white':null}`}>Same as Lead Contact</span>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tname={keyArr[index]} \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tautoComplete='blej' \n\t\t\t\t\t\t\tplaceholder={`${whatsapp_number}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===5)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tname='accountopening' \n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tautoComplete='blej'  \n\t\t\t\t\t\t\t\tdisabled={read}\n\t\t\t\t\t\t\t\tonClick={(event) => onCheck(event)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span style={{padding: '2px'}} className={`${coded!=='null'?'fw6 white':null}`}>Same as Lead Contact</span>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tname={keyArr[index]} \n\t\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\t\tautoComplete='blej' \n\t\t\t\t\t\t\t\tplaceholder={`${accountopening_number}`} \n\t\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t);\t\n\t\t\t\t}\n\t\t\t\telse if(index===elementArray.length-1)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname={keyArr[index]}  \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tvalue={payment}\n\t\t\t\t\t\t\tdisabled={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=''>--select--</option>\n\t\t\t\t\t\t\t\t<option value='null'>Null</option>\n\t\t\t\t\t\t\t\t<option value='done'>Done</option>\n\t\t\t\t\t\t\t\t<option value='notDone'>NotDone</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===elementArray.length-2)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname={keyArr[index]}  \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tvalue={coded}\n\t\t\t\t\t\t\tdisabled={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=''>--select--</option>\n\t\t\t\t\t\t\t\t<option value='null'>Null</option>\n\t\t\t\t\t\t\t\t<option value='coded'>Coded</option>\n\t\t\t\t\t\t\t\t<option value='notCoded'>Not Coded</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index!==elementArray.length-1)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`pv3 pr4 bb b--black-20 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':null)}`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tname={keyArr[index]} \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tautoComplete='blej' \n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t<div className=\"flex\">\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`f6 tc ph3 pv2 mb2 dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-white')}`}\n\t\t\t>\n\t\t\t{`Leadno:${lead_id}`}\n\t\t\t</td>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\n\t\t\tonClick={() => onEditHandler()}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tread===false?x:Edit\n\t\t\t\t}\n\t\t\t</td>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\n\t\t\tonClick={() => onSave()}>\n\t\t\t\tSaveChanges\n\t\t\t</td>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\n\t\t\tonClick={() => onRemove()}>\n\t\t\t\tRemove\n\t\t\t</td>\n\t\t\t<td\n\t\t\tname='current'\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='coded'?'block':'none'}`}}\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\n\t\t\tonClick={(event) => onAddToBatch(event)}\n\t\t\t>\n\t\t\t\tAddtoCurrentBatch\n\t\t\t</td>\n\t\t\t<td\n\t\t\tname='next'\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='coded'?'block':'none'}`}}\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\n\t\t\tonClick={(event) => onAddToBatch(event)}\n\t\t\t>\n\t\t\t\tAddtoNextBatch\n\t\t\t</td>\n\t\t\t<td\n\t\t\tname='next'\n\t\t\tstyle={{cursor: 'pointer', display: `${coded==='notCoded'?'block':'none'}`}}\n\t\t\tclassName={`f6 tc link dim ph3 pv2 mb2 white dib br2 ma2 ${coded==='coded'?'bg-green':(coded==='notCoded'?'bg-red':'bg-dark-blue')}`}\n\t\t\tonClick={() => addtoProcessedList()}\n\t\t\t>\n\t\t\t\tAddtoProcessedList\n\t\t\t</td>\n\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Row;","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JrTable/JrRow.js",["168"],"import React,{useState} from 'react';\nimport './JrRow.css';\n\nconst JrRow = ({rowObject, onRefresh}) => {\n\tconst {lead_id, lead_phone_number, whatsapp_number, handoverstatus, call_status_1, call_status_2, coded} = rowObject;\n\tvar disable;\n\n\tif (handoverstatus==='Handed') {\n\t\tdisable=true;\n\t}\n\telse\n\t{\n\t\tdisable=false;\n\t}\n\n\tconst elementArray = []\n\tObject.keys(rowObject).forEach((key) => {\n\t\t\t\telementArray.push(rowObject[key])\n\t\t\t})\n\n\tconst [status1, setStatus1] = useState(call_status_1)\n\tconst [status2, setStatus2] = useState(call_status_2)\n\n\tconst [whatsapp, setWhatsapp] = useState(whatsapp_number);\n\n\tconst onChange = (event) => {\n\t\tconst {value, name} = event.target;\n\t\tif(name==='call_status_1')\n\t\t{\n\t\t\tsetStatus1(value);\n\t\t}\n\t\telse if(name==='call_status_2')\n\t\t{\n\t\t\tsetStatus2(value);\n\t\t}\n\t\telse if(name==='whatsapp')\n\t\t{\n\t\t\tsetWhatsapp(value);\n\t\t}\n\t\tconsole.log(whatsapp);\n\t}\n\n\tconst onSubmit = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/update', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n            \tlead_phone_number: lead_phone_number,\n                call_status_1: status1,\n                call_status_2: status2,\n                whatsapp_number: whatsapp\n            })\n\t        })\n\t        .then(response => response.json())\n\t        .then(resp => {\n\t            if (resp==='Success') {\n\t            \talert('Status updated successfully.')\n\t            \tonRefresh();\n\t            }\n\t            else\n\t            {\n\t            \talert('OOps something went wrong.Please try again.')\n\t            }\n\t        })\n\t        .catch(err => console.log(err))\n\t}\n\n\tconst [read, setRead] = useState(true)\n\n\tconst onEditHandler = () => {\n\t\tif(read===true)\n\t\t{\n\t\t\tsetRead(false)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetRead(true)\n\t\t}\n\t}\n\n\tconst x = 'Done'\n\tconst Edit = 'Edit'\n\n\tconst onHandover = () => {\n\t\tif(handoverstatus!=='Handed')\n\t\t{\n\t\t\tfetch('https://frozen-river-89705.herokuapp.com/jr/handover', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n            \tlead_id: lead_id,\n            \tlead_phone_number: lead_phone_number\n            })\n\t        })\n\t        .then(response => response.json())\n\t        .then(resp => {\n\t            if (resp==='Success') {\n\t            \talert('Status updated successfully.Refresh to view changes.')\n\t            }\n\t            else\n\t            {\n\t            \talert('OOps something went wrong.Please try again.')\n\t            }\n\t        })\n\t        .catch(err => console.log(err))\n\t\t}\n\t}\n\n\treturn(\n\t\t<>\n\t\t{\n\t\t\telementArray.map((item,index) => {\n\t\t\t\tif(index>=0 && index<=9 && index!==3)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===3)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"whatsapp\" \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\telse if(index===10)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"call_status_1\" \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===11)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"call_status_2\" \n\t\t\t\t\t\t\tautoComplete='blej' \n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\"\n\t\t\tonClick={() => onEditHandler()}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tread===false?x:Edit\n\t\t\t\t}\n\t\t\t</td>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`}\n\t\t\thref=\"#0\"\n\t\t\tonClick = {() => onSubmit()} \n\t\t\t>\n\t\t\t\tUpdateStatus\n\t\t\t</td>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName={`${handoverstatus==='Handed'?'bg-moon-gray black':'bg-dark-blue white'} f6 link dim ph3 pv2 mb2 dib br2 ma2`} href=\"#0\" \n\t\t\tonClick = {() => onHandover()} \n\t\t\t>\n\t\t\t\tHandover\n\t\t\t</td>\n\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default JrRow;","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/SrTable/SrRow.js",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/ModalTable/ModalRow.js",["169","170"],"import React,{useState} from 'react';\n\nconst ModalRow = ({rowObject,fetchLogs}) => {\n\tconst {lead_id, lead_phone_number, whatsapp_number, accountopening_number, handoverstatus, call_status_1, call_status_2, updatehandover, coded} = rowObject;\n\n\tconst [status1, setStatus1] = useState(call_status_1)\n\tconst [status2, setStatus2] = useState(call_status_2)\n\tconst [update, setUpdate] = useState(updatehandover)\n\tconst [whatsapp, setWhatsapp] = useState(whatsapp_number)\n\tconst [accountopening, setAccountOpening] = useState(accountopening_number)\n\n\tconst onChange = (event) => {\n\t\tconst {value, name} = event.target;\n\t\tif(name==='call_status_1')\n\t\t{\n\t\t\tsetStatus1(value);\n\t\t}\n\t\telse if(name==='call_status_2')\n\t\t{\n\t\t\tsetStatus2(value);\n\t\t}\n\t\telse if(name==='updatehandover')\n\t\t{\n\t\t\tsetUpdate(value);\n\t\t}\n\t\telse if(name==='whatsapp')\n\t\t{\n\t\t\tsetWhatsapp(value);\n\t\t}\n\t\telse if(name==='accountopening')\n\t\t{\n\t\t\tsetAccountOpening(value);\n\t\t}\n\t}\n\n\tconst [read, setRead] = useState(true)\n\n\tconst onSubmit = () => {\n\t\tfetch('https://frozen-river-89705.herokuapp.com/sr/update', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n            \tlead_phone_number: lead_phone_number,\n                call_status_1: status1,\n                call_status_2: status2,\n                updatehandover: update,\n                whatsapp_number: whatsapp,\n                accountopening_number: accountopening\n            })\n\t        })\n\t        .then(response => response.json())\n\t        .then(resp => {\n\t            if (resp==='Success') {\n\t            \talert('Status updated successfully.')\n\t            \tfetchLogs()\n\t            }\n\t            else if(resp==='Not Unique')\n\t       \t\t{\n\t       \t\t\talert('The given whatsapp/accountopening number is already registered.Please enter other contact and try again.')\n\t       \t\t}\n\t            else\n\t            {\n\t            \talert('OOps something went wrong.Please try again.')\n\t            }\n\t        })\n\t        .catch(err => console.log(err))\n\t}\n\n\tconst onEditHandler = () => {\n\t\tif(read===true)\n\t\t{\n\t\t\tsetRead(false)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetRead(true)\n\t\t}\n\t}\n\n\tconst x = 'Done'\n\tconst Edit = 'Edit'\n\n\tconst elementArray = []\n\tObject.keys(rowObject).forEach((key) => {\n\t\t\t\telementArray.push(rowObject[key])\n\t\t\t})\n\n\treturn(\n\t\t<>\n\t\t{\n\t\t\telementArray.map((item,index) => {\n\t\t\t\tif(index>=0 && index<=9 && index!==3 && index!=4)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>{item}</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===3)\n\t\t\t\t{\n\t\t\t\t\treturn(\t\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"whatsapp\" \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===4)\n\t\t\t\t{\n\t\t\t\t\treturn(\t\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"accountopening\" \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===10)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"call_status_1\" \n\t\t\t\t\t\t\tautoComplete='blej'\n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===11)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"call_status_2\" \n\t\t\t\t\t\t\tautoComplete='blej' \n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if(index===12)\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\t\tname=\"updatehandover\" \n\t\t\t\t\t\t\tautoComplete='blej' \n\t\t\t\t\t\t\tplaceholder={`${item}`} \n\t\t\t\t\t\t\treadOnly={read}\n\t\t\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<td key={index} className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} pv3 pr3 bb b--black-20`}>\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t<div className={`${coded==='coded'?'bg-green white fw6':(coded==='notCoded'?'bg-red white fw6':(handoverstatus==='Handed'?'bg-moon-gray':null))} flex`}>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName='bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2'\n\t\t\tonClick={() => onEditHandler()}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tread===false?x:Edit\n\t\t\t\t}\n\t\t\t</td>\n\t\t\t<td\n\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\tclassName=\"bg-dark-blue white f6 link dim ph3 pv2 mb2 dib br2 ma2\"\n\t\t\tonClick = {() => onSubmit()} \n\t\t\t>\n\t\t\t\tUpdateStatus\n\t\t\t</td>\n\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default ModalRow;","/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/JoinOurTelegram/JoinOurTelegram.jsx",[],"/Users/sohamkhade/debugged_exe/telecaller_frontend/src/Components/BackgroundCarousel/BackgroundCarousel.jsx",["171","172"],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":6,"column":22,"nodeType":"179","messageId":"180","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"181","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":16},{"ruleId":"177","severity":1,"message":"182","line":12,"column":8,"nodeType":"179","messageId":"180","endLine":12,"endColumn":21},{"ruleId":"177","severity":1,"message":"183","line":47,"column":8,"nodeType":"179","messageId":"180","endLine":47,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":161,"column":3,"nodeType":"186","messageId":"187","endLine":164,"endColumn":4},{"ruleId":"188","severity":1,"message":"189","line":531,"column":5,"nodeType":"190","endLine":531,"endColumn":12,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":25,"column":71,"nodeType":"194","messageId":"195","endLine":25,"endColumn":173,"fix":"196"},{"ruleId":"192","severity":1,"message":"193","line":31,"column":33,"nodeType":"194","messageId":"195","endLine":31,"endColumn":202,"fix":"197"},{"ruleId":"192","severity":1,"message":"193","line":32,"column":33,"nodeType":"194","messageId":"195","endLine":32,"endColumn":204,"fix":"198"},{"ruleId":"192","severity":1,"message":"193","line":33,"column":33,"nodeType":"194","messageId":"195","endLine":33,"endColumn":180,"fix":"199"},{"ruleId":"192","severity":1,"message":"193","line":34,"column":33,"nodeType":"194","messageId":"195","endLine":34,"endColumn":188,"fix":"200"},{"ruleId":"192","severity":1,"message":"193","line":35,"column":33,"nodeType":"194","messageId":"195","endLine":35,"endColumn":192,"fix":"201"},{"ruleId":"192","severity":1,"message":"193","line":42,"column":20,"nodeType":"194","messageId":"195","endLine":42,"endColumn":90,"fix":"202"},{"ruleId":"188","severity":1,"message":"203","line":49,"column":8,"nodeType":"190","endLine":49,"endColumn":10,"suggestions":"204"},{"ruleId":"177","severity":1,"message":"205","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":28},{"ruleId":"177","severity":1,"message":"206","line":129,"column":14,"nodeType":"179","messageId":"180","endLine":129,"endColumn":22},{"ruleId":"177","severity":1,"message":"207","line":129,"column":24,"nodeType":"179","messageId":"180","endLine":129,"endColumn":37},{"ruleId":"192","severity":1,"message":"193","line":31,"column":37,"nodeType":"194","messageId":"195","endLine":31,"endColumn":134,"fix":"208"},{"ruleId":"192","severity":1,"message":"193","line":51,"column":37,"nodeType":"194","messageId":"195","endLine":51,"endColumn":120,"fix":"209"},{"ruleId":"210","severity":1,"message":"211","line":19,"column":21,"nodeType":"194","endLine":19,"endColumn":122},{"ruleId":"212","severity":1,"message":"213","line":347,"column":34,"nodeType":"214","messageId":"215","endLine":347,"endColumn":36},{"ruleId":"177","severity":1,"message":"216","line":13,"column":3,"nodeType":"179","messageId":"180","endLine":13,"endColumn":10},{"ruleId":"177","severity":1,"message":"217","line":4,"column":9,"nodeType":"179","messageId":"180","endLine":4,"endColumn":16},{"ruleId":"218","severity":1,"message":"219","line":92,"column":50,"nodeType":"220","messageId":"221","endLine":92,"endColumn":52},{"ruleId":"192","severity":1,"message":"193","line":23,"column":13,"nodeType":"194","messageId":"195","endLine":27,"endColumn":14,"fix":"222"},{"ruleId":"192","severity":1,"message":"193","line":32,"column":13,"nodeType":"194","messageId":"195","endLine":36,"endColumn":14,"fix":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'LogTable' is defined but never used.","'SrcallerArray' is assigned a value but never used.","'logDataHeader' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBatch'. Either include it or remove the dependency array.","ArrayExpression",["226"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"227","text":"228"},{"range":"229","text":"228"},{"range":"230","text":"228"},{"range":"231","text":"228"},{"range":"232","text":"228"},{"range":"233","text":"228"},{"range":"234","text":"228"},"React Hook useEffect has missing dependencies: 'telecaller_id' and 'username'. Either include them or remove the dependency array.",["235"],"'useStateWithCallback' is defined but never used.","'username' is assigned a value but never used.","'telecaller_id' is assigned a value but never used.",{"range":"236","text":"228"},{"range":"237","text":"228"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'disable' is assigned a value but never used.","'lead_id' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"238","text":"228"},{"range":"239","text":"228"},"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},[1468,1468]," rel=\"noreferrer\"",[2012,2012],[2282,2282],[2525,2525],[2785,2785],[3043,3043],[3527,3527],{"desc":"242","fix":"243"},[2144,2144],[3820,3820],[1062,1062],[1336,1336],"Update the dependencies array to be: [batch, fetchBatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [telecaller_id, username]",{"range":"246","text":"247"},[11501,11508],"[batch, fetchBatch]",[1321,1323],"[telecaller_id, username]"]